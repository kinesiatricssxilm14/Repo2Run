2024-12-30T09:39:46.982798758Z [?2004hroot@a6be3969aece:/# [7mexport http_proxy= https_proxy= no_proxy=.d.org[27m
[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cexport http_proxy= https_proxy= no_proxy=.d.org
2024-12-30T09:39:49.653453152Z [?2004l
[?2004hroot@a6be3969aece:/# [7mmkdir -p ~/.pip && touch ~/.pip/pip.conf[27m
2024-12-30T09:39:50.218733648Z 
[7mecho "[global]" >> ~/.pip/pip.conf && echo "index-url=/simple/" >> ~/.pip/pip.conf && echo "[install]" >> ~/.pip/pip.conf && echo "trusted-host=dpypi.d.org[27m[7m"[27m[7m >> ~/.pip/pip.conf[27m[A[A[Cmkdir -p ~/.pip && touch ~/.pip/pip.conf
2024-12-30T09:39:50.218758701Z 
echo "[global]" >> ~/.pip/pip.conf && echo "index-url=/simple/" >> ~/.pip/pip.conf && echo "[install]" >> ~/.pip/pip.conf && echo "trusted-host=dpypi.d.org" >> ~/.pip/pip.conf
2024-12-30T09:39:54.003397197Z [?2004l
[?2004hroot@a6be3969aece:/# [7mapt-get update && apt-get install -y curl[27m
[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Capt-get update && apt-get install -y curl
2024-12-30T09:39:54.526174484Z [?2004l

0% [Working]
            
Get:1 http://deb.debian.org/debian bookworm InRelease [151 kB]
2024-12-30T09:39:55.200580901Z 
0% [1 InRelease 2048 B/151 kB 1%]
                                 
0% [Working]
0% [Waiting for headers]
                        
Get:2 http://deb.debian.org/debian bookworm-updates InRelease [55.4 kB]
2024-12-30T09:39:55.473571857Z 
0% [2 InRelease 2051 B/55.4 kB 4%]
                                  
0% [Working]
0% [Waiting for headers]
                        
Get:3 http://deb.debian.org/debian-security bookworm-security InRelease [48.0 kB]
2024-12-30T09:39:55.744288250Z 
0% [3 InRelease 2012 B/48.0 kB 4%]
                                  
0% [Working]
16% [Waiting for headers]
                         
Get:4 http://deb.debian.org/debian bookworm/main amd64 Packages [8789 kB]
2024-12-30T09:39:56.925758546Z 
16% [4 Packages 2043 B/8789 kB 0%]
28% [4 Packages 1458 kB/8789 kB 17%]
                                    
91% [Waiting for headers]
91% [4 Packages store 0 B] [Waiting for headers]
                                                
Get:5 http://deb.debian.org/debian bookworm-updates/main amd64 Packages [8856 B]
2024-12-30T09:39:57.241905930Z 
91% [4 Packages store 0 B] [5 Packages 7715 B/8856 B 87%]
                                                         
91% [4 Packages store 0 B] [Waiting for headers]
                                                
Get:6 http://deb.debian.org/debian-security bookworm-security/main amd64 Packages [240 kB]
2024-12-30T09:39:57.701694679Z 
92% [4 Packages store 0 B] [6 Packages 53.7 kB/240 kB 22%]
                                                          
93% [4 Packages store 0 B]
                          
96% [Working]
96% [5 Packages store 0 B]
                          
98% [Working]
98% [6 Packages store 0 B]
                          
100% [Working]
              
Fetched 9292 kB in 4s (2530 kB/s)
2024-12-30T09:39:58.208897745Z 
Reading package lists... 0%

Reading package lists... 0%

Reading package lists... 0%

Reading package lists... 96%

Reading package lists... 96%

Reading package lists... 96%

Reading package lists... 96%

Reading package lists... 99%

Reading package lists... 99%

Reading package lists... Done

2024-12-30T09:39:58.727032304Z 
Reading package lists... 0%

Reading package lists... 0%

Reading package lists... 0%

Reading package lists... 96%

Reading package lists... 96%

Reading package lists... 96%

Reading package lists... 96%

Reading package lists... 99%

Reading package lists... 99%

Reading package lists... Done

2024-12-30T09:39:58.857804181Z 
Building dependency tree... 0%

Building dependency tree... 0%

Building dependency tree... 50%

Building dependency tree... 50%

Building dependency tree... Done

2024-12-30T09:39:58.858578649Z 
Reading state information... 0% 

Reading state information... 0%

Reading state information... Done

2024-12-30T09:39:58.862914988Z curl is already the newest version (7.88.1-10+deb12u8).
2024-12-30T09:39:58.992472806Z 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
2024-12-30T09:40:01.226949491Z [?2004hroot@a6be3969aece:/# [7mpip install pytest[27mpip install pytest
2024-12-30T09:40:02.825715658Z [?2004l
Looking in indexes: /simple/
2024-12-30T09:40:02.960339294Z Collecting pytest
2024-12-30T09:40:02.981426171Z   Downloading /packages/pytest/pytest-8.3.4-py3-none-any.whl (343 kB)
2024-12-30T09:40:03.002574461Z [?25l     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/343.1 kB[0m [31m?[0m eta [36m-:--:--[0m
[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m343.1/343.1 kB[0m [31m20.2 MB/s[0m eta [36m0:00:00[0m
2024-12-30T09:40:03.067188376Z [?25hCollecting tomli>=1
2024-12-30T09:40:03.085207271Z   Downloading /packages/tomli/tomli-2.2.1-py3-none-any.whl (14 kB)
2024-12-30T09:40:03.127387927Z Collecting exceptiongroup>=1.0.0rc8
2024-12-30T09:40:03.149161621Z   Downloading /packages/exceptiongroup/exceptiongroup-1.2.2-py3-none-any.whl (16 kB)
2024-12-30T09:40:03.205185198Z Collecting packaging
2024-12-30T09:40:03.225850461Z   Downloading /packages/packaging/packaging-24.2-py3-none-any.whl (65 kB)
2024-12-30T09:40:03.236871352Z [?25l     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/65.5 kB[0m [31m?[0m eta [36m-:--:--[0m
[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m65.5/65.5 kB[0m [31m7.7 MB/s[0m eta [36m0:00:00[0m
2024-12-30T09:40:03.258412793Z [?25hCollecting iniconfig
2024-12-30T09:40:03.274756470Z   Downloading /packages/iniconfig/iniconfig-2.0.0-py3-none-any.whl (5.9 kB)
2024-12-30T09:40:03.318423210Z Collecting pluggy<2,>=1.5
2024-12-30T09:40:03.334827341Z   Downloading /packages/pluggy/pluggy-1.5.0-py3-none-any.whl (20 kB)
2024-12-30T09:40:03.417245887Z Installing collected packages: tomli, pluggy, packaging, iniconfig, exceptiongroup, pytest
2024-12-30T09:40:03.713169954Z Successfully installed exceptiongroup-1.2.2 iniconfig-2.0.0 packaging-24.2 pluggy-1.5.0 pytest-8.3.4 tomli-2.2.1
2024-12-30T09:40:03.713374473Z [33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv[0m[33m
2024-12-30T09:40:03.817541013Z [0m
2024-12-30T09:40:03.817579056Z [1m[[0m[34;49mnotice[0m[1;39;49m][0m[39;49m A new release of pip is available: [0m[31;49m23.0.1[0m[39;49m -> [0m[32;49m24.3.1[0m
2024-12-30T09:40:03.817582824Z [1m[[0m[34;49mnotice[0m[1;39;49m][0m[39;49m To update, run: [0m[32;49mpip install --upgrade pip[0m
2024-12-30T09:40:13.658151239Z [?2004hroot@a6be3969aece:/# git clone [7mhttps://github.com/paradigmxyz/spice.git[27m
[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chttps://github.com/paradigmxyz/spice.git
2024-12-30T09:40:13.659634571Z [?2004l
Cloning into 'spice'...
2024-12-30T09:40:15.270249037Z remote: Enumerating objects: 351, done.[K
2024-12-30T09:40:15.278345695Z remote: Counting objects:   0% (1/144)[K
remote: Counting objects:   1% (2/144)[K
remote: Counting objects:   2% (3/144)[K
remote: Counting objects:   3% (5/144)[K
remote: Counting objects:   4% (6/144)[K
remote: Counting objects:   5% (8/144)[K
remote: Counting objects:   6% (9/144)[K
remote: Counting objects:   7% (11/144)[K
remote: Counting objects:   8% (12/144)[K
remote: Counting objects:   9% (13/144)[K
remote: Counting objects:  10% (15/144)[K
remote: Counting objects:  11% (16/144)[K
remote: Counting objects:  12% (18/144)[K
remote: Counting objects:  13% (19/144)[K
remote: Counting objects:  14% (21/144)[K
remote: Counting objects:  15% (22/144)[K
remote: Counting objects:  16% (24/144)[K
remote: Counting objects:  17% (25/144)[K
remote: Counting objects:  18% (26/144)[K
remote: Counting objects:  19% (28/144)[K
remote: Counting objects:  20% (29/144)[K
remote: Counting objects:  21% (31/144)[K
remote: Counting objects:  22% (32/144)[K
remote: Counting objects:  23% (34/144)[K
remote: Counting objects:  24% (35/144)[K
remote: Counting objects:  25% (36/144)[K
remote: Counting objects:  26% (38/144)[K
remote: Counting objects:  27% (39/144)[K
remote: Counting objects:  28% (41/144)[K
remote: Counting objects:  29% (42/144)[K
remote: Counting objects:  30% (44/144)[K
remote: Counting objects:  31% (45/144)[K
remote: Counting objects:  32% (47/144)[K
remote: Counting objects:  33% (48/144)[K
remote: Counting objects:  34% (49/144)[K
remote: Counting objects:  35% (51/144)[K
remote: Counting objects:  36% (52/144)[K
remote: Counting objects:  37% (54/144)[K
remote: Counting objects:  38% (55/144)[K
remote: Counting objects:  39% (57/144)[K
remote: Counting objects:  40% (58/144)[K
remote: Counting objects:  41% (60/144)[K
remote: Counting objects:  42% (61/144)[K
remote: Counting objects:  43% (62/144)[K
remote: Counting objects:  44% (64/144)[K
remote: Counting objects:  45% (65/144)[K
remote: Counting objects:  46% (67/144)[K
remote: Counting objects:  47% (68/144)[K
remote: Counting objects:  48% (70/144)[K
remote: Counting objects:  49% (71/144)[K
remote: Counting objects:  50% (72/144)[K
remote: Counting objects:  51% (74/144)[K
remote: Counting objects:  52% (75/144)[K
remote: Counting objects:  53% (77/144)[K
remote: Counting objects:  54% (78/144)[K
remote: Counting objects:  55% (80/144)[K
remote: Counting objects:  56% (81/144)[K
remote: Counting objects:  57% (83/144)[K
remote: Counting objects:  58% (84/144)[K
remote: Counting objects:  59% (85/144)[K
remote: Counting objects:  60% (87/144)[K
remote: Counting objects:  61% (88/144)[K
remote: Counting objects:  62% (90/144)[K
remote: Counting objects:  63% (91/144)[K
remote: Counting objects:  64% (93/144)[K
remote: Counting objects:  65% (94/144)[K
remote: Counting objects:  66% (96/144)[K
remote: Counting objects:  67% (97/144)[K
remote: Counting objects:  68% (98/144)[K
remote: Counting objects:  69% (100/144)[K
remote: Counting objects:  70% (101/144)[K
remote: Counting objects:  71% (103/144)[K
remote: Counting objects:  72% (104/144)[K
remote: Counting objects:  73% (106/144)[K
remote: Counting objects:  74% (107/144)[K
remote: Counting objects:  75% (108/144)[K
remote: Counting objects:  76% (110/144)[K
remote: Counting objects:  77% (111/144)[K
remote: Counting objects:  78% (113/144)[K
remote: Counting objects:  79% (114/144)[K
remote: Counting objects:  80% (116/144)[K
remote: Counting objects:  81% (117/144)[K
remote: Counting objects:  82% (119/144)[K
remote: Counting objects:  83% (120/144)[K
remote: Counting objects:  84% (121/144)[K
remote: Counting objects:  85% (123/144)[K
remote: Counting objects:  86% (124/144)[K
remote: Counting objects:  87% (126/144)[K
remote: Counting objects:  88% (127/144)[K
remote: Counting objects:  89% (129/144)[K
remote: Counting objects:  90% (130/144)[K
remote: Counting objects:  91% (132/144)[K
remote: Counting objects:  92% (133/144)[K
remote: Counting objects:  93% (134/144)[K
remote: Counting objects:  94% (136/144)[K
remote: Counting objects:  95% (137/144)[K
remote: Counting objects:  96% (139/144)[K
remote: Counting objects:  97% (140/144)[K
remote: Counting objects:  98% (142/144)[K
remote: Counting objects:  99% (143/144)[K
remote: Counting objects: 100% (144/144)[K
remote: Counting objects: 100% (144/144), done.[K
2024-12-30T09:40:15.283000182Z remote: Compressing objects:   1% (1/89)[K
remote: Compressing objects:   2% (2/89)[K
remote: Compressing objects:   3% (3/89)[K
remote: Compressing objects:   4% (4/89)[K
remote: Compressing objects:   5% (5/89)[K
remote: Compressing objects:   6% (6/89)[K
remote: Compressing objects:   7% (7/89)[K
remote: Compressing objects:   8% (8/89)[K
remote: Compressing objects:  10% (9/89)[K
remote: Compressing objects:  11% (10/89)[K
remote: Compressing objects:  12% (11/89)[K
remote: Compressing objects:  13% (12/89)[K
remote: Compressing objects:  14% (13/89)[K
remote: Compressing objects:  15% (14/89)[K
remote: Compressing objects:  16% (15/89)[K
remote: Compressing objects:  17% (16/89)[K
remote: Compressing objects:  19% (17/89)[K
remote: Compressing objects:  20% (18/89)[K
remote: Compressing objects:  21% (19/89)[K
remote: Compressing objects:  22% (20/89)[K
remote: Compressing objects:  23% (21/89)[K
remote: Compressing objects:  24% (22/89)[K
remote: Compressing objects:  25% (23/89)[K
remote: Compressing objects:  26% (24/89)[K
remote: Compressing objects:  28% (25/89)[K
remote: Compressing objects:  29% (26/89)[K
remote: Compressing objects:  30% (27/89)[K
remote: Compressing objects:  31% (28/89)[K
remote: Compressing objects:  32% (29/89)[K
remote: Compressing objects:  33% (30/89)[K
remote: Compressing objects:  34% (31/89)[K
remote: Compressing objects:  35% (32/89)[K
remote: Compressing objects:  37% (33/89)[K
remote: Compressing objects:  38% (34/89)[K
remote: Compressing objects:  39% (35/89)[K
remote: Compressing objects:  40% (36/89)[K
remote: Compressing objects:  41% (37/89)[K
remote: Compressing objects:  42% (38/89)[K
remote: Compressing objects:  43% (39/89)[K
remote: Compressing objects:  44% (40/89)[K
remote: Compressing objects:  46% (41/89)[K
remote: Compressing objects:  47% (42/89)[K
remote: Compressing objects:  48% (43/89)[K
remote: Compressing objects:  49% (44/89)[K
remote: Compressing objects:  50% (45/89)[K
remote: Compressing objects:  51% (46/89)[K
remote: Compressing objects:  52% (47/89)[K
remote: Compressing objects:  53% (48/89)[K
remote: Compressing objects:  55% (49/89)[K
remote: Compressing objects:  56% (50/89)[K
remote: Compressing objects:  57% (51/89)[K
remote: Compressing objects:  58% (52/89)[K
remote: Compressing objects:  59% (53/89)[K
remote: Compressing objects:  60% (54/89)[K
remote: Compressing objects:  61% (55/89)[K
remote: Compressing objects:  62% (56/89)[K
remote: Compressing objects:  64% (57/89)[K
remote: Compressing objects:  65% (58/89)[K
remote: Compressing objects:  66% (59/89)[K
remote: Compressing objects:  67% (60/89)[K
remote: Compressing objects:  68% (61/89)[K
remote: Compressing objects:  69% (62/89)[K
remote: Compressing objects:  70% (63/89)[K
remote: Compressing objects:  71% (64/89)[K
remote: Compressing objects:  73% (65/89)[K
remote: Compressing objects:  74% (66/89)[K
remote: Compressing objects:  75% (67/89)[K
remote: Compressing objects:  76% (68/89)[K
remote: Compressing objects:  77% (69/89)[K
remote: Compressing objects:  78% (70/89)[K
remote: Compressing objects:  79% (71/89)[K
remote: Compressing objects:  80% (72/89)[K
remote: Compressing objects:  82% (73/89)[K
remote: Compressing objects:  83% (74/89)[K
remote: Compressing objects:  84% (75/89)[K
remote: Compressing objects:  85% (76/89)[K
remote: Compressing objects:  86% (77/89)[K
remote: Compressing objects:  87% (78/89)[K
remote: Compressing objects:  88% (79/89)[K
remote: Compressing objects:  89% (80/89)[K
remote: Compressing objects:  91% (81/89)[K
remote: Compressing objects:  92% (82/89)[K
remote: Compressing objects:  93% (83/89)[K
remote: Compressing objects:  94% (84/89)[K
remote: Compressing objects:  95% (85/89)[K
remote: Compressing objects:  96% (86/89)[K
remote: Compressing objects:  97% (87/89)[K
remote: Compressing objects:  98% (88/89)[K
remote: Compressing objects: 100% (89/89)[K
remote: Compressing objects: 100% (89/89), done.[K
2024-12-30T09:40:15.507349631Z Receiving objects:   0% (1/351)
Receiving objects:   1% (4/351)
Receiving objects:   2% (8/351)
Receiving objects:   3% (11/351)
Receiving objects:   4% (15/351)
Receiving objects:   5% (18/351)
Receiving objects:   6% (22/351)
Receiving objects:   7% (25/351)
Receiving objects:   8% (29/351)
Receiving objects:   9% (32/351)
Receiving objects:  10% (36/351)
Receiving objects:  11% (39/351)
Receiving objects:  12% (43/351)
Receiving objects:  13% (46/351)
Receiving objects:  14% (50/351)
Receiving objects:  15% (53/351)
Receiving objects:  16% (57/351)
Receiving objects:  17% (60/351)
Receiving objects:  18% (64/351)
Receiving objects:  19% (67/351)
Receiving objects:  20% (71/351)
Receiving objects:  21% (74/351)
Receiving objects:  22% (78/351)
Receiving objects:  23% (81/351)
Receiving objects:  24% (85/351)
Receiving objects:  25% (88/351)
Receiving objects:  26% (92/351)
Receiving objects:  27% (95/351)
Receiving objects:  28% (99/351)
Receiving objects:  29% (102/351)
Receiving objects:  30% (106/351)
Receiving objects:  31% (109/351)
Receiving objects:  32% (113/351)
Receiving objects:  33% (116/351)
Receiving objects:  34% (120/351)
Receiving objects:  35% (123/351)
Receiving objects:  36% (127/351)
Receiving objects:  37% (130/351)
Receiving objects:  38% (134/351)
Receiving objects:  39% (137/351)
Receiving objects:  40% (141/351)
Receiving objects:  41% (144/351)
Receiving objects:  42% (148/351)
Receiving objects:  43% (151/351)
Receiving objects:  44% (155/351)
Receiving objects:  45% (158/351)
Receiving objects:  46% (162/351)
Receiving objects:  47% (165/351)
Receiving objects:  48% (169/351)
Receiving objects:  49% (172/351)
Receiving objects:  50% (176/351)
Receiving objects:  51% (180/351)
Receiving objects:  52% (183/351)
Receiving objects:  53% (187/351)
Receiving objects:  54% (190/351)
Receiving objects:  55% (194/351)
Receiving objects:  56% (197/351)
Receiving objects:  57% (201/351)
Receiving objects:  58% (204/351)
Receiving objects:  59% (208/351)
Receiving objects:  60% (211/351)
Receiving objects:  61% (215/351)
Receiving objects:  62% (218/351)
Receiving objects:  63% (222/351)
Receiving objects:  64% (225/351)
Receiving objects:  65% (229/351)
Receiving objects:  66% (232/351)
Receiving objects:  67% (236/351)
Receiving objects:  68% (239/351)
Receiving objects:  69% (243/351)
Receiving objects:  70% (246/351)
Receiving objects:  71% (250/351)
Receiving objects:  72% (253/351)
Receiving objects:  73% (257/351)
Receiving objects:  74% (260/351)
Receiving objects:  75% (264/351)
Receiving objects:  76% (267/351)
Receiving objects:  77% (271/351)
Receiving objects:  78% (274/351)
Receiving objects:  79% (278/351)
Receiving objects:  80% (281/351)
Receiving objects:  81% (285/351)
Receiving objects:  82% (288/351)
Receiving objects:  83% (292/351)
Receiving objects:  84% (295/351)
Receiving objects:  85% (299/351)
Receiving objects:  86% (302/351)
Receiving objects:  87% (306/351)
Receiving objects:  88% (309/351)
Receiving objects:  89% (313/351)
Receiving objects:  90% (316/351)
Receiving objects:  91% (320/351)
Receiving objects:  92% (323/351)
Receiving objects:  93% (327/351)
Receiving objects:  94% (330/351)
Receiving objects:  95% (334/351)
remote: Total 351 (delta 96), reused 87 (delta 55), pack-reused 207 (from 1)[K
2024-12-30T09:40:15.507617569Z Receiving objects:  96% (337/351)
Receiving objects:  97% (341/351)
Receiving objects:  98% (344/351)
Receiving objects:  99% (348/351)
Receiving objects: 100% (351/351)
Receiving objects: 100% (351/351), 76.18 KiB | 364.00 KiB/s, done.
2024-12-30T09:40:15.512230788Z Resolving deltas:   0% (0/222)
Resolving deltas:   1% (3/222)
Resolving deltas:   2% (6/222)
Resolving deltas:   3% (7/222)
Resolving deltas:   4% (9/222)
Resolving deltas:   6% (14/222)
Resolving deltas:   8% (19/222)
Resolving deltas:   9% (20/222)
Resolving deltas:  10% (23/222)
Resolving deltas:  11% (25/222)
Resolving deltas:  12% (28/222)
Resolving deltas:  13% (29/222)
Resolving deltas:  14% (32/222)
Resolving deltas:  15% (34/222)
Resolving deltas:  16% (36/222)
Resolving deltas:  17% (38/222)
Resolving deltas:  18% (41/222)
Resolving deltas:  19% (43/222)
Resolving deltas:  20% (45/222)
Resolving deltas:  21% (47/222)
Resolving deltas:  22% (50/222)
Resolving deltas:  24% (54/222)
Resolving deltas:  25% (56/222)
Resolving deltas:  26% (58/222)
Resolving deltas:  27% (60/222)
Resolving deltas:  28% (63/222)
Resolving deltas:  29% (65/222)
Resolving deltas:  30% (67/222)
Resolving deltas:  31% (70/222)
Resolving deltas:  32% (72/222)
Resolving deltas:  33% (74/222)
Resolving deltas:  34% (76/222)
Resolving deltas:  35% (79/222)
Resolving deltas:  36% (80/222)
Resolving deltas:  37% (83/222)
Resolving deltas:  38% (85/222)
Resolving deltas:  39% (87/222)
Resolving deltas:  40% (89/222)
Resolving deltas:  41% (92/222)
Resolving deltas:  42% (94/222)
Resolving deltas:  43% (96/222)
Resolving deltas:  44% (98/222)
Resolving deltas:  45% (101/222)
Resolving deltas:  46% (103/222)
Resolving deltas:  47% (105/222)
Resolving deltas:  48% (107/222)
Resolving deltas:  49% (109/222)
Resolving deltas:  50% (111/222)
Resolving deltas:  51% (114/222)
Resolving deltas:  52% (116/222)
Resolving deltas:  53% (118/222)
Resolving deltas:  54% (121/222)
Resolving deltas:  55% (124/222)
Resolving deltas:  56% (125/222)
Resolving deltas:  57% (127/222)
Resolving deltas:  58% (130/222)
Resolving deltas:  59% (132/222)
Resolving deltas:  60% (134/222)
Resolving deltas:  61% (136/222)
Resolving deltas:  62% (139/222)
Resolving deltas:  63% (140/222)
Resolving deltas:  64% (143/222)
Resolving deltas:  65% (145/222)
Resolving deltas:  66% (147/222)
Resolving deltas:  67% (149/222)
Resolving deltas:  68% (153/222)
Resolving deltas:  69% (154/222)
Resolving deltas:  70% (156/222)
Resolving deltas:  71% (158/222)
Resolving deltas:  72% (160/222)
Resolving deltas:  73% (163/222)
Resolving deltas:  74% (166/222)
Resolving deltas:  75% (167/222)
Resolving deltas:  76% (170/222)
Resolving deltas:  77% (171/222)
Resolving deltas:  78% (174/222)
Resolving deltas:  80% (178/222)
Resolving deltas:  81% (180/222)
Resolving deltas:  82% (183/222)
Resolving deltas:  83% (185/222)
Resolving deltas:  84% (187/222)
Resolving deltas:  85% (190/222)
Resolving deltas:  86% (191/222)
Resolving deltas:  87% (194/222)
Resolving deltas:  88% (196/222)
Resolving deltas:  89% (199/222)
Resolving deltas:  90% (200/222)
Resolving deltas:  91% (204/222)
Resolving deltas:  92% (205/222)
Resolving deltas:  93% (208/222)
Resolving deltas:  94% (209/222)
Resolving deltas:  95% (211/222)
Resolving deltas:  96% (214/222)
Resolving deltas:  97% (216/222)
Resolving deltas:  98% (218/222)
Resolving deltas:  99% (220/222)
Resolving deltas: 100% (222/222)
Resolving deltas: 100% (222/222), done.
2024-12-30T09:40:18.493664944Z [?2004hroot@a6be3969aece:/# cd spice/
2024-12-30T09:40:30.983170475Z [?2004l
[?2004hroot@a6be3969aece:/spice# git checkout [7me962a9c435d2f990fe5684d6a876a8b13287f5ee[27me962a9c435d2f990fe5684d6a876a8b13287f5ee
2024-12-30T09:40:30.986048680Z [?2004l
Note: switching to 'e962a9c435d2f990fe5684d6a876a8b13287f5ee'.
2024-12-30T09:40:30.986067660Z 
2024-12-30T09:40:30.986070290Z You are in 'detached HEAD' state. You can look around, make experimental
2024-12-30T09:40:30.986085382Z changes and commit them, and you can discard any commits you make in this
2024-12-30T09:40:30.986087696Z state without impacting any branches by switching back to a branch.
2024-12-30T09:40:30.986089716Z 
2024-12-30T09:40:30.986091796Z If you want to create a new branch to retain commits you create, you may
2024-12-30T09:40:30.986093774Z do so (now or later) by using -c with the switch command. Example:
2024-12-30T09:40:30.986095749Z 
2024-12-30T09:40:30.986097588Z   git switch -c <new-branch-name>
2024-12-30T09:40:30.986099782Z 
2024-12-30T09:40:30.986101628Z Or undo this operation with:
2024-12-30T09:40:30.986103589Z 
2024-12-30T09:40:30.986105424Z   git switch -
2024-12-30T09:40:30.986107378Z 
2024-12-30T09:40:30.986109228Z Turn off this advice by setting config variable advice.detachedHead to false
2024-12-30T09:40:30.986111245Z 
2024-12-30T09:40:30.986113080Z HEAD is now at e962a9c bump to 0.2.5
2024-12-30T09:40:32.199592357Z [?2004hroot@a6be3969aece:/spice# ls
2024-12-30T09:40:32.201336592Z [?2004l
LICENSE-APACHE	LICENSE-MIT  README.md	pyproject.toml	spice  tests
2024-12-30T09:40:37.776961814Z [?2004hroot@a6be3969aece:/spice# cd[K[Kpip install .
2024-12-30T09:40:38.126009853Z [?2004l
Looking in indexes: /simple/
2024-12-30T09:40:38.132809168Z Processing /spice
2024-12-30T09:40:38.729012506Z   Installing build dependencies ... [?25l- \ done
2024-12-30T09:40:38.847770020Z [?25h  Getting requirements to build wheel ... [?25l- done
2024-12-30T09:40:38.938711310Z [?25h  Preparing metadata (pyproject.toml) ... [?25l- done
2024-12-30T09:40:39.407558539Z [?25hCollecting polars>=1.0
2024-12-30T09:40:39.436837784Z   Downloading /packages/polars/polars-1.18.0-cp39-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (32.3 MB)
2024-12-30T09:40:39.737978260Z [?25l     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/32.3 MB[0m [31m?[0m eta [36m-:--:--[0m
[2K     [91m━━[0m[90m╺[0m[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m1.8/32.3 MB[0m [31m54.8 MB/s[0m eta [36m0:00:01[0m
[2K     [91m━━━━━━[0m[91m╸[0m[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m5.4/32.3 MB[0m [31m78.5 MB/s[0m eta [36m0:00:01[0m
[2K     [91m━━━━━━━━━━[0m[90m╺[0m[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m8.3/32.3 MB[0m [31m79.1 MB/s[0m eta [36m0:00:01[0m
[2K     [91m━━━━━━━━━━━━━━━━━━━[0m[91m╸[0m[90m━━━━━━━━━━━━━━━━━━━━[0m [32m16.1/32.3 MB[0m [31m151.5 MB/s[0m eta [36m0:00:01[0m
[2K     [91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m[90m╺[0m[90m━━━━━━━[0m [32m26.1/32.3 MB[0m [31m278.3 MB/s[0m eta [36m0:00:01[0m
[2K     [91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m[91m╸[0m [32m32.3/32.3 MB[0m [31m273.7 MB/s[0m eta [36m0:00:01[0m
[2K     [91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m[91m╸[0m [32m32.3/32.3 MB[0m [31m273.7 MB/s[0m eta [36m0:00:01[0m
[2K     [91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m[91m╸[0m [32m32.3/32.3 MB[0m [31m273.7 MB/s[0m eta [36m0:00:01[0m
[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m32.3/32.3 MB[0m [31m76.4 MB/s[0m eta [36m0:00:00[0m
2024-12-30T09:40:39.938168793Z [?25hCollecting rich>=13.3.3
2024-12-30T09:40:39.956702462Z   Downloading /packages/rich/rich-13.9.4-py3-none-any.whl (242 kB)
2024-12-30T09:40:39.976308110Z [?25l     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/242.4 kB[0m [31m?[0m eta [36m-:--:--[0m
[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m242.4/242.4 kB[0m [31m15.5 MB/s[0m eta [36m0:00:00[0m
2024-12-30T09:40:41.381731010Z [?25hCollecting aiohttp>=3.9.5
2024-12-30T09:40:41.398086160Z   Downloading /packages/aiohttp/aiohttp-3.11.11-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.6 MB)
2024-12-30T09:40:41.421904841Z [?25l     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/1.6 MB[0m [31m?[0m eta [36m-:--:--[0m
[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m1.6/1.6 MB[0m [31m80.4 MB/s[0m eta [36m0:00:00[0m
2024-12-30T09:40:41.502172227Z [?25hCollecting requests>=2.16
2024-12-30T09:40:41.519736525Z   Downloading /packages/requests/requests-2.32.3-py3-none-any.whl (64 kB)
2024-12-30T09:40:41.526491281Z [?25l     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/64.9 kB[0m [31m?[0m eta [36m-:--:--[0m
[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m64.9/64.9 kB[0m [31m19.7 MB/s[0m eta [36m0:00:00[0m
2024-12-30T09:40:41.561737629Z [?25hCollecting rich-argparse>=1.5.2
2024-12-30T09:40:41.578172928Z   Downloading /packages/rich-argparse/rich_argparse-1.6.0-py3-none-any.whl (20 kB)
2024-12-30T09:40:42.491379987Z Collecting yarl<2.0,>=1.17.0
2024-12-30T09:40:42.507895272Z   Downloading /packages/yarl/yarl-1.18.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (319 kB)
2024-12-30T09:40:42.528609406Z [?25l     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/319.7 kB[0m [31m?[0m eta [36m-:--:--[0m
[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m319.7/319.7 kB[0m [31m18.9 MB/s[0m eta [36m0:00:00[0m
2024-12-30T09:40:42.715648340Z [?25hCollecting frozenlist>=1.1.1
2024-12-30T09:40:42.732190734Z   Downloading /packages/frozenlist/frozenlist-1.5.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (241 kB)
2024-12-30T09:40:42.752103207Z [?25l     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/241.9 kB[0m [31m?[0m eta [36m-:--:--[0m
[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m241.9/241.9 kB[0m [31m14.9 MB/s[0m eta [36m0:00:00[0m
2024-12-30T09:40:42.785242478Z [?25hCollecting async-timeout<6.0,>=4.0
2024-12-30T09:40:42.806507854Z   Downloading /packages/async-timeout/async_timeout-5.0.1-py3-none-any.whl (6.2 kB)
2024-12-30T09:40:42.836767451Z Collecting aiosignal>=1.1.2
2024-12-30T09:40:42.855401273Z   Downloading /packages/aiosignal/aiosignal-1.3.2-py2.py3-none-any.whl (7.6 kB)
2024-12-30T09:40:42.903046690Z Collecting attrs>=17.3.0
2024-12-30T09:40:42.920998826Z   Downloading /packages/attrs/attrs-24.3.0-py3-none-any.whl (63 kB)
2024-12-30T09:40:42.931575862Z [?25l     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/63.4 kB[0m [31m?[0m eta [36m-:--:--[0m
[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m63.4/63.4 kB[0m [31m8.3 MB/s[0m eta [36m0:00:00[0m
2024-12-30T09:40:43.477862247Z [?25hCollecting multidict<7.0,>=4.5
2024-12-30T09:40:43.500601503Z   Downloading /packages/multidict/multidict-6.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (124 kB)
2024-12-30T09:40:43.507515412Z [?25l     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/124.6 kB[0m [31m?[0m eta [36m-:--:--[0m
[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m124.6/124.6 kB[0m [31m39.2 MB/s[0m eta [36m0:00:00[0m
2024-12-30T09:40:43.555756504Z [?25hCollecting aiohappyeyeballs>=2.3.0
2024-12-30T09:40:43.584400165Z   Downloading /packages/aiohappyeyeballs/aiohappyeyeballs-2.4.4-py3-none-any.whl (14 kB)
2024-12-30T09:40:43.696970014Z Collecting propcache>=0.2.0
2024-12-30T09:40:43.713944984Z   Downloading /packages/propcache/propcache-0.2.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (205 kB)
2024-12-30T09:40:43.729193081Z [?25l     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/205.1 kB[0m [31m?[0m eta [36m-:--:--[0m
[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m205.1/205.1 kB[0m [31m18.5 MB/s[0m eta [36m0:00:00[0m
2024-12-30T09:40:44.091815479Z [?25hCollecting charset-normalizer<4,>=2
2024-12-30T09:40:44.108561172Z   Downloading /packages/charset-normalizer/charset_normalizer-3.4.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (146 kB)
2024-12-30T09:40:44.123697366Z [?25l     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/146.1 kB[0m [31m?[0m eta [36m-:--:--[0m
[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m146.1/146.1 kB[0m [31m12.5 MB/s[0m eta [36m0:00:00[0m
2024-12-30T09:40:44.175114968Z [?25hCollecting certifi>=2017.4.17
2024-12-30T09:40:44.191486054Z   Downloading /packages/certifi/certifi-2024.12.14-py3-none-any.whl (164 kB)
2024-12-30T09:40:44.206485165Z [?25l     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/164.9 kB[0m [31m?[0m eta [36m-:--:--[0m
[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m164.9/164.9 kB[0m [31m14.4 MB/s[0m eta [36m0:00:00[0m
2024-12-30T09:40:44.242801654Z [?25hCollecting idna<4,>=2.5
2024-12-30T09:40:44.265271336Z   Downloading /packages/idna/idna-3.10-py3-none-any.whl (70 kB)
2024-12-30T09:40:44.276377200Z [?25l     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/70.4 kB[0m [31m?[0m eta [36m-:--:--[0m
[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m70.4/70.4 kB[0m [31m9.0 MB/s[0m eta [36m0:00:00[0m
2024-12-30T09:40:44.364043843Z [?25hCollecting urllib3<3,>=1.21.1
2024-12-30T09:40:44.383341829Z   Downloading /packages/urllib3/urllib3-2.3.0-py3-none-any.whl (128 kB)
2024-12-30T09:40:44.395407701Z [?25l     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/128.4 kB[0m [31m?[0m eta [36m-:--:--[0m
[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m128.4/128.4 kB[0m [31m15.5 MB/s[0m eta [36m0:00:00[0m
2024-12-30T09:40:44.449905515Z [?25hCollecting markdown-it-py>=2.2.0
2024-12-30T09:40:44.466574038Z   Downloading /packages/markdown-it-py/markdown_it_py-3.0.0-py3-none-any.whl (87 kB)
2024-12-30T09:40:44.478001624Z [?25l     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/87.5 kB[0m [31m?[0m eta [36m-:--:--[0m
[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m87.5/87.5 kB[0m [31m10.8 MB/s[0m eta [36m0:00:00[0m
2024-12-30T09:40:44.530801345Z [?25hCollecting typing-extensions<5.0,>=4.0.0
2024-12-30T09:40:44.560928299Z   Downloading /packages/typing-extensions/typing_extensions-4.12.2-py3-none-any.whl (37 kB)
2024-12-30T09:40:44.622941171Z Collecting pygments<3.0.0,>=2.13.0
2024-12-30T09:40:44.638510567Z   Downloading /packages/pygments/pygments-2.18.0-py3-none-any.whl (1.2 MB)
2024-12-30T09:40:44.669373441Z [?25l     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/1.2 MB[0m [31m?[0m eta [36m-:--:--[0m
[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m1.2/1.2 MB[0m [31m45.2 MB/s[0m eta [36m0:00:00[0m
2024-12-30T09:40:44.820540781Z [?25hCollecting mdurl~=0.1
2024-12-30T09:40:44.839052381Z   Downloading /packages/mdurl/mdurl-0.1.2-py3-none-any.whl (10.0 kB)
2024-12-30T09:40:44.901825132Z Building wheels for collected packages: dune_spice
2024-12-30T09:40:44.995137163Z   Building wheel for dune_spice (pyproject.toml) ... [?25l- done
2024-12-30T09:40:44.995929521Z [?25h  Created wheel for dune_spice: filename=dune_spice-0.2.5-py3-none-any.whl size=23511 sha256=ebb4174347b25c7fffc5876039738c9043868457c9c8188bcb3f1d1d6802225c
2024-12-30T09:40:44.996159032Z   Stored in directory: /tmp/pip-ephem-wheel-cache-pfcxexbj/wheels/de/2a/64/0d6a1ccb12f4253ef2806822c5e8764772d445f501485070e7
2024-12-30T09:40:44.998645594Z Successfully built dune_spice
2024-12-30T09:40:45.237951415Z Installing collected packages: urllib3, typing-extensions, pygments, propcache, polars, mdurl, idna, frozenlist, charset-normalizer, certifi, attrs, async-timeout, aiohappyeyeballs, requests, multidict, markdown-it-py, aiosignal, yarl, rich, rich-argparse, aiohttp, dune_spice
2024-12-30T09:40:47.508470974Z Successfully installed aiohappyeyeballs-2.4.4 aiohttp-3.11.11 aiosignal-1.3.2 async-timeout-5.0.1 attrs-24.3.0 certifi-2024.12.14 charset-normalizer-3.4.1 dune_spice-0.2.5 frozenlist-1.5.0 idna-3.10 markdown-it-py-3.0.0 mdurl-0.1.2 multidict-6.1.0 polars-1.18.0 propcache-0.2.1 pygments-2.18.0 requests-2.32.3 rich-13.9.4 rich-argparse-1.6.0 typing-extensions-4.12.2 urllib3-2.3.0 yarl-1.18.3
2024-12-30T09:40:47.509294413Z [33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv[0m[33m
2024-12-30T09:40:47.515290487Z [0m
2024-12-30T09:40:47.515304091Z [1m[[0m[34;49mnotice[0m[1;39;49m][0m[39;49m A new release of pip is available: [0m[31;49m23.0.1[0m[39;49m -> [0m[32;49m24.3.1[0m
2024-12-30T09:40:47.515307969Z [1m[[0m[34;49mnotice[0m[1;39;49m][0m[39;49m To update, run: [0m[32;49mpip install --upgrade pip[0m
2024-12-30T09:40:57.637689153Z [?2004hroot@a6be3969aece:/spice# [7mpytest --collect-only -q[27mpytest --collect-only -q
2024-12-30T09:40:57.976951071Z [?2004l
tests/test_async_query.py::test_query_async[False]
2024-12-30T09:40:57.976980251Z tests/test_async_query.py::test_query_async[True0]
2024-12-30T09:40:57.976982970Z tests/test_async_query.py::test_query_async[True1]
2024-12-30T09:40:57.976985268Z tests/test_async_query.py::test_query_limits_async[False]
2024-12-30T09:40:57.976987517Z tests/test_async_query.py::test_query_limits_async[True0]
2024-12-30T09:40:57.976989526Z tests/test_async_query.py::test_query_limits_async[True1]
2024-12-30T09:40:57.976991456Z tests/test_async_query.py::test_query_offsets_async[False]
2024-12-30T09:40:57.976993555Z tests/test_async_query.py::test_query_offsets_async[True0]
2024-12-30T09:40:57.976995630Z tests/test_async_query.py::test_query_offsets_async[True1]
2024-12-30T09:40:57.976997575Z tests/test_async_query.py::test_query_sort_async[False]
2024-12-30T09:40:57.976999543Z tests/test_async_query.py::test_query_sort_async[True0]
2024-12-30T09:40:57.977001547Z tests/test_async_query.py::test_query_sort_async[True1]
2024-12-30T09:40:57.977003591Z tests/test_async_query.py::test_query_columns_async[False]
2024-12-30T09:40:57.977005886Z tests/test_async_query.py::test_query_columns_async[True0]
2024-12-30T09:40:57.977020803Z tests/test_async_query.py::test_query_columns_async[True1]
2024-12-30T09:40:57.977022911Z tests/test_async_query.py::test_query_types_async[False]
2024-12-30T09:40:57.977025083Z tests/test_async_query.py::test_query_types_async[True0]
2024-12-30T09:40:57.977027089Z tests/test_async_query.py::test_query_types_async[True1]
2024-12-30T09:40:57.977029050Z tests/test_async_query.py::test_query_without_polling_async[False]
2024-12-30T09:40:57.977031174Z tests/test_async_query.py::test_query_without_polling_async[True0]
2024-12-30T09:40:57.977033249Z tests/test_async_query.py::test_query_without_polling_async[True1]
2024-12-30T09:40:57.977035244Z tests/test_async_query.py::test_parameters_async[False]
2024-12-30T09:40:57.977037171Z tests/test_async_query.py::test_parameters_async[True0]
2024-12-30T09:40:57.977039137Z tests/test_async_query.py::test_parameters_async[True1]
2024-12-30T09:40:57.977041217Z tests/test_query.py::test_query[False]
2024-12-30T09:40:57.977043137Z tests/test_query.py::test_query[True0]
2024-12-30T09:40:57.977045020Z tests/test_query.py::test_query[True1]
2024-12-30T09:40:57.977046925Z tests/test_query.py::test_query_limits[False]
2024-12-30T09:40:57.977052185Z tests/test_query.py::test_query_limits[True0]
2024-12-30T09:40:57.977054267Z tests/test_query.py::test_query_limits[True1]
2024-12-30T09:40:57.977056168Z tests/test_query.py::test_query_offsets[False]
2024-12-30T09:40:57.977058234Z tests/test_query.py::test_query_offsets[True0]
2024-12-30T09:40:57.977060494Z tests/test_query.py::test_query_offsets[True1]
2024-12-30T09:40:57.977062367Z tests/test_query.py::test_query_sort[False]
2024-12-30T09:40:57.977064263Z tests/test_query.py::test_query_sort[True0]
2024-12-30T09:40:57.977066238Z tests/test_query.py::test_query_sort[True1]
2024-12-30T09:40:57.977068119Z tests/test_query.py::test_query_columns[False]
2024-12-30T09:40:57.977069996Z tests/test_query.py::test_query_columns[True0]
2024-12-30T09:40:57.977071895Z tests/test_query.py::test_query_columns[True1]
2024-12-30T09:40:57.977092407Z tests/test_query.py::test_query_types[False]
2024-12-30T09:40:57.977109045Z tests/test_query.py::test_query_types[True0]
2024-12-30T09:40:57.977111413Z tests/test_query.py::test_query_types[True1]
2024-12-30T09:40:57.977113507Z tests/test_query.py::test_query_without_polling[False]
2024-12-30T09:40:57.977116489Z tests/test_query.py::test_query_without_polling[True0]
2024-12-30T09:40:57.977118720Z tests/test_query.py::test_query_without_polling[True1]
2024-12-30T09:40:57.977120828Z tests/test_query.py::test_parameters[False]
2024-12-30T09:40:57.977175742Z tests/test_query.py::test_parameters[True0]
2024-12-30T09:40:57.977188738Z tests/test_query.py::test_parameters[True1]
2024-12-30T09:40:57.978511439Z 
2024-12-30T09:40:57.978570728Z [33m===================================================================================== warnings summary ======================================================================================[0m
2024-12-30T09:40:57.978657231Z tests/test_async_query.py:10
2024-12-30T09:40:57.978661325Z   /spice/tests/test_async_query.py:10: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.978664213Z     @pytest.mark.asyncio
2024-12-30T09:40:57.978666178Z 
2024-12-30T09:40:57.978752533Z tests/test_async_query.py:12
2024-12-30T09:40:57.978757476Z   /spice/tests/test_async_query.py:12: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.978760471Z     @pytest.mark.xdist_group(name='test_query_async')
2024-12-30T09:40:57.978762579Z 
2024-12-30T09:40:57.978821071Z tests/test_async_query.py:17
2024-12-30T09:40:57.978824408Z   /spice/tests/test_async_query.py:17: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.978826702Z     @pytest.mark.asyncio
2024-12-30T09:40:57.978828789Z 
2024-12-30T09:40:57.978883996Z tests/test_async_query.py:19
2024-12-30T09:40:57.978886703Z   /spice/tests/test_async_query.py:19: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.978889133Z     @pytest.mark.xdist_group(name='test_query_limits_async')
2024-12-30T09:40:57.978891377Z 
2024-12-30T09:40:57.978959295Z tests/test_async_query.py:29
2024-12-30T09:40:57.978962073Z   /spice/tests/test_async_query.py:29: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.978964637Z     @pytest.mark.asyncio
2024-12-30T09:40:57.978966549Z 
2024-12-30T09:40:57.979041545Z tests/test_async_query.py:31
2024-12-30T09:40:57.979054386Z   /spice/tests/test_async_query.py:31: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.979057330Z     @pytest.mark.xdist_group(name='test_query_offsets_async')
2024-12-30T09:40:57.979059611Z 
2024-12-30T09:40:57.979109982Z tests/test_async_query.py:40
2024-12-30T09:40:57.979113228Z   /spice/tests/test_async_query.py:40: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.979123576Z     @pytest.mark.asyncio
2024-12-30T09:40:57.979125629Z 
2024-12-30T09:40:57.979181625Z tests/test_async_query.py:42
2024-12-30T09:40:57.979184066Z   /spice/tests/test_async_query.py:42: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.979186501Z     @pytest.mark.xdist_group(name='test_query_sort_async')
2024-12-30T09:40:57.979188492Z 
2024-12-30T09:40:57.979259048Z tests/test_async_query.py:61
2024-12-30T09:40:57.979263125Z   /spice/tests/test_async_query.py:61: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.979265801Z     @pytest.mark.asyncio
2024-12-30T09:40:57.979286465Z 
2024-12-30T09:40:57.979335313Z tests/test_async_query.py:63
2024-12-30T09:40:57.979338048Z   /spice/tests/test_async_query.py:63: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.979340480Z     @pytest.mark.xdist_group(name='test_query_columns_async')
2024-12-30T09:40:57.979342674Z 
2024-12-30T09:40:57.979425152Z tests/test_async_query.py:72
2024-12-30T09:40:57.979430553Z   /spice/tests/test_async_query.py:72: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.979434331Z     @pytest.mark.asyncio
2024-12-30T09:40:57.979437161Z 
2024-12-30T09:40:57.979513735Z tests/test_async_query.py:74
2024-12-30T09:40:57.979519806Z   /spice/tests/test_async_query.py:74: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.979522259Z     @pytest.mark.xdist_group(name='test_query_types_async')
2024-12-30T09:40:57.979524262Z 
2024-12-30T09:40:57.979568846Z tests/test_async_query.py:81
2024-12-30T09:40:57.979572960Z   /spice/tests/test_async_query.py:81: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.979575439Z     @pytest.mark.asyncio
2024-12-30T09:40:57.979577504Z 
2024-12-30T09:40:57.979642925Z tests/test_async_query.py:83
2024-12-30T09:40:57.979653358Z   /spice/tests/test_async_query.py:83: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.979656043Z     @pytest.mark.xdist_group(name='test_query_without_polling_async')
2024-12-30T09:40:57.979658132Z 
2024-12-30T09:40:57.979715597Z tests/test_async_query.py:93
2024-12-30T09:40:57.979718573Z   /spice/tests/test_async_query.py:93: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.979721118Z     @pytest.mark.asyncio
2024-12-30T09:40:57.979722995Z 
2024-12-30T09:40:57.979794318Z tests/test_async_query.py:95
2024-12-30T09:40:57.979798457Z   /spice/tests/test_async_query.py:95: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.979802192Z     @pytest.mark.xdist_group(name='test_parameters_async')
2024-12-30T09:40:57.979805372Z 
2024-12-30T09:40:57.979874697Z tests/test_query.py:13
2024-12-30T09:40:57.979878338Z   /spice/tests/test_query.py:13: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.979881165Z     @pytest.mark.xdist_group(name='test_query')
2024-12-30T09:40:57.979883350Z 
2024-12-30T09:40:57.979948343Z tests/test_query.py:19
2024-12-30T09:40:57.979951532Z   /spice/tests/test_query.py:19: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.979955071Z     @pytest.mark.xdist_group(name='test_query_limits')
2024-12-30T09:40:57.979958145Z 
2024-12-30T09:40:57.980028740Z tests/test_query.py:45
2024-12-30T09:40:57.980032627Z   /spice/tests/test_query.py:45: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.980035040Z     @pytest.mark.xdist_group(name='test_query_offsets')
2024-12-30T09:40:57.980037142Z 
2024-12-30T09:40:57.980090108Z tests/test_query.py:79
2024-12-30T09:40:57.980093138Z   /spice/tests/test_query.py:79: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.980095479Z     @pytest.mark.xdist_group(name='test_query_sort')
2024-12-30T09:40:57.980097430Z 
2024-12-30T09:40:57.980168451Z tests/test_query.py:105
2024-12-30T09:40:57.980171493Z   /spice/tests/test_query.py:105: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.980173892Z     @pytest.mark.xdist_group(name='test_query_columns')
2024-12-30T09:40:57.980176458Z 
2024-12-30T09:40:57.980240526Z tests/test_query.py:122
2024-12-30T09:40:57.980243371Z   /spice/tests/test_query.py:122: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.980245729Z     @pytest.mark.xdist_group(name='test_query_types')
2024-12-30T09:40:57.980247766Z 
2024-12-30T09:40:57.980313667Z tests/test_query.py:135
2024-12-30T09:40:57.980317270Z   /spice/tests/test_query.py:135: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.980319729Z     @pytest.mark.xdist_group(name='test_query_without_polling')
2024-12-30T09:40:57.980321718Z 
2024-12-30T09:40:57.980397506Z tests/test_query.py:148
2024-12-30T09:40:57.980400545Z   /spice/tests/test_query.py:148: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:40:57.980402928Z     @pytest.mark.xdist_group(name='test_parameters')
2024-12-30T09:40:57.980405036Z 
2024-12-30T09:40:57.980434853Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2024-12-30T09:40:57.980567842Z [32m[32m48 tests collected[0m[32m in 0.12s[0m[0m
2024-12-30T09:41:03.807347960Z [?2004hroot@a6be3969aece:/spice# pytest
2024-12-30T09:41:03.977446435Z [?2004l
[1m==================================================================================== test session starts ====================================================================================[0m
2024-12-30T09:41:03.977475570Z platform linux -- Python 3.10.16, pytest-8.3.4, pluggy-1.5.0
2024-12-30T09:41:03.977478747Z rootdir: /spice
2024-12-30T09:41:03.977481387Z configfile: pyproject.toml
2024-12-30T09:41:03.977483798Z testpaths: tests
2024-12-30T09:41:04.062531882Z [1mcollecting ... [0m[1m
collected 48 items                                                                                                                                                                          [0m
2024-12-30T09:41:04.063312191Z 
2024-12-30T09:41:04.087207636Z tests/test_async_query.py [33ms[0m[33ms[0m[33ms[0m[33ms[0m[33ms[0m[33ms[0m[33ms[0m[33ms[0m[33ms[0m[33ms[0m[33ms[0m[33ms[0m[33ms[0m[33ms[0m[33ms[0m[33ms[0m[33ms[0m[33ms[0m[33ms[0m[33ms[0m[33ms[0m[33ms[0m[33ms[0m[33ms[0m[33m                                                                                                                                    [ 50%][0m
2024-12-30T09:41:05.606999121Z tests/test_query.py [31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31m                                                                                                                                          [100%][0m
2024-12-30T09:41:05.607034828Z 
2024-12-30T09:41:05.607083205Z ========================================================================================= FAILURES ==========================================================================================
2024-12-30T09:41:05.607101324Z [31m[1m_____________________________________________________________________________________ test_query[False] _____________________________________________________________________________________[0m
2024-12-30T09:41:05.607104633Z 
2024-12-30T09:41:05.607107560Z cache = False
2024-12-30T09:41:05.607109641Z 
2024-12-30T09:41:05.659895568Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.659923655Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_query[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.659926963Z     [94mdef[39;49;00m [92mtest_query[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.659929432Z >       spice.query([94m4388[39;49;00m, cache=cache, cache_dir=[33m'[39;49;00m[33m/tmp/dune_spice/test_query[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.659932318Z 
2024-12-30T09:41:05.659934261Z [1m[31mtests/test_query.py[0m:15: 
2024-12-30T09:41:05.659936421Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.659938834Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:240: in query
2024-12-30T09:41:05.660188066Z     [0mdf = _get_results(**execute_kwargs, **result_kwargs)[90m[39;49;00m
2024-12-30T09:41:05.660210231Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:820: in _get_results
2024-12-30T09:41:05.660390504Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.660406453Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.660583455Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.660589997Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.660592482Z 
2024-12-30T09:41:05.660594765Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'...st', 'OLDPWD': '/', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_query[False] (call)'})
2024-12-30T09:41:05.660597282Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.660599247Z 
2024-12-30T09:41:05.661243096Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.661248288Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.661250683Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.661253079Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.661255683Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.661257944Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.661260461Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.661262574Z 
2024-12-30T09:41:05.661274915Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.661407019Z [31m[1m_____________________________________________________________________________________ test_query[True0] _____________________________________________________________________________________[0m
2024-12-30T09:41:05.661412929Z 
2024-12-30T09:41:05.661414920Z cache = True
2024-12-30T09:41:05.661416910Z 
2024-12-30T09:41:05.662230019Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.662237372Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_query[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.662256022Z     [94mdef[39;49;00m [92mtest_query[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.662258584Z >       spice.query([94m4388[39;49;00m, cache=cache, cache_dir=[33m'[39;49;00m[33m/tmp/dune_spice/test_query[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.662261255Z 
2024-12-30T09:41:05.662263273Z [1m[31mtests/test_query.py[0m:15: 
2024-12-30T09:41:05.662266726Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.662269312Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:228: in query
2024-12-30T09:41:05.662521215Z     [0mcache_result, cache_execution = _cache.load_from_cache([90m[39;49;00m
2024-12-30T09:41:05.662537737Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_cache.py[0m:27: in load_from_cache
2024-12-30T09:41:05.662690214Z     [0mexecution = _extract.get_latest_execution(execute_kwargs)[90m[39;49;00m
2024-12-30T09:41:05.662695345Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:1338: in get_latest_execution
2024-12-30T09:41:05.662919696Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.662923035Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.663076454Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.663083390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.663086466Z 
2024-12-30T09:41:05.663107923Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'...st', 'OLDPWD': '/', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_query[True0] (call)'})
2024-12-30T09:41:05.663113135Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.663115190Z 
2024-12-30T09:41:05.663765436Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.663772704Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.663775126Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.663777533Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.663779999Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.663789804Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.663818674Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.663823587Z 
2024-12-30T09:41:05.663838190Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.663904222Z [31m[1m_____________________________________________________________________________________ test_query[True1] _____________________________________________________________________________________[0m
2024-12-30T09:41:05.663908124Z 
2024-12-30T09:41:05.663929395Z cache = True
2024-12-30T09:41:05.663932365Z 
2024-12-30T09:41:05.664732178Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.664738758Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_query[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.664741286Z     [94mdef[39;49;00m [92mtest_query[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.664743641Z >       spice.query([94m4388[39;49;00m, cache=cache, cache_dir=[33m'[39;49;00m[33m/tmp/dune_spice/test_query[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.664746189Z 
2024-12-30T09:41:05.664758599Z [1m[31mtests/test_query.py[0m:15: 
2024-12-30T09:41:05.664762570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.664793842Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:228: in query
2024-12-30T09:41:05.665020687Z     [0mcache_result, cache_execution = _cache.load_from_cache([90m[39;49;00m
2024-12-30T09:41:05.665035992Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_cache.py[0m:27: in load_from_cache
2024-12-30T09:41:05.665259072Z     [0mexecution = _extract.get_latest_execution(execute_kwargs)[90m[39;49;00m
2024-12-30T09:41:05.665269729Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:1338: in get_latest_execution
2024-12-30T09:41:05.665421649Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.665431025Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.665601931Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.665615713Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.665618441Z 
2024-12-30T09:41:05.665660574Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'...st', 'OLDPWD': '/', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_query[True1] (call)'})
2024-12-30T09:41:05.665665055Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.665667050Z 
2024-12-30T09:41:05.666302872Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.666310969Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.666314307Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.666329128Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.666331638Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.666334375Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.666337764Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.666340097Z 
2024-12-30T09:41:05.666342060Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.666458968Z [31m[1m_________________________________________________________________________________ test_query_limits[False] __________________________________________________________________________________[0m
2024-12-30T09:41:05.666464190Z 
2024-12-30T09:41:05.666466129Z cache = False
2024-12-30T09:41:05.666468101Z 
2024-12-30T09:41:05.667437049Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.667442382Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_query_limits[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.667444976Z     [94mdef[39;49;00m [92mtest_query_limits[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.667447342Z >       df10 = spice.query([90m[39;49;00m
2024-12-30T09:41:05.667449516Z             [94m4388[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.667451575Z             limit=[94m10[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.667459833Z             cache=cache,[90m[39;49;00m
2024-12-30T09:41:05.667462077Z             cache_dir=[33m'[39;49;00m[33m/tmp/dune_spice/test_query_limits[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.667476858Z         )[90m[39;49;00m
2024-12-30T09:41:05.667483399Z 
2024-12-30T09:41:05.667485350Z [1m[31mtests/test_query.py[0m:21: 
2024-12-30T09:41:05.667539888Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.667562514Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:240: in query
2024-12-30T09:41:05.667801889Z     [0mdf = _get_results(**execute_kwargs, **result_kwargs)[90m[39;49;00m
2024-12-30T09:41:05.667806232Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:820: in _get_results
2024-12-30T09:41:05.667996794Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.667999839Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.668154976Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.668169153Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.668171775Z 
2024-12-30T09:41:05.668196816Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'...LDPWD': '/', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_query_limits[False] (call)'})
2024-12-30T09:41:05.668202151Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.668204222Z 
2024-12-30T09:41:05.668935860Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.668967418Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.668972104Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.668976516Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.668980455Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.668983893Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.669003740Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.669007706Z 
2024-12-30T09:41:05.669027543Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.669034393Z [31m[1m_________________________________________________________________________________ test_query_limits[True0] __________________________________________________________________________________[0m
2024-12-30T09:41:05.669038547Z 
2024-12-30T09:41:05.669042108Z cache = True
2024-12-30T09:41:05.669045527Z 
2024-12-30T09:41:05.669998926Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.670008142Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_query_limits[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.670010916Z     [94mdef[39;49;00m [92mtest_query_limits[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.670013315Z >       df10 = spice.query([90m[39;49;00m
2024-12-30T09:41:05.670015349Z             [94m4388[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.670017489Z             limit=[94m10[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.670019589Z             cache=cache,[90m[39;49;00m
2024-12-30T09:41:05.670021592Z             cache_dir=[33m'[39;49;00m[33m/tmp/dune_spice/test_query_limits[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.670069501Z         )[90m[39;49;00m
2024-12-30T09:41:05.670082001Z 
2024-12-30T09:41:05.670085939Z [1m[31mtests/test_query.py[0m:21: 
2024-12-30T09:41:05.670089252Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.670093216Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:228: in query
2024-12-30T09:41:05.670309823Z     [0mcache_result, cache_execution = _cache.load_from_cache([90m[39;49;00m
2024-12-30T09:41:05.670315367Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_cache.py[0m:27: in load_from_cache
2024-12-30T09:41:05.670513789Z     [0mexecution = _extract.get_latest_execution(execute_kwargs)[90m[39;49;00m
2024-12-30T09:41:05.670517292Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:1338: in get_latest_execution
2024-12-30T09:41:05.670737341Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.670741341Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.670917089Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.670951757Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.670956795Z 
2024-12-30T09:41:05.670962294Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'...LDPWD': '/', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_query_limits[True0] (call)'})
2024-12-30T09:41:05.670966291Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.670969283Z 
2024-12-30T09:41:05.671599993Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.671616393Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.671619227Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.671622248Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.671624615Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.671626870Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.671629614Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.671631888Z 
2024-12-30T09:41:05.671633904Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.671737584Z [31m[1m_________________________________________________________________________________ test_query_limits[True1] __________________________________________________________________________________[0m
2024-12-30T09:41:05.671750186Z 
2024-12-30T09:41:05.671752907Z cache = True
2024-12-30T09:41:05.671755254Z 
2024-12-30T09:41:05.672688169Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.672697210Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_query_limits[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.672699827Z     [94mdef[39;49;00m [92mtest_query_limits[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.672702147Z >       df10 = spice.query([90m[39;49;00m
2024-12-30T09:41:05.672709112Z             [94m4388[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.672719113Z             limit=[94m10[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.672721435Z             cache=cache,[90m[39;49;00m
2024-12-30T09:41:05.672723545Z             cache_dir=[33m'[39;49;00m[33m/tmp/dune_spice/test_query_limits[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.672725959Z         )[90m[39;49;00m
2024-12-30T09:41:05.672738763Z 
2024-12-30T09:41:05.672754036Z [1m[31mtests/test_query.py[0m:21: 
2024-12-30T09:41:05.672800213Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.672803537Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:228: in query
2024-12-30T09:41:05.673027604Z     [0mcache_result, cache_execution = _cache.load_from_cache([90m[39;49;00m
2024-12-30T09:41:05.673031177Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_cache.py[0m:27: in load_from_cache
2024-12-30T09:41:05.673241853Z     [0mexecution = _extract.get_latest_execution(execute_kwargs)[90m[39;49;00m
2024-12-30T09:41:05.673244928Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:1338: in get_latest_execution
2024-12-30T09:41:05.673475551Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.673482695Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.673649216Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.673654280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.673657169Z 
2024-12-30T09:41:05.673684886Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'...LDPWD': '/', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_query_limits[True1] (call)'})
2024-12-30T09:41:05.673688955Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.673691536Z 
2024-12-30T09:41:05.674331211Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.674335323Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.674337511Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.674348969Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.674351267Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.674383213Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.674390837Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.674393171Z 
2024-12-30T09:41:05.674402803Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.674498564Z [31m[1m_________________________________________________________________________________ test_query_offsets[False] _________________________________________________________________________________[0m
2024-12-30T09:41:05.674504836Z 
2024-12-30T09:41:05.674506864Z cache = False
2024-12-30T09:41:05.674508787Z 
2024-12-30T09:41:05.675613804Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.675625687Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_query_offsets[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.675628377Z     [94mdef[39;49;00m [92mtest_query_offsets[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.675630727Z >       df = spice.query([90m[39;49;00m
2024-12-30T09:41:05.675632859Z             [94m3606949[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.675635879Z             limit=[94m30[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.675638026Z             offset=[94m0[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.675640152Z             cache=cache,[90m[39;49;00m
2024-12-30T09:41:05.675642299Z             cache_dir=[33m'[39;49;00m[33m/tmp/dune_spice/test_query_offsets[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.675644639Z         )[90m[39;49;00m
2024-12-30T09:41:05.675650347Z 
2024-12-30T09:41:05.675652308Z [1m[31mtests/test_query.py[0m:47: 
2024-12-30T09:41:05.675673141Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.675679222Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:240: in query
2024-12-30T09:41:05.675983124Z     [0mdf = _get_results(**execute_kwargs, **result_kwargs)[90m[39;49;00m
2024-12-30T09:41:05.675994162Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:820: in _get_results
2024-12-30T09:41:05.676195481Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.676198697Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.676369480Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.676373158Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.676375596Z 
2024-12-30T09:41:05.676411564Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'...DPWD': '/', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_query_offsets[False] (call)'})
2024-12-30T09:41:05.676414672Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.676416604Z 
2024-12-30T09:41:05.677053786Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.677058708Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.677060932Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.677063170Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.677065363Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.677067561Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.677070557Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.677072680Z 
2024-12-30T09:41:05.677102425Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.677251971Z [31m[1m_________________________________________________________________________________ test_query_offsets[True0] _________________________________________________________________________________[0m
2024-12-30T09:41:05.677259359Z 
2024-12-30T09:41:05.677261417Z cache = True
2024-12-30T09:41:05.677263398Z 
2024-12-30T09:41:05.678286385Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.678294181Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_query_offsets[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.678303542Z     [94mdef[39;49;00m [92mtest_query_offsets[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.678306171Z >       df = spice.query([90m[39;49;00m
2024-12-30T09:41:05.678308284Z             [94m3606949[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.678310412Z             limit=[94m30[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.678312531Z             offset=[94m0[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.678314676Z             cache=cache,[90m[39;49;00m
2024-12-30T09:41:05.678316879Z             cache_dir=[33m'[39;49;00m[33m/tmp/dune_spice/test_query_offsets[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.678319781Z         )[90m[39;49;00m
2024-12-30T09:41:05.678323061Z 
2024-12-30T09:41:05.678325079Z [1m[31mtests/test_query.py[0m:47: 
2024-12-30T09:41:05.678376243Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.678390451Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:228: in query
2024-12-30T09:41:05.678670597Z     [0mcache_result, cache_execution = _cache.load_from_cache([90m[39;49;00m
2024-12-30T09:41:05.678687096Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_cache.py[0m:27: in load_from_cache
2024-12-30T09:41:05.678826335Z     [0mexecution = _extract.get_latest_execution(execute_kwargs)[90m[39;49;00m
2024-12-30T09:41:05.678830288Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:1338: in get_latest_execution
2024-12-30T09:41:05.679029213Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.679038935Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.679205947Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.679209739Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.679212372Z 
2024-12-30T09:41:05.679239226Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'...DPWD': '/', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_query_offsets[True0] (call)'})
2024-12-30T09:41:05.679242699Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.679252745Z 
2024-12-30T09:41:05.679889397Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.679898275Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.679900684Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.679903198Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.679905408Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.679907610Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.679926446Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.679931975Z 
2024-12-30T09:41:05.679934116Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.680030738Z [31m[1m_________________________________________________________________________________ test_query_offsets[True1] _________________________________________________________________________________[0m
2024-12-30T09:41:05.680036179Z 
2024-12-30T09:41:05.680038218Z cache = True
2024-12-30T09:41:05.680040204Z 
2024-12-30T09:41:05.681079640Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.681087866Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_query_offsets[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.681090802Z     [94mdef[39;49;00m [92mtest_query_offsets[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.681093184Z >       df = spice.query([90m[39;49;00m
2024-12-30T09:41:05.681095188Z             [94m3606949[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.681097251Z             limit=[94m30[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.681099300Z             offset=[94m0[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.681112183Z             cache=cache,[90m[39;49;00m
2024-12-30T09:41:05.681136707Z             cache_dir=[33m'[39;49;00m[33m/tmp/dune_spice/test_query_offsets[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.681154824Z         )[90m[39;49;00m
2024-12-30T09:41:05.681157435Z 
2024-12-30T09:41:05.681159463Z [1m[31mtests/test_query.py[0m:47: 
2024-12-30T09:41:05.681170618Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.681174763Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:228: in query
2024-12-30T09:41:05.681419967Z     [0mcache_result, cache_execution = _cache.load_from_cache([90m[39;49;00m
2024-12-30T09:41:05.681425931Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_cache.py[0m:27: in load_from_cache
2024-12-30T09:41:05.681641344Z     [0mexecution = _extract.get_latest_execution(execute_kwargs)[90m[39;49;00m
2024-12-30T09:41:05.681646381Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:1338: in get_latest_execution
2024-12-30T09:41:05.681824331Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.681830865Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.682033803Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.682050720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.682055090Z 
2024-12-30T09:41:05.682058760Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'...DPWD': '/', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_query_offsets[True1] (call)'})
2024-12-30T09:41:05.682062570Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.682065691Z 
2024-12-30T09:41:05.682698777Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.682704906Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.682707157Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.682709501Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.682712315Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.682714771Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.682736098Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.682745743Z 
2024-12-30T09:41:05.682748108Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.682850347Z [31m[1m__________________________________________________________________________________ test_query_sort[False] ___________________________________________________________________________________[0m
2024-12-30T09:41:05.682858672Z 
2024-12-30T09:41:05.682860697Z cache = False
2024-12-30T09:41:05.682862651Z 
2024-12-30T09:41:05.683895028Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.683904987Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_query_sort[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.683907783Z     [94mdef[39;49;00m [92mtest_query_sort[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.683910165Z >       df_sort_project = spice.query([90m[39;49;00m
2024-12-30T09:41:05.683912285Z             [94m4388[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.683914769Z             sort_by=[33m'[39;49;00m[33mproject[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.683917276Z             cache=cache,[90m[39;49;00m
2024-12-30T09:41:05.683919364Z             cache_dir=[33m'[39;49;00m[33m/tmp/dune_spice/test_query_sort[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.683921711Z         )[90m[39;49;00m
2024-12-30T09:41:05.683923864Z 
2024-12-30T09:41:05.683971788Z [1m[31mtests/test_query.py[0m:81: 
2024-12-30T09:41:05.683978063Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.683980570Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:240: in query
2024-12-30T09:41:05.684269855Z     [0mdf = _get_results(**execute_kwargs, **result_kwargs)[90m[39;49;00m
2024-12-30T09:41:05.684273509Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:820: in _get_results
2024-12-30T09:41:05.684480567Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.684488140Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.684692685Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.684698008Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.684710298Z 
2024-12-30T09:41:05.684712743Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'...'OLDPWD': '/', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_query_sort[False] (call)'})
2024-12-30T09:41:05.684715235Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.684717294Z 
2024-12-30T09:41:05.685428187Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.685434717Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.685437180Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.685439714Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.685442090Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.685444607Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.685447004Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.685449164Z 
2024-12-30T09:41:05.685476186Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.685558555Z [31m[1m__________________________________________________________________________________ test_query_sort[True0] ___________________________________________________________________________________[0m
2024-12-30T09:41:05.685564140Z 
2024-12-30T09:41:05.685566134Z cache = True
2024-12-30T09:41:05.685568054Z 
2024-12-30T09:41:05.686586179Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.686592868Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_query_sort[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.686595557Z     [94mdef[39;49;00m [92mtest_query_sort[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.686597885Z >       df_sort_project = spice.query([90m[39;49;00m
2024-12-30T09:41:05.686599959Z             [94m4388[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.686602145Z             sort_by=[33m'[39;49;00m[33mproject[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.686604405Z             cache=cache,[90m[39;49;00m
2024-12-30T09:41:05.686606534Z             cache_dir=[33m'[39;49;00m[33m/tmp/dune_spice/test_query_sort[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.686614497Z         )[90m[39;49;00m
2024-12-30T09:41:05.686647143Z 
2024-12-30T09:41:05.686659300Z [1m[31mtests/test_query.py[0m:81: 
2024-12-30T09:41:05.686685527Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.686707364Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:228: in query
2024-12-30T09:41:05.686910309Z     [0mcache_result, cache_execution = _cache.load_from_cache([90m[39;49;00m
2024-12-30T09:41:05.686914577Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_cache.py[0m:27: in load_from_cache
2024-12-30T09:41:05.687128323Z     [0mexecution = _extract.get_latest_execution(execute_kwargs)[90m[39;49;00m
2024-12-30T09:41:05.687132143Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:1338: in get_latest_execution
2024-12-30T09:41:05.687294830Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.687304245Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.687541959Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.687556280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.687559731Z 
2024-12-30T09:41:05.687580642Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'...'OLDPWD': '/', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_query_sort[True0] (call)'})
2024-12-30T09:41:05.687585984Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.687588024Z 
2024-12-30T09:41:05.688211975Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.688217075Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.688219508Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.688221886Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.688224226Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.688233927Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.688244355Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.688246646Z 
2024-12-30T09:41:05.688281663Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.688371682Z [31m[1m__________________________________________________________________________________ test_query_sort[True1] ___________________________________________________________________________________[0m
2024-12-30T09:41:05.688376077Z 
2024-12-30T09:41:05.688378040Z cache = True
2024-12-30T09:41:05.688380274Z 
2024-12-30T09:41:05.689384790Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.689390141Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_query_sort[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.689392744Z     [94mdef[39;49;00m [92mtest_query_sort[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.689395072Z >       df_sort_project = spice.query([90m[39;49;00m
2024-12-30T09:41:05.689397176Z             [94m4388[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.689399346Z             sort_by=[33m'[39;49;00m[33mproject[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.689401618Z             cache=cache,[90m[39;49;00m
2024-12-30T09:41:05.689411596Z             cache_dir=[33m'[39;49;00m[33m/tmp/dune_spice/test_query_sort[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.689418531Z         )[90m[39;49;00m
2024-12-30T09:41:05.689420738Z 
2024-12-30T09:41:05.689453965Z [1m[31mtests/test_query.py[0m:81: 
2024-12-30T09:41:05.689463823Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.689473966Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:228: in query
2024-12-30T09:41:05.689715923Z     [0mcache_result, cache_execution = _cache.load_from_cache([90m[39;49;00m
2024-12-30T09:41:05.689722138Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_cache.py[0m:27: in load_from_cache
2024-12-30T09:41:05.689920510Z     [0mexecution = _extract.get_latest_execution(execute_kwargs)[90m[39;49;00m
2024-12-30T09:41:05.689923567Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:1338: in get_latest_execution
2024-12-30T09:41:05.690125089Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.690136320Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.690299372Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.690303177Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.690305657Z 
2024-12-30T09:41:05.690335034Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'...'OLDPWD': '/', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_query_sort[True1] (call)'})
2024-12-30T09:41:05.690338517Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.690340444Z 
2024-12-30T09:41:05.690991002Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.690999014Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.691001416Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.691003768Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.691006044Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.691008297Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.691011413Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.691013534Z 
2024-12-30T09:41:05.691036295Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.691126585Z [31m[1m_________________________________________________________________________________ test_query_columns[False] _________________________________________________________________________________[0m
2024-12-30T09:41:05.691130150Z 
2024-12-30T09:41:05.691132140Z cache = False
2024-12-30T09:41:05.691134087Z 
2024-12-30T09:41:05.692314397Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.692328256Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_query_columns[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.692330866Z     [94mdef[39;49;00m [92mtest_query_columns[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.692341090Z         columns = [[33m'[39;49;00m[33mproject[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_col1[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.692343961Z >       df_columns = spice.query([90m[39;49;00m
2024-12-30T09:41:05.692346084Z             [94m4388[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.692348165Z             columns=columns,[90m[39;49;00m
2024-12-30T09:41:05.692350270Z             cache=cache,[90m[39;49;00m
2024-12-30T09:41:05.692352402Z             cache_dir=[33m'[39;49;00m[33m/tmp/dune_spice/test_query_columns[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.692354759Z         )[90m[39;49;00m
2024-12-30T09:41:05.692365820Z 
2024-12-30T09:41:05.692369440Z [1m[31mtests/test_query.py[0m:108: 
2024-12-30T09:41:05.692371703Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.692374010Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:240: in query
2024-12-30T09:41:05.692696581Z     [0mdf = _get_results(**execute_kwargs, **result_kwargs)[90m[39;49;00m
2024-12-30T09:41:05.692706671Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:820: in _get_results
2024-12-30T09:41:05.692859677Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.692863244Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.693042192Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.693045993Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.693048362Z 
2024-12-30T09:41:05.693084795Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'...DPWD': '/', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_query_columns[False] (call)'})
2024-12-30T09:41:05.693091776Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.693093835Z 
2024-12-30T09:41:05.693748771Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.693756486Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.693758785Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.693778574Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.693781199Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.693783479Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.693786013Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.693788123Z 
2024-12-30T09:41:05.693790763Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.693873493Z [31m[1m_________________________________________________________________________________ test_query_columns[True0] _________________________________________________________________________________[0m
2024-12-30T09:41:05.693882344Z 
2024-12-30T09:41:05.693884655Z cache = True
2024-12-30T09:41:05.693886678Z 
2024-12-30T09:41:05.695004206Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.695010533Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_query_columns[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.695012993Z     [94mdef[39;49;00m [92mtest_query_columns[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.695015292Z         columns = [[33m'[39;49;00m[33mproject[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_col1[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.695017999Z >       df_columns = spice.query([90m[39;49;00m
2024-12-30T09:41:05.695020148Z             [94m4388[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.695022215Z             columns=columns,[90m[39;49;00m
2024-12-30T09:41:05.695024302Z             cache=cache,[90m[39;49;00m
2024-12-30T09:41:05.695027125Z             cache_dir=[33m'[39;49;00m[33m/tmp/dune_spice/test_query_columns[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.695029574Z         )[90m[39;49;00m
2024-12-30T09:41:05.695031544Z 
2024-12-30T09:41:05.695063708Z [1m[31mtests/test_query.py[0m:108: 
2024-12-30T09:41:05.695088201Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.695091368Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:228: in query
2024-12-30T09:41:05.695363640Z     [0mcache_result, cache_execution = _cache.load_from_cache([90m[39;49;00m
2024-12-30T09:41:05.695374880Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_cache.py[0m:27: in load_from_cache
2024-12-30T09:41:05.695567082Z     [0mexecution = _extract.get_latest_execution(execute_kwargs)[90m[39;49;00m
2024-12-30T09:41:05.695571694Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:1338: in get_latest_execution
2024-12-30T09:41:05.695752683Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.695755896Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.695930285Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.695933737Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.695936286Z 
2024-12-30T09:41:05.695955272Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'...DPWD': '/', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_query_columns[True0] (call)'})
2024-12-30T09:41:05.695958155Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.695960075Z 
2024-12-30T09:41:05.696621797Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.696625922Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.696628122Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.696630508Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.696634703Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.696636947Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.696639389Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.696642135Z 
2024-12-30T09:41:05.696679117Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.696752599Z [31m[1m_________________________________________________________________________________ test_query_columns[True1] _________________________________________________________________________________[0m
2024-12-30T09:41:05.696756320Z 
2024-12-30T09:41:05.696758397Z cache = True
2024-12-30T09:41:05.696765946Z 
2024-12-30T09:41:05.697895510Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.697904522Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_query_columns[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.697907121Z     [94mdef[39;49;00m [92mtest_query_columns[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.697909427Z         columns = [[33m'[39;49;00m[33mproject[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_col1[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.697912028Z >       df_columns = spice.query([90m[39;49;00m
2024-12-30T09:41:05.697914179Z             [94m4388[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.697932847Z             columns=columns,[90m[39;49;00m
2024-12-30T09:41:05.697943834Z             cache=cache,[90m[39;49;00m
2024-12-30T09:41:05.697946419Z             cache_dir=[33m'[39;49;00m[33m/tmp/dune_spice/test_query_columns[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.697949225Z         )[90m[39;49;00m
2024-12-30T09:41:05.697951268Z 
2024-12-30T09:41:05.697959852Z [1m[31mtests/test_query.py[0m:108: 
2024-12-30T09:41:05.698016730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.698025958Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:228: in query
2024-12-30T09:41:05.698228702Z     [0mcache_result, cache_execution = _cache.load_from_cache([90m[39;49;00m
2024-12-30T09:41:05.698232811Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_cache.py[0m:27: in load_from_cache
2024-12-30T09:41:05.698436217Z     [0mexecution = _extract.get_latest_execution(execute_kwargs)[90m[39;49;00m
2024-12-30T09:41:05.698439725Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:1338: in get_latest_execution
2024-12-30T09:41:05.698640249Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.698647193Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.698819758Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.698825041Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.698832045Z 
2024-12-30T09:41:05.698852630Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'...DPWD': '/', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_query_columns[True1] (call)'})
2024-12-30T09:41:05.698857634Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.698859661Z 
2024-12-30T09:41:05.699473184Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.699478228Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.699480415Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.699482669Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.699485071Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.699487283Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.699493531Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.699495726Z 
2024-12-30T09:41:05.699511491Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.699617820Z [31m[1m__________________________________________________________________________________ test_query_types[False] __________________________________________________________________________________[0m
2024-12-30T09:41:05.699622078Z 
2024-12-30T09:41:05.699623991Z cache = False
2024-12-30T09:41:05.699626402Z 
2024-12-30T09:41:05.700812130Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.700816446Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_query_types[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.700818859Z     [94mdef[39;49;00m [92mtest_query_types[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.700821124Z         types = [pl.String, pl.Datetime, pl.Float32][90m[39;49;00m
2024-12-30T09:41:05.700823260Z >       df = spice.query([90m[39;49;00m
2024-12-30T09:41:05.700825321Z             [94m4388[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.700833704Z             types=types,[90m[39;49;00m
2024-12-30T09:41:05.700842379Z             cache=cache,[90m[39;49;00m
2024-12-30T09:41:05.700844522Z             cache_dir=[33m'[39;49;00m[33m/tmp/dune_spice/test_query_types[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.700853840Z         )[90m[39;49;00m
2024-12-30T09:41:05.700856009Z 
2024-12-30T09:41:05.700877379Z [1m[31mtests/test_query.py[0m:125: 
2024-12-30T09:41:05.700922721Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.700930829Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:240: in query
2024-12-30T09:41:05.701206092Z     [0mdf = _get_results(**execute_kwargs, **result_kwargs)[90m[39;49;00m
2024-12-30T09:41:05.701212113Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:820: in _get_results
2024-12-30T09:41:05.701401496Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.701406202Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.701584969Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.701594611Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.701597238Z 
2024-12-30T09:41:05.701600099Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'...OLDPWD': '/', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_query_types[False] (call)'})
2024-12-30T09:41:05.701602529Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.701604691Z 
2024-12-30T09:41:05.702240057Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.702255704Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.702258102Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.702260553Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.702262723Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.702264974Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.702267458Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.702281713Z 
2024-12-30T09:41:05.702284546Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.702347744Z [31m[1m__________________________________________________________________________________ test_query_types[True0] __________________________________________________________________________________[0m
2024-12-30T09:41:05.702351964Z 
2024-12-30T09:41:05.702353848Z cache = True
2024-12-30T09:41:05.702360346Z 
2024-12-30T09:41:05.703601949Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.703606626Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_query_types[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.703609053Z     [94mdef[39;49;00m [92mtest_query_types[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.703611371Z         types = [pl.String, pl.Datetime, pl.Float32][90m[39;49;00m
2024-12-30T09:41:05.703613399Z >       df = spice.query([90m[39;49;00m
2024-12-30T09:41:05.703615499Z             [94m4388[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.703617547Z             types=types,[90m[39;49;00m
2024-12-30T09:41:05.703816500Z             cache=cache,[90m[39;49;00m
2024-12-30T09:41:05.703820607Z             cache_dir=[33m'[39;49;00m[33m/tmp/dune_spice/test_query_types[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.703824200Z         )[90m[39;49;00m
2024-12-30T09:41:05.703827345Z 
2024-12-30T09:41:05.703830163Z [1m[31mtests/test_query.py[0m:125: 
2024-12-30T09:41:05.703862006Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.703865355Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:228: in query
2024-12-30T09:41:05.704102603Z     [0mcache_result, cache_execution = _cache.load_from_cache([90m[39;49;00m
2024-12-30T09:41:05.704105497Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_cache.py[0m:27: in load_from_cache
2024-12-30T09:41:05.704310012Z     [0mexecution = _extract.get_latest_execution(execute_kwargs)[90m[39;49;00m
2024-12-30T09:41:05.704318687Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:1338: in get_latest_execution
2024-12-30T09:41:05.704498579Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.704509662Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.704707077Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.704715979Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.704718423Z 
2024-12-30T09:41:05.704720617Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'...OLDPWD': '/', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_query_types[True0] (call)'})
2024-12-30T09:41:05.704724064Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.704737668Z 
2024-12-30T09:41:05.705327466Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.705332365Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.705334666Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.705336861Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.705339010Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.705341288Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.705343804Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.705345950Z 
2024-12-30T09:41:05.705395343Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.705472533Z [31m[1m__________________________________________________________________________________ test_query_types[True1] __________________________________________________________________________________[0m
2024-12-30T09:41:05.705477212Z 
2024-12-30T09:41:05.705479319Z cache = True
2024-12-30T09:41:05.705481472Z 
2024-12-30T09:41:05.706754057Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.706762213Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_query_types[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.706764896Z     [94mdef[39;49;00m [92mtest_query_types[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.706773975Z         types = [pl.String, pl.Datetime, pl.Float32][90m[39;49;00m
2024-12-30T09:41:05.706776280Z >       df = spice.query([90m[39;49;00m
2024-12-30T09:41:05.706778454Z             [94m4388[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.706780625Z             types=types,[90m[39;49;00m
2024-12-30T09:41:05.706782627Z             cache=cache,[90m[39;49;00m
2024-12-30T09:41:05.706784713Z             cache_dir=[33m'[39;49;00m[33m/tmp/dune_spice/test_query_types[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.706787098Z         )[90m[39;49;00m
2024-12-30T09:41:05.706789061Z 
2024-12-30T09:41:05.706791177Z [1m[31mtests/test_query.py[0m:125: 
2024-12-30T09:41:05.706793422Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.706795697Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:228: in query
2024-12-30T09:41:05.706984947Z     [0mcache_result, cache_execution = _cache.load_from_cache([90m[39;49;00m
2024-12-30T09:41:05.706995775Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_cache.py[0m:27: in load_from_cache
2024-12-30T09:41:05.707174178Z     [0mexecution = _extract.get_latest_execution(execute_kwargs)[90m[39;49;00m
2024-12-30T09:41:05.707178130Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:1338: in get_latest_execution
2024-12-30T09:41:05.707385418Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.707388958Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.707564213Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.707568258Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.707570663Z 
2024-12-30T09:41:05.707616139Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'...OLDPWD': '/', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_query_types[True1] (call)'})
2024-12-30T09:41:05.707625281Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.707628740Z 
2024-12-30T09:41:05.708256350Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.708280123Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.708283265Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.708300277Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.708302810Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.708305083Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.708307909Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.708310130Z 
2024-12-30T09:41:05.708312210Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.708346218Z [31m[1m_____________________________________________________________________________ test_query_without_polling[False] _____________________________________________________________________________[0m
2024-12-30T09:41:05.708353700Z 
2024-12-30T09:41:05.708368127Z cache = False
2024-12-30T09:41:05.708370204Z 
2024-12-30T09:41:05.709194274Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.709199268Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_query_without_polling[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.709201883Z     [94mdef[39;49;00m [92mtest_query_without_polling[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.709204321Z >       execution = spice.query([94m4388[39;49;00m, poll=[94mFalse[39;49;00m, refresh=[94mTrue[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.709206706Z 
2024-12-30T09:41:05.709208635Z [1m[31mtests/test_query.py[0m:137: 
2024-12-30T09:41:05.709210747Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.709242541Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:243: in query
2024-12-30T09:41:05.709536287Z     [0mexecution = _execute(**execute_kwargs, verbose=verbose)[90m[39;49;00m
2024-12-30T09:41:05.709542370Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:739: in _execute
2024-12-30T09:41:05.709718954Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.709726737Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.709877685Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.709887474Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.709905805Z 
2024-12-30T09:41:05.709911708Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'.../', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_query_without_polling[False] (call)'})
2024-12-30T09:41:05.709914241Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.709930454Z 
2024-12-30T09:41:05.710543837Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.710558101Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.710560340Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.710562568Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.710564869Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.710566984Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.710570163Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.710572228Z 
2024-12-30T09:41:05.710608912Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.710664708Z [31m[1m_____________________________________________________________________________ test_query_without_polling[True0] _____________________________________________________________________________[0m
2024-12-30T09:41:05.710667975Z 
2024-12-30T09:41:05.710670004Z cache = True
2024-12-30T09:41:05.710672122Z 
2024-12-30T09:41:05.711519281Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.711533964Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_query_without_polling[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.711536474Z     [94mdef[39;49;00m [92mtest_query_without_polling[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.711538734Z >       execution = spice.query([94m4388[39;49;00m, poll=[94mFalse[39;49;00m, refresh=[94mTrue[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.711568145Z 
2024-12-30T09:41:05.711571277Z [1m[31mtests/test_query.py[0m:137: 
2024-12-30T09:41:05.711575788Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.711578143Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:243: in query
2024-12-30T09:41:05.711816805Z     [0mexecution = _execute(**execute_kwargs, verbose=verbose)[90m[39;49;00m
2024-12-30T09:41:05.711824940Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:739: in _execute
2024-12-30T09:41:05.711986511Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.711990133Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.712162808Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.712166770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.712169788Z 
2024-12-30T09:41:05.712194578Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'.../', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_query_without_polling[True0] (call)'})
2024-12-30T09:41:05.712197497Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.712199530Z 
2024-12-30T09:41:05.712828800Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.712835223Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.712837534Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.712839951Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.712842109Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.712844437Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.712846840Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.712849926Z 
2024-12-30T09:41:05.712873685Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.712958940Z [31m[1m_____________________________________________________________________________ test_query_without_polling[True1] _____________________________________________________________________________[0m
2024-12-30T09:41:05.712971604Z 
2024-12-30T09:41:05.712973850Z cache = True
2024-12-30T09:41:05.712975823Z 
2024-12-30T09:41:05.713789478Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.713795796Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_query_without_polling[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.713798392Z     [94mdef[39;49;00m [92mtest_query_without_polling[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.713800681Z >       execution = spice.query([94m4388[39;49;00m, poll=[94mFalse[39;49;00m, refresh=[94mTrue[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.713803101Z 
2024-12-30T09:41:05.713804988Z [1m[31mtests/test_query.py[0m:137: 
2024-12-30T09:41:05.713837072Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.713846297Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:243: in query
2024-12-30T09:41:05.714136347Z     [0mexecution = _execute(**execute_kwargs, verbose=verbose)[90m[39;49;00m
2024-12-30T09:41:05.714151445Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:739: in _execute
2024-12-30T09:41:05.714281533Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.714287367Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.714469503Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.714475592Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.714478049Z 
2024-12-30T09:41:05.714506464Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'.../', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_query_without_polling[True1] (call)'})
2024-12-30T09:41:05.714510196Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.714512543Z 
2024-12-30T09:41:05.715109482Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.715116784Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.715125923Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.715128391Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.715130745Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.715169586Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.715184302Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.715187102Z 
2024-12-30T09:41:05.715189211Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.715238415Z [31m[1m__________________________________________________________________________________ test_parameters[False] ___________________________________________________________________________________[0m
2024-12-30T09:41:05.715244199Z 
2024-12-30T09:41:05.715246278Z cache = False
2024-12-30T09:41:05.715248301Z 
2024-12-30T09:41:05.717663711Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.717674349Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_parameters[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.717677016Z     [94mdef[39;49;00m [92mtest_parameters[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.717679427Z         parameter_sets = [[90m[39;49;00m
2024-12-30T09:41:05.717682047Z             {[90m[39;49;00m
2024-12-30T09:41:05.717684182Z                 [33m'[39;49;00m[33mTextField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33mWord2[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.717686712Z                 [33m'[39;49;00m[33mNumberField[39;49;00m[33m'[39;49;00m: [94m5.1415926535[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.717689307Z                 [33m'[39;49;00m[33mDateField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33m2022-05-04 00:00:00[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.717691823Z                 [33m'[39;49;00m[33mListField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33mOption 2[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.717694220Z             },[90m[39;49;00m
2024-12-30T09:41:05.717696475Z             {[90m[39;49;00m
2024-12-30T09:41:05.717705188Z                 [33m'[39;49;00m[33mTextField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33mWord6[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.717710350Z                 [33m'[39;49;00m[33mNumberField[39;49;00m[33m'[39;49;00m: [94m9.1415926535[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.717712926Z                 [33m'[39;49;00m[33mDateField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33m2022-05-04 00:00:00[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.717781102Z                 [33m'[39;49;00m[33mListField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33mOption 1[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.717790116Z             },[90m[39;49;00m
2024-12-30T09:41:05.717792257Z             {[90m[39;49;00m
2024-12-30T09:41:05.717794293Z                 [33m'[39;49;00m[33mTextField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33mWord99[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.717796805Z                 [33m'[39;49;00m[33mNumberField[39;49;00m[33m'[39;49;00m: time.time(),[90m[39;49;00m
2024-12-30T09:41:05.717799181Z                 [33m'[39;49;00m[33mDateField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33m2022-05-04 00:00:00[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.717801678Z                 [33m'[39;49;00m[33mListField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33mOption 1[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.717804156Z             },[90m[39;49;00m
2024-12-30T09:41:05.717806182Z         ][90m[39;49;00m
2024-12-30T09:41:05.717808291Z         [94mfor[39;49;00m parameters [95min[39;49;00m parameter_sets:[90m[39;49;00m
2024-12-30T09:41:05.717810572Z >           df = spice.query([90m[39;49;00m
2024-12-30T09:41:05.717812672Z                 [94m1215383[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.717816082Z                 parameters=parameters,[90m[39;49;00m
2024-12-30T09:41:05.717818233Z                 cache=cache,[90m[39;49;00m
2024-12-30T09:41:05.717820313Z                 cache_dir=[33m'[39;49;00m[33m/tmp/dune_spice/test_parameters[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.717822622Z             )[90m[39;49;00m
2024-12-30T09:41:05.717824627Z 
2024-12-30T09:41:05.717867925Z [1m[31mtests/test_query.py[0m:171: 
2024-12-30T09:41:05.717880231Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.717891331Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:240: in query
2024-12-30T09:41:05.718152521Z     [0mdf = _get_results(**execute_kwargs, **result_kwargs)[90m[39;49;00m
2024-12-30T09:41:05.718163330Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:820: in _get_results
2024-12-30T09:41:05.718318452Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.718322994Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.718495791Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.718501396Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.718504813Z 
2024-12-30T09:41:05.718532113Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'...'OLDPWD': '/', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_parameters[False] (call)'})
2024-12-30T09:41:05.718536156Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.718538138Z 
2024-12-30T09:41:05.719163341Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.719168357Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.719170599Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.719172804Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.719175186Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.719177950Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.719180988Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.719183173Z 
2024-12-30T09:41:05.719200118Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.719295696Z [31m[1m__________________________________________________________________________________ test_parameters[True0] ___________________________________________________________________________________[0m
2024-12-30T09:41:05.719301241Z 
2024-12-30T09:41:05.719303300Z cache = True
2024-12-30T09:41:05.719305483Z 
2024-12-30T09:41:05.721716541Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.721723616Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_parameters[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.721726044Z     [94mdef[39;49;00m [92mtest_parameters[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.721728309Z         parameter_sets = [[90m[39;49;00m
2024-12-30T09:41:05.721730508Z             {[90m[39;49;00m
2024-12-30T09:41:05.721732511Z                 [33m'[39;49;00m[33mTextField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33mWord2[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.721735042Z                 [33m'[39;49;00m[33mNumberField[39;49;00m[33m'[39;49;00m: [94m5.1415926535[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.721737492Z                 [33m'[39;49;00m[33mDateField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33m2022-05-04 00:00:00[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.721767099Z                 [33m'[39;49;00m[33mListField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33mOption 2[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.721774005Z             },[90m[39;49;00m
2024-12-30T09:41:05.721776082Z             {[90m[39;49;00m
2024-12-30T09:41:05.721778205Z                 [33m'[39;49;00m[33mTextField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33mWord6[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.721780676Z                 [33m'[39;49;00m[33mNumberField[39;49;00m[33m'[39;49;00m: [94m9.1415926535[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.721783145Z                 [33m'[39;49;00m[33mDateField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33m2022-05-04 00:00:00[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.721795513Z                 [33m'[39;49;00m[33mListField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33mOption 1[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.721808998Z             },[90m[39;49;00m
2024-12-30T09:41:05.721821303Z             {[90m[39;49;00m
2024-12-30T09:41:05.721824044Z                 [33m'[39;49;00m[33mTextField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33mWord99[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.721833945Z                 [33m'[39;49;00m[33mNumberField[39;49;00m[33m'[39;49;00m: time.time(),[90m[39;49;00m
2024-12-30T09:41:05.721935549Z                 [33m'[39;49;00m[33mDateField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33m2022-05-04 00:00:00[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.721951141Z                 [33m'[39;49;00m[33mListField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33mOption 1[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.721954268Z             },[90m[39;49;00m
2024-12-30T09:41:05.721956402Z         ][90m[39;49;00m
2024-12-30T09:41:05.721958401Z         [94mfor[39;49;00m parameters [95min[39;49;00m parameter_sets:[90m[39;49;00m
2024-12-30T09:41:05.721960829Z >           df = spice.query([90m[39;49;00m
2024-12-30T09:41:05.721963224Z                 [94m1215383[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.721965351Z                 parameters=parameters,[90m[39;49;00m
2024-12-30T09:41:05.721967350Z                 cache=cache,[90m[39;49;00m
2024-12-30T09:41:05.721969462Z                 cache_dir=[33m'[39;49;00m[33m/tmp/dune_spice/test_parameters[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.721971878Z             )[90m[39;49;00m
2024-12-30T09:41:05.721973856Z 
2024-12-30T09:41:05.721975874Z [1m[31mtests/test_query.py[0m:171: 
2024-12-30T09:41:05.721983846Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.721987602Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:228: in query
2024-12-30T09:41:05.722225304Z     [0mcache_result, cache_execution = _cache.load_from_cache([90m[39;49;00m
2024-12-30T09:41:05.722229121Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_cache.py[0m:27: in load_from_cache
2024-12-30T09:41:05.722431030Z     [0mexecution = _extract.get_latest_execution(execute_kwargs)[90m[39;49;00m
2024-12-30T09:41:05.722434190Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:1338: in get_latest_execution
2024-12-30T09:41:05.722612968Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.722616317Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.722803648Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.722807170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.722813282Z 
2024-12-30T09:41:05.722847725Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'...'OLDPWD': '/', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_parameters[True0] (call)'})
2024-12-30T09:41:05.722850731Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.722852743Z 
2024-12-30T09:41:05.723467662Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.723473417Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.723475605Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.723478214Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.723480446Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.723482655Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.723493803Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.723497545Z 
2024-12-30T09:41:05.723499497Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.723602322Z [31m[1m__________________________________________________________________________________ test_parameters[True1] ___________________________________________________________________________________[0m
2024-12-30T09:41:05.723606538Z 
2024-12-30T09:41:05.723608464Z cache = True
2024-12-30T09:41:05.723613534Z 
2024-12-30T09:41:05.725973144Z     [0m[37m@pytest[39;49;00m.mark.parametrize([33m'[39;49;00m[33mcache[39;49;00m[33m'[39;49;00m, [[94mFalse[39;49;00m, [94mTrue[39;49;00m, [94mTrue[39;49;00m])[90m[39;49;00m
2024-12-30T09:41:05.725982064Z     [37m@pytest[39;49;00m.mark.xdist_group(name=[33m'[39;49;00m[33mtest_parameters[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
2024-12-30T09:41:05.725984567Z     [94mdef[39;49;00m [92mtest_parameters[39;49;00m(cache: [96mbool[39;49;00m):[90m[39;49;00m
2024-12-30T09:41:05.725986826Z         parameter_sets = [[90m[39;49;00m
2024-12-30T09:41:05.725989021Z             {[90m[39;49;00m
2024-12-30T09:41:05.725991110Z                 [33m'[39;49;00m[33mTextField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33mWord2[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.726000772Z                 [33m'[39;49;00m[33mNumberField[39;49;00m[33m'[39;49;00m: [94m5.1415926535[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.726003310Z                 [33m'[39;49;00m[33mDateField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33m2022-05-04 00:00:00[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.726005979Z                 [33m'[39;49;00m[33mListField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33mOption 2[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.726008382Z             },[90m[39;49;00m
2024-12-30T09:41:05.726010402Z             {[90m[39;49;00m
2024-12-30T09:41:05.726013570Z                 [33m'[39;49;00m[33mTextField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33mWord6[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.726016089Z                 [33m'[39;49;00m[33mNumberField[39;49;00m[33m'[39;49;00m: [94m9.1415926535[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.726018393Z                 [33m'[39;49;00m[33mDateField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33m2022-05-04 00:00:00[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.726051071Z                 [33m'[39;49;00m[33mListField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33mOption 1[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.726061595Z             },[90m[39;49;00m
2024-12-30T09:41:05.726063905Z             {[90m[39;49;00m
2024-12-30T09:41:05.726065896Z                 [33m'[39;49;00m[33mTextField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33mWord99[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.726068417Z                 [33m'[39;49;00m[33mNumberField[39;49;00m[33m'[39;49;00m: time.time(),[90m[39;49;00m
2024-12-30T09:41:05.726071082Z                 [33m'[39;49;00m[33mDateField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33m2022-05-04 00:00:00[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.726101471Z                 [33m'[39;49;00m[33mListField[39;49;00m[33m'[39;49;00m: [33m'[39;49;00m[33mOption 1[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.726109172Z             },[90m[39;49;00m
2024-12-30T09:41:05.726111224Z         ][90m[39;49;00m
2024-12-30T09:41:05.726113244Z         [94mfor[39;49;00m parameters [95min[39;49;00m parameter_sets:[90m[39;49;00m
2024-12-30T09:41:05.726115707Z >           df = spice.query([90m[39;49;00m
2024-12-30T09:41:05.726123298Z                 [94m1215383[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.726125580Z                 parameters=parameters,[90m[39;49;00m
2024-12-30T09:41:05.726137932Z                 cache=cache,[90m[39;49;00m
2024-12-30T09:41:05.726142121Z                 cache_dir=[33m'[39;49;00m[33m/tmp/dune_spice/test_parameters[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
2024-12-30T09:41:05.726144492Z             )[90m[39;49;00m
2024-12-30T09:41:05.726146475Z 
2024-12-30T09:41:05.726177371Z [1m[31mtests/test_query.py[0m:171: 
2024-12-30T09:41:05.726181404Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.726231002Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:228: in query
2024-12-30T09:41:05.726458667Z     [0mcache_result, cache_execution = _cache.load_from_cache([90m[39;49;00m
2024-12-30T09:41:05.726468211Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_cache.py[0m:27: in load_from_cache
2024-12-30T09:41:05.726662168Z     [0mexecution = _extract.get_latest_execution(execute_kwargs)[90m[39;49;00m
2024-12-30T09:41:05.726666566Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_extract.py[0m:1338: in get_latest_execution
2024-12-30T09:41:05.726831866Z     [0mapi_key = _urls.get_api_key()[90m[39;49;00m
2024-12-30T09:41:05.726835402Z [1m[31m/usr/local/lib/python3.10/site-packages/spice/_urls.py[0m:78: in get_api_key
2024-12-30T09:41:05.727013264Z     [0m[94mreturn[39;49;00m os.environ[[33m'[39;49;00m[33mDUNE_API_KEY[39;49;00m[33m'[39;49;00m][90m[39;49;00m
2024-12-30T09:41:05.727018123Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
2024-12-30T09:41:05.727020544Z 
2024-12-30T09:41:05.727053809Z self = environ({'PYTHON_SHA256': 'bfb249609990220491a1b92850a07135ed0831e41738cf681d63cf01b2a8fbd1', 'no_proxy': '.d.org'...'OLDPWD': '/', 'PYTEST_VERSION': '8.3.4', 'PYTEST_CURRENT_TEST': 'tests/test_query.py::test_parameters[True1] (call)'})
2024-12-30T09:41:05.727059664Z key = 'DUNE_API_KEY'
2024-12-30T09:41:05.727061714Z 
2024-12-30T09:41:05.727732451Z     [0m[94mdef[39;49;00m [92m__getitem__[39;49;00m([96mself[39;49;00m, key):[90m[39;49;00m
2024-12-30T09:41:05.727737430Z         [94mtry[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.727739753Z             value = [96mself[39;49;00m._data[[96mself[39;49;00m.encodekey(key)][90m[39;49;00m
2024-12-30T09:41:05.727742143Z         [94mexcept[39;49;00m [96mKeyError[39;49;00m:[90m[39;49;00m
2024-12-30T09:41:05.727759989Z             [90m# raise KeyError with the original key value[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.727762398Z >           [94mraise[39;49;00m [96mKeyError[39;49;00m(key) [94mfrom[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
2024-12-30T09:41:05.727764847Z [1m[31mE           KeyError: 'DUNE_API_KEY'[0m
2024-12-30T09:41:05.727766980Z 
2024-12-30T09:41:05.727769625Z [1m[31m/usr/local/lib/python3.10/os.py[0m:680: KeyError
2024-12-30T09:41:05.727894781Z [33m===================================================================================== warnings summary ======================================================================================[0m
2024-12-30T09:41:05.728006252Z tests/test_async_query.py:10
2024-12-30T09:41:05.728010826Z   /spice/tests/test_async_query.py:10: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.728013583Z     @pytest.mark.asyncio
2024-12-30T09:41:05.728015543Z 
2024-12-30T09:41:05.728086884Z tests/test_async_query.py:12
2024-12-30T09:41:05.728089529Z   /spice/tests/test_async_query.py:12: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.728091939Z     @pytest.mark.xdist_group(name='test_query_async')
2024-12-30T09:41:05.728094053Z 
2024-12-30T09:41:05.728160262Z tests/test_async_query.py:17
2024-12-30T09:41:05.728162994Z   /spice/tests/test_async_query.py:17: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.728165940Z     @pytest.mark.asyncio
2024-12-30T09:41:05.728167793Z 
2024-12-30T09:41:05.728240288Z tests/test_async_query.py:19
2024-12-30T09:41:05.728247109Z   /spice/tests/test_async_query.py:19: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.728249654Z     @pytest.mark.xdist_group(name='test_query_limits_async')
2024-12-30T09:41:05.728251861Z 
2024-12-30T09:41:05.728311458Z tests/test_async_query.py:29
2024-12-30T09:41:05.728314746Z   /spice/tests/test_async_query.py:29: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.728317176Z     @pytest.mark.asyncio
2024-12-30T09:41:05.728325382Z 
2024-12-30T09:41:05.728418032Z tests/test_async_query.py:31
2024-12-30T09:41:05.728429812Z   /spice/tests/test_async_query.py:31: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.728432798Z     @pytest.mark.xdist_group(name='test_query_offsets_async')
2024-12-30T09:41:05.728434969Z 
2024-12-30T09:41:05.728473046Z tests/test_async_query.py:40
2024-12-30T09:41:05.728477059Z   /spice/tests/test_async_query.py:40: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.728479621Z     @pytest.mark.asyncio
2024-12-30T09:41:05.728481653Z 
2024-12-30T09:41:05.728544143Z tests/test_async_query.py:42
2024-12-30T09:41:05.728556669Z   /spice/tests/test_async_query.py:42: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.728560009Z     @pytest.mark.xdist_group(name='test_query_sort_async')
2024-12-30T09:41:05.728562080Z 
2024-12-30T09:41:05.728623767Z tests/test_async_query.py:61
2024-12-30T09:41:05.728626940Z   /spice/tests/test_async_query.py:61: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.728629570Z     @pytest.mark.asyncio
2024-12-30T09:41:05.728631553Z 
2024-12-30T09:41:05.728696599Z tests/test_async_query.py:63
2024-12-30T09:41:05.728704680Z   /spice/tests/test_async_query.py:63: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.728707494Z     @pytest.mark.xdist_group(name='test_query_columns_async')
2024-12-30T09:41:05.728715406Z 
2024-12-30T09:41:05.728783469Z tests/test_async_query.py:72
2024-12-30T09:41:05.728786409Z   /spice/tests/test_async_query.py:72: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.728788678Z     @pytest.mark.asyncio
2024-12-30T09:41:05.728790607Z 
2024-12-30T09:41:05.728853669Z tests/test_async_query.py:74
2024-12-30T09:41:05.728856864Z   /spice/tests/test_async_query.py:74: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.728859403Z     @pytest.mark.xdist_group(name='test_query_types_async')
2024-12-30T09:41:05.728867047Z 
2024-12-30T09:41:05.728929639Z tests/test_async_query.py:81
2024-12-30T09:41:05.728932892Z   /spice/tests/test_async_query.py:81: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.728935492Z     @pytest.mark.asyncio
2024-12-30T09:41:05.728953648Z 
2024-12-30T09:41:05.729014145Z tests/test_async_query.py:83
2024-12-30T09:41:05.729017212Z   /spice/tests/test_async_query.py:83: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.729019760Z     @pytest.mark.xdist_group(name='test_query_without_polling_async')
2024-12-30T09:41:05.729022276Z 
2024-12-30T09:41:05.729103846Z tests/test_async_query.py:93
2024-12-30T09:41:05.729108545Z   /spice/tests/test_async_query.py:93: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.729111912Z     @pytest.mark.asyncio
2024-12-30T09:41:05.729114792Z 
2024-12-30T09:41:05.729169759Z tests/test_async_query.py:95
2024-12-30T09:41:05.729172879Z   /spice/tests/test_async_query.py:95: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.729175491Z     @pytest.mark.xdist_group(name='test_parameters_async')
2024-12-30T09:41:05.729177593Z 
2024-12-30T09:41:05.729249180Z tests/test_query.py:13
2024-12-30T09:41:05.729252458Z   /spice/tests/test_query.py:13: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.729254904Z     @pytest.mark.xdist_group(name='test_query')
2024-12-30T09:41:05.729256846Z 
2024-12-30T09:41:05.729321611Z tests/test_query.py:19
2024-12-30T09:41:05.729324173Z   /spice/tests/test_query.py:19: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.729326489Z     @pytest.mark.xdist_group(name='test_query_limits')
2024-12-30T09:41:05.729328429Z 
2024-12-30T09:41:05.729429056Z tests/test_query.py:45
2024-12-30T09:41:05.729440188Z   /spice/tests/test_query.py:45: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.729450876Z     @pytest.mark.xdist_group(name='test_query_offsets')
2024-12-30T09:41:05.729453202Z 
2024-12-30T09:41:05.729477088Z tests/test_query.py:79
2024-12-30T09:41:05.729480253Z   /spice/tests/test_query.py:79: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.729482747Z     @pytest.mark.xdist_group(name='test_query_sort')
2024-12-30T09:41:05.729484792Z 
2024-12-30T09:41:05.729563873Z tests/test_query.py:105
2024-12-30T09:41:05.729568748Z   /spice/tests/test_query.py:105: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.729571282Z     @pytest.mark.xdist_group(name='test_query_columns')
2024-12-30T09:41:05.729573244Z 
2024-12-30T09:41:05.729632030Z tests/test_query.py:122
2024-12-30T09:41:05.729634794Z   /spice/tests/test_query.py:122: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.729637219Z     @pytest.mark.xdist_group(name='test_query_types')
2024-12-30T09:41:05.729639250Z 
2024-12-30T09:41:05.729700554Z tests/test_query.py:135
2024-12-30T09:41:05.729703440Z   /spice/tests/test_query.py:135: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.729705905Z     @pytest.mark.xdist_group(name='test_query_without_polling')
2024-12-30T09:41:05.729707911Z 
2024-12-30T09:41:05.729792590Z tests/test_query.py:148
2024-12-30T09:41:05.729801524Z   /spice/tests/test_query.py:148: PytestUnknownMarkWarning: Unknown pytest.mark.xdist_group - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
2024-12-30T09:41:05.729804511Z     @pytest.mark.xdist_group(name='test_parameters')
2024-12-30T09:41:05.729806665Z 
2024-12-30T09:41:05.729904735Z tests/test_async_query.py: 24 warnings
2024-12-30T09:41:05.729907688Z   /usr/local/lib/python3.10/site-packages/_pytest/python.py:148: PytestUnhandledCoroutineWarning: async def functions are not natively supported and have been skipped.
2024-12-30T09:41:05.729909991Z   You need to install a suitable plugin for your async framework, for example:
2024-12-30T09:41:05.729912065Z     - anyio
2024-12-30T09:41:05.729914000Z     - pytest-asyncio
2024-12-30T09:41:05.729916027Z     - pytest-tornasync
2024-12-30T09:41:05.729917989Z     - pytest-trio
2024-12-30T09:41:05.729925794Z     - pytest-twisted
2024-12-30T09:41:05.729927815Z     warnings.warn(PytestUnhandledCoroutineWarning(msg.format(nodeid)))
2024-12-30T09:41:05.729930422Z 
2024-12-30T09:41:05.729932374Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2024-12-30T09:41:05.730995465Z [36m[1m================================================================================== short test summary info ==================================================================================[0m
2024-12-30T09:41:05.731002998Z [31mFAILED[0m tests/test_query.py::[1mtest_query[False][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731005411Z [31mFAILED[0m tests/test_query.py::[1mtest_query[True0][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731007577Z [31mFAILED[0m tests/test_query.py::[1mtest_query[True1][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731009810Z [31mFAILED[0m tests/test_query.py::[1mtest_query_limits[False][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731012121Z [31mFAILED[0m tests/test_query.py::[1mtest_query_limits[True0][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731014246Z [31mFAILED[0m tests/test_query.py::[1mtest_query_limits[True1][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731016344Z [31mFAILED[0m tests/test_query.py::[1mtest_query_offsets[False][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731018504Z [31mFAILED[0m tests/test_query.py::[1mtest_query_offsets[True0][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731037368Z [31mFAILED[0m tests/test_query.py::[1mtest_query_offsets[True1][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731041223Z [31mFAILED[0m tests/test_query.py::[1mtest_query_sort[False][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731043690Z [31mFAILED[0m tests/test_query.py::[1mtest_query_sort[True0][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731045859Z [31mFAILED[0m tests/test_query.py::[1mtest_query_sort[True1][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731048014Z [31mFAILED[0m tests/test_query.py::[1mtest_query_columns[False][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731072876Z [31mFAILED[0m tests/test_query.py::[1mtest_query_columns[True0][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731075764Z [31mFAILED[0m tests/test_query.py::[1mtest_query_columns[True1][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731077962Z [31mFAILED[0m tests/test_query.py::[1mtest_query_types[False][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731080044Z [31mFAILED[0m tests/test_query.py::[1mtest_query_types[True0][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731123594Z [31mFAILED[0m tests/test_query.py::[1mtest_query_types[True1][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731143611Z [31mFAILED[0m tests/test_query.py::[1mtest_query_without_polling[False][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731146290Z [31mFAILED[0m tests/test_query.py::[1mtest_query_without_polling[True0][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731148563Z [31mFAILED[0m tests/test_query.py::[1mtest_query_without_polling[True1][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731151062Z [31mFAILED[0m tests/test_query.py::[1mtest_parameters[False][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731153302Z [31mFAILED[0m tests/test_query.py::[1mtest_parameters[True0][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731155505Z [31mFAILED[0m tests/test_query.py::[1mtest_parameters[True1][0m - KeyError: 'DUNE_API_KEY'
2024-12-30T09:41:05.731292479Z [31m======================================================================== [31m[1m24 failed[0m, [33m24 skipped[0m, [33m48 warnings[0m[31m in 1.75s[0m[31m ========================================================================[0m
2024-12-30T09:41:22.849785683Z [?2004hroot@a6be3969aece:/spice# exit
2024-12-30T09:41:22.849833913Z [?2004l
exit
