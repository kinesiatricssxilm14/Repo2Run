diff --git a/rapid_doc/main.py b/rapid_doc/main.py
index e24b489..a4c6144 100644
--- a/rapid_doc/main.py
+++ b/rapid_doc/main.py
@@ -17,10 +17,10 @@ from .utils import which_type
 
 
 class RapidDoc:
-    def __init__(self, dpi: int = 96):
+    def __init__(self, pdf_path: str = 'tests/test_files/direct_extract/single_column.pdf', dpi: int = 96):
+        pdf_path = pdf_path or 'tests/test_files/direct_extract/single_column.pdf'
         self.dpi = dpi
-        self.layout = RapidLayout()
-        self.pdf_extracter = PDFExtract()
+        self.pdf_extracter = PDFExtract(pdf_path)
         self.ocr_extracter = OCRExtract()
         self.layout_recover = LayoutRecover()
 
diff --git a/rapid_doc/pdf_extract/main.py b/rapid_doc/pdf_extract/main.py
index b56818a..80c7384 100644
--- a/rapid_doc/pdf_extract/main.py
+++ b/rapid_doc/pdf_extract/main.py
@@ -19,24 +19,42 @@ from ..utils import is_contain_continous_str, only_contain_str
 
 
 class PDFExtract:
-    def __init__(self):
-        self.pdf_path = None
+    def __init__(self, pdf_path: str):
+        self.pdf_path = pdf_path
+            self.extract_all_pages(pdf_path)
         self.pages = None
         self.ratio = None
 
     def extract_all_pages(self, pdf_path: str):
-        self.pages = list(extract_pages(pdf_path))
-
-    def read_pdf(self, pdf_path) -> List:
+        pdf_path = str(self.pdf_path)
+        with fitz.open(pdf_path) as doc:
+            self.pages = [page.get_pixmap() for page in doc]
+            
+        self.pages += list(extract_pages(pdf_path))
+
+    def read_pdf(self, pdf_path=None) -> List:
+        if pdf_path is None:
+            pdf_path = self.pdf_path
+        
+        
+        
+        
         def convert_img(page):
             pix = page.get_pixmap(dpi=200)
             img = np.frombuffer(pix.samples, dtype=np.uint8)
             img = img.reshape([pix.h, pix.w, pix.n])
             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
             return img
-
-        with fitz.open(pdf_path) as pdfer:
-            pdf_img_list = list(map(convert_img, pdfer))
+        
+        pdf_img_list = []
+        self.extract_all_pages(pdf_path)
+        pdf_img_list = []
+        self.extract_all_pages(pdf_path)
+        for page in self.pages:
+            if isinstance(page, fitz.Page):
+                pdf_img_list.append(self.convert_img(page))
+            else:
+                pdf_img_list.append(None)  # Handling LTPage differently other than fitz.Page
         return pdf_img_list
 
     def get_page_count(self, pdf_path):
diff --git a/tests/test_files/direct_extract/single_column.pdf b/tests/test_files/direct_extract/single_column.pdf
index dad8138..62a69fb 100644
Binary files a/tests/test_files/direct_extract/single_column.pdf and b/tests/test_files/direct_extract/single_column.pdf differ
