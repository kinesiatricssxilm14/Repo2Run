#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 10.45kB done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/python:3.10
#2 DONE 0.0s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/7] FROM docker.io/library/python:3.10
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 59.94kB 0.0s done
#5 DONE 0.0s

#6 [2/7] COPY search_patch /search_patch
#6 CACHED

#7 [3/7] COPY code_edit.py /code_edit.py
#7 CACHED

#8 [4/7] RUN mkdir -p ~/.pip && touch ~/.pip/pip.conf &&     echo "[global]" >> ~/.pip/pip.conf && echo "index-url=http://simple/" >> ~/.pip/pip.conf && echo "[install]" >> ~/.pip/pip.conf && echo "trusted-host=pypi..org" >> ~/.pip/pip.conf &&     apt-get update && apt-get install -y curl &&     curl -sSL https://install.python-poetry.org | python -
#8 0.532 Get:1 http://deb.debian.org/debian bookworm InRelease [151 kB]
#8 0.896 Get:2 http://deb.debian.org/debian bookworm-updates InRelease [55.4 kB]
#8 1.002 Get:3 http://deb.debian.org/debian-security bookworm-security InRelease [48.0 kB]
#8 1.109 Get:4 http://deb.debian.org/debian bookworm/main amd64 Packages [8789 kB]
#8 1.736 Get:5 http://deb.debian.org/debian bookworm-updates/main amd64 Packages [8856 B]
#8 1.900 Get:6 http://deb.debian.org/debian-security bookworm-security/main amd64 Packages [240 kB]
#8 3.030 Fetched 9292 kB in 3s (3459 kB/s)
#8 3.030 Reading package lists...
#8 3.834 Reading package lists...
#8 4.745 Building dependency tree...
#8 4.984 Reading state information...
#8 5.383 curl is already the newest version (7.88.1-10+deb12u8).
#8 5.383 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#8 27.23 Retrieving Poetry metadata
#8 27.23 
#8 27.23 # Welcome to Poetry!
#8 27.23 
#8 27.23 This will download and install the latest version of Poetry,
#8 27.23 a dependency and package manager for Python.
#8 27.23 
#8 27.23 It will add the `poetry` command to Poetry's bin directory, located at:
#8 27.23 
#8 27.23 /root/.local/bin
#8 27.23 
#8 27.23 You can uninstall at any time by executing this script with the --uninstall option,
#8 27.23 and these changes will be reverted.
#8 27.23 
#8 27.23 Installing Poetry (2.0.0)
#8 27.23 Installing Poetry (2.0.0): Creating environment
#8 27.23 Installing Poetry (2.0.0): Installing Poetry
#8 27.23 Installing Poetry (2.0.0): Creating script
#8 27.23 Installing Poetry (2.0.0): Done
#8 27.23 
#8 27.23 Poetry (2.0.0) is installed now. Great!
#8 27.23 
#8 27.23 To get started you need Poetry's bin directory (/root/.local/bin) in your `PATH`
#8 27.23 environment variable.
#8 27.23 
#8 27.23 Add `export PATH="/root/.local/bin:$PATH"` to your shell configuration file.
#8 27.23 
#8 27.23 Alternatively, you can call Poetry explicitly with `/root/.local/bin/poetry`.
#8 27.23 
#8 27.23 You can test that everything is set up by executing:
#8 27.23 
#8 27.23 `poetry --version`
#8 27.23 
#8 DONE 27.5s

#9 [5/7] RUN pip install pytest pytest-xdist &&     pip install pipdeptree &&     git clone https://github.com/RapidAI/RapidDoc.git &&     mkdir /repo &&     git config --global --add safe.directory /repo &&     cp -r /RapidDoc/. /repo && rm -rf /RapidDoc/ &&     rm -rf /RapidDoc &&     cd /repo && git checkout 5e5fef5e7d02bb646111e063e041566318596c50 &&     pip install filetype==1.2.0 &&     pip install rapid-layout==0.4.0 &&     pip install numpy==1.26.4 &&     pip install opencv_python_headless==4.10.0.84 &&     pip install pdfminer.six==20231228 &&     pip install Pillow==11.0.0 &&     pip install tqdm==4.67.1 &&     pip install pymupdf==1.25.1 &&     pip install camelot-py==0.11.0 &&     pip install pdf2image==1.17.0 &&     pip install pdfplumber==0.11.4 &&     pip install shapely==2.0.6 &&     apt-get update -qq &&     apt-get install -y -qq poppler-utils &&     pip install rapidocr-onnxruntime==1.4.3 &&     echo "1 0 obj\n<< /Type /Catalog /Pages 2 0 R >>\nendobj\n2 0 obj\n<< /Type /Pages /Kids [3 0 R] /Count 1 >>\nendobj\n3 0 obj\n<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 4 0 R /Resources << /Font << /F1 5 0 R >> >> >>\nendobj\n4 0 obj\n<< /Length 44 >>\nstream\nBT /F1 24 Tf 36 700 Td (Hello, PDF world!) Tj ET\nendstream\nendobj\n5 0 obj\n<< /Type /Font /Subtype /Type1 /BaseFont /Helvetica >>\nendobj\ntrailer\n<< /Root 1 0 R >>\n%%EOF" > /repo/1.pdf &&     mkdir -p /repo/path/to &&     cd /repo && echo "1 0 obj\n<< /Type /Catalog /Pages 2 0 R >>\nendobj\n2 0 obj\n<< /Type /Pages /Kids [3 0 R] /Count 1 >>\nendobj\n3 0 obj\n<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 4 0 R /Resources << /Font << /F1 5 0 R >> >> >>\nendobj\n4 0 obj\n<< /Length 44 >>\nstream\nBT /F1 24 Tf 36 700 Td (Hello, PDF world!) Tj ET\nendstream\nendobj\n5 0 obj\n<< /Type /Font /Subtype /Type1 /BaseFont /Helvetica >>\nendobj\ntrailer\n<< /Root 1 0 R >>\n%%EOF" > 1.pdf &&     cd /repo && mkdir -p /repo/path/to &&     cd /repo && mkdir -p /repo/path/to &&     cd /repo && echo "1 0 obj << /Type /Catalog /Pages 2 0 R >> endobj 2 0 obj << /Type /Pages /Kids [3 0 R] /Count 1 >> endobj 3 0 obj << /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 4 0 R /Resources << /Font << /F1 5 0 R >> >> >> endobj 4 0 obj << /Length 44 >> stream BT /F1 24 Tf 36 700 Td (Hello, PDF world!) Tj ET endstream endobj 5 0 obj << /Type /Font /Subtype /Type1 /BaseFont /Helvetica >> endobj trailer << /Root 1 0 R >> %%EOF" > 1.pdf &&     pip install PyPDF2==3.0.1 &&     echo "from PyPDF2 import PdfFileWriter; file_writer = PdfFileWriter(); file_writer.addBlankPage(width=612, height=792); with open('/repo/1.pdf', 'wb') as f: file_writer.write(f)" > /repo/create_pdf.py &&     echo "from PyPDF2 import PdfFileWriter; file_writer = PdfFileWriter(); file_writer.addBlankPage(width=612, height=792); output = open('/repo/1.pdf', 'wb'); file_writer.write(output); output.close()" > /repo/create_pdf.py &&     echo "from PyPDF2 import PdfWriter; file_writer = PdfWriter(); file_writer.addBlankPage(width=612, height=792); output = open('/repo/1.pdf', 'wb'); file_writer.write(output); output.close()" > /repo/create_pdf.py &&     echo "from PyPDF2 import PdfWriter; file_writer = PdfWriter(); file_writer.add_blank_page(width=612, height=792); output = open('/repo/1.pdf', 'wb'); file_writer.write(output); output.close()" > /repo/create_pdf.py &&     python3 /repo/create_pdf.py &&     mkdir -p /repo/path/to &&     cp /repo/1.pdf /repo/path/to/pdf &&     echo "from pathlib import Path; from rapid_doc.pdf_extract.main import PDFExtract; pdf_path = Path('tests/test_files/direct_extract/single_column.pdf'); extract = PDFExtract(); extract.extract_all_pages(pdf_path);" > /repo/setup_pdf_extract.py &&     mkdir -p /repo/tests/test_files/direct_extract/ &&     python3 -c "from PyPDF2 import PdfWriter; file_writer = PdfWriter(); file_writer.add_blank_page(width=612, height=792); output = open('/repo/tests/test_files/direct_extract/single_column.pdf', 'wb'); file_writer.write(output); output.close()" &&     echo "from pathlib import Path; from rapid_doc.pdf_extract.main import PDFExtract; pdf_path = Path('/repo/tests/test_files/direct_extract/single_column.pdf'); extract = PDFExtract(); extract.extract_all_pages(pdf_path);" > /repo/setup_pdf_extract.py &&     python3 /repo/setup_pdf_extract.py &&     python /code_edit.py -t "/search_patch/0.patch" &&     mkdir -p /path/to &&     ln -s /repo/1.pdf /path/to/pdf &&     echo "from pathlib import Path; from rapid_doc.pdf_extract.main import PDFExtract; pdf_path = Path('/repo/tests/test_files/direct_extract/single_column.pdf'); extract = PDFExtract(pdf_path); pdf_img_list = extract.read_pdf(pdf_path); pdf_nums = extract.get_page_count(pdf_path); print('ok')" > /repo/helper_test_pdf_extract.py &&     python3 /repo/helper_test_pdf_extract.py &&     python /code_edit.py -t "/search_patch/1.patch" &&     python /code_edit.py -t "/search_patch/2.patch" &&     python /code_edit.py -t "/search_patch/3.patch" &&     python /code_edit.py -t "/search_patch/4.patch" &&     python /code_edit.py -t "/search_patch/5.patch" &&     python /code_edit.py -t "/search_patch/6.patch" &&     python /code_edit.py -t "/search_patch/7.patch" &&     python /code_edit.py -t "/search_patch/8.patch" &&     python /code_edit.py -t "/search_patch/9.patch" &&     python /code_edit.py -t "/search_patch/10.patch" &&     python /code_edit.py -t "/search_patch/11.patch" &&     python /code_edit.py -t "/search_patch/12.patch" &&     python /code_edit.py -t "/search_patch/13.patch" &&     python /code_edit.py -t "/search_patch/14.patch" &&     python /code_edit.py -t "/search_patch/15.patch" &&     python /code_edit.py -t "/search_patch/16.patch" &&     python /code_edit.py -t "/search_patch/17.patch" &&     python /code_edit.py -t "/search_patch/18.patch" &&     python /code_edit.py -t "/search_patch/19.patch" &&     python /code_edit.py -t "/search_patch/20.patch" &&     python /code_edit.py -t "/search_patch/21.patch" &&     python /code_edit.py -t "/search_patch/22.patch" &&     python /code_edit.py -t "/search_patch/23.patch" &&     python /code_edit.py -t "/search_patch/24.patch" &&     python /code_edit.py -t "/search_patch/25.patch" &&     python /code_edit.py -t "/search_patch/26.patch" &&     python /code_edit.py -t "/search_patch/27.patch" &&     python /code_edit.py -t "/search_patch/28.patch" &&     python /code_edit.py -t "/search_patch/29.patch" &&     python /code_edit.py -t "/search_patch/30.patch" &&     python /code_edit.py -t "/search_patch/31.patch" &&     python /code_edit.py -t "/search_patch/32.patch" &&     python /code_edit.py -t "/search_patch/33.patch" &&     python /code_edit.py -t "/search_patch/34.patch" &&     python /code_edit.py -t "/search_patch/35.patch" &&     python /code_edit.py -t "/search_patch/36.patch" &&     python /code_edit.py -t "/search_patch/37.patch" &&     python /code_edit.py -t "/search_patch/38.patch" &&     python /code_edit.py -t "/search_patch/39.patch" &&     python /code_edit.py -t "/search_patch/40.patch" &&     python /code_edit.py -t "/search_patch/41.patch" &&     python /code_edit.py -t "/search_patch/42.patch" &&     python /code_edit.py -t "/search_patch/43.patch" &&     python /code_edit.py -t "/search_patch/44.patch" &&     python /code_edit.py -t "/search_patch/45.patch" &&     python /code_edit.py -t "/search_patch/46.patch" &&     python /code_edit.py -t "/search_patch/47.patch" &&     python /code_edit.py -t "/search_patch/48.patch" &&     python /code_edit.py -t "/search_patch/49.patch" &&     python /code_edit.py -t "/search_patch/50.patch" &&     python /code_edit.py -t "/search_patch/51.patch" &&     python /code_edit.py -t "/search_patch/52.patch" &&     python /code_edit.py -t "/search_patch/53.patch" &&     python /code_edit.py -t "/search_patch/54.patch" &&     python /code_edit.py -t "/search_patch/55.patch" &&     python /code_edit.py -t "/search_patch/56.patch" &&     python /code_edit.py -t "/search_patch/57.patch" &&     python /code_edit.py -t "/search_patch/58.patch" &&     python /code_edit.py -t "/search_patch/59.patch" &&     python /code_edit.py -t "/search_patch/60.patch" &&     python /code_edit.py -t "/search_patch/61.patch" &&     python /code_edit.py -t "/search_patch/62.patch" &&     python /code_edit.py -t "/search_patch/63.patch" &&     python /code_edit.py -t "/search_patch/64.patch" &&     python /code_edit.py -t "/search_patch/65.patch" &&     python /code_edit.py -t "/search_patch/66.patch" &&     python /code_edit.py -t "/search_patch/67.patch" &&     python /code_edit.py -t "/search_patch/68.patch" &&     python /code_edit.py -t "/search_patch/69.patch" &&     python /code_edit.py -t "/search_patch/70.patch" &&     python /code_edit.py -t "/search_patch/71.patch" &&     python /code_edit.py -t "/search_patch/72.patch" &&     python /code_edit.py -t "/search_patch/73.patch" &&     python /code_edit.py -t "/search_patch/74.patch" &&     python /code_edit.py -t "/search_patch/75.patch" &&     python /code_edit.py -t "/search_patch/76.patch" &&     python /code_edit.py -t "/search_patch/77.patch" &&     python /code_edit.py -t "/search_patch/78.patch" &&     python /code_edit.py -t "/search_patch/79.patch" &&     python /code_edit.py -t "/search_patch/80.patch" &&     python /code_edit.py -t "/search_patch/81.patch" &&     python /code_edit.py -t "/search_patch/82.patch" &&     python /code_edit.py -t "/search_patch/83.patch"
#9 1.879 Looking in indexes: http://simple/
#9 2.039 Collecting pytest
#9 2.063   Downloading http://packages/pytest/pytest-8.3.4-py3-none-any.whl (343 kB)
#9 2.090      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 343.1/343.1 kB 15.4 MB/s eta 0:00:00
#9 2.164 Collecting pytest-xdist
#9 2.190   Downloading http://packages/pytest-xdist/pytest_xdist-3.6.1-py3-none-any.whl (46 kB)
#9 2.202      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 46.1/46.1 kB 4.5 MB/s eta 0:00:00
#9 2.252 Collecting iniconfig
#9 2.273   Downloading http://packages/iniconfig/iniconfig-2.0.0-py3-none-any.whl (5.9 kB)
#9 2.321 Collecting exceptiongroup>=1.0.0rc8
#9 2.340   Downloading http://packages/exceptiongroup/exceptiongroup-1.2.2-py3-none-any.whl (16 kB)
#9 2.393 Collecting pluggy<2,>=1.5
#9 2.413   Downloading http://packages/pluggy/pluggy-1.5.0-py3-none-any.whl (20 kB)
#9 2.478 Collecting tomli>=1
#9 2.495   Downloading http://packages/tomli/tomli-2.2.1-py3-none-any.whl (14 kB)
#9 2.568 Collecting packaging
#9 2.590   Downloading http://packages/packaging/packaging-24.2-py3-none-any.whl (65 kB)
#9 2.601      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 65.5/65.5 kB 7.0 MB/s eta 0:00:00
#9 2.670 Collecting execnet>=2.1
#9 2.689   Downloading http://packages/execnet/execnet-2.1.1-py3-none-any.whl (40 kB)
#9 2.698      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 40.6/40.6 kB 6.9 MB/s eta 0:00:00
#9 2.821 Installing collected packages: tomli, pluggy, packaging, iniconfig, execnet, exceptiongroup, pytest, pytest-xdist
#9 3.367 Successfully installed exceptiongroup-1.2.2 execnet-2.1.1 iniconfig-2.0.0 packaging-24.2 pluggy-1.5.0 pytest-8.3.4 pytest-xdist-3.6.1 tomli-2.2.1
#9 3.368 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
#9 3.495 
#9 3.495 [notice] A new release of pip is available: 23.0.1 -> 24.3.1
#9 3.495 [notice] To update, run: pip install --upgrade pip
#9 4.194 Looking in indexes: http://simple/
#9 4.275 Collecting pipdeptree
#9 4.296   Downloading http://packages/pipdeptree/pipdeptree-2.24.0-py3-none-any.whl (32 kB)
#9 4.453 Collecting pip>=24.2
#9 4.463   Using cached http://packages/pip/pip-24.3.1-py3-none-any.whl (1.8 MB)
#9 4.488 Requirement already satisfied: packaging>=24.1 in /usr/local/lib/python3.10/site-packages (from pipdeptree) (24.2)
#9 4.605 Installing collected packages: pip, pipdeptree
#9 4.606   Attempting uninstall: pip
#9 4.607     Found existing installation: pip 23.0.1
#9 4.767     Uninstalling pip-23.0.1:
#9 4.981       Successfully uninstalled pip-23.0.1
#9 6.187 Successfully installed pip-24.3.1 pipdeptree-2.24.0
#9 6.188 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
#9 6.361 Cloning into 'RapidDoc'...
#9 8.410 Note: switching to '5e5fef5e7d02bb646111e063e041566318596c50'.
#9 8.410 
#9 8.410 You are in 'detached HEAD' state. You can look around, make experimental
#9 8.410 changes and commit them, and you can discard any commits you make in this
#9 8.410 state without impacting any branches by switching back to a branch.
#9 8.410 
#9 8.410 If you want to create a new branch to retain commits you create, you may
#9 8.410 do so (now or later) by using -c with the switch command. Example:
#9 8.410 
#9 8.410   git switch -c <new-branch-name>
#9 8.410 
#9 8.410 Or undo this operation with:
#9 8.410 
#9 8.410   git switch -
#9 8.410 
#9 8.410 Turn off this advice by setting config variable advice.detachedHead to false
#9 8.410 
#9 8.410 HEAD is now at 5e5fef5 docs: add table structure rec
#9 8.950 Looking in indexes: http://simple/
#9 8.997 Collecting filetype==1.2.0
#9 9.017   Downloading http://packages/filetype/filetype-1.2.0-py2.py3-none-any.whl (19 kB)
#9 9.059 Installing collected packages: filetype
#9 9.096 Successfully installed filetype-1.2.0
#9 9.097 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
#9 9.869 Looking in indexes: http://simple/
#9 9.998 Collecting rapid-layout==0.4.0
#9 10.17   Downloading http://packages/rapid-layout/rapid_layout-0.4.0-py3-none-any.whl (6.8 MB)
#9 10.25      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 6.8/6.8 MB 109.3 MB/s eta 0:00:00
#9 10.72 Collecting Pillow (from rapid-layout==0.4.0)
#9 10.74   Downloading http://packages/pillow/pillow-11.1.0-cp310-cp310-manylinux_2_28_x86_64.whl (4.5 MB)
#9 10.81      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 4.5/4.5 MB 90.2 MB/s eta 0:00:00
#9 11.25 Collecting numpy<2,>=1.21.6 (from rapid-layout==0.4.0)
#9 11.27   Downloading http://packages/numpy/numpy-1.26.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (18.2 MB)
#9 11.38      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 18.2/18.2 MB 186.0 MB/s eta 0:00:00
#9 11.58 Collecting onnxruntime>=1.7.0 (from rapid-layout==0.4.0)
#9 11.60   Downloading http://packages/onnxruntime/onnxruntime-1.20.1-cp310-cp310-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl (13.3 MB)
#9 11.70      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 13.3/13.3 MB 163.5 MB/s eta 0:00:00
#9 11.92 Collecting opencv-python>=4.5.1.48 (from rapid-layout==0.4.0)
#9 11.94   Downloading http://packages/opencv-python/opencv_python-4.10.0.84-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (62.5 MB)
#9 12.26      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 62.5/62.5 MB 203.3 MB/s eta 0:00:00
#9 12.54 Collecting requests (from rapid-layout==0.4.0)
#9 12.54   Using cached http://packages/requests/requests-2.32.3-py3-none-any.whl (64 kB)
#9 12.65 Collecting tqdm (from rapid-layout==0.4.0)
#9 12.67   Downloading http://packages/tqdm/tqdm-4.67.1-py3-none-any.whl (78 kB)
#9 12.74 Collecting coloredlogs (from onnxruntime>=1.7.0->rapid-layout==0.4.0)
#9 12.76   Downloading http://packages/coloredlogs/coloredlogs-15.0.1-py2.py3-none-any.whl (46 kB)
#9 12.80 Collecting flatbuffers (from onnxruntime>=1.7.0->rapid-layout==0.4.0)
#9 12.82   Downloading http://packages/flatbuffers/flatbuffers-24.12.23-py2.py3-none-any.whl (30 kB)
#9 12.83 Requirement already satisfied: packaging in /usr/local/lib/python3.10/site-packages (from onnxruntime>=1.7.0->rapid-layout==0.4.0) (24.2)
#9 13.31 Collecting protobuf (from onnxruntime>=1.7.0->rapid-layout==0.4.0)
#9 13.33   Downloading http://packages/protobuf/protobuf-5.29.2-cp38-abi3-manylinux2014_x86_64.whl (319 kB)
#9 13.40 Collecting sympy (from onnxruntime>=1.7.0->rapid-layout==0.4.0)
#9 13.43   Downloading http://packages/sympy/sympy-1.13.3-py3-none-any.whl (6.2 MB)
#9 13.48      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 6.2/6.2 MB 136.3 MB/s eta 0:00:00
#9 13.85 Collecting charset-normalizer<4,>=2 (from requests->rapid-layout==0.4.0)
#9 13.86   Using cached http://packages/charset-normalizer/charset_normalizer-3.4.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (146 kB)
#9 13.89 Collecting idna<4,>=2.5 (from requests->rapid-layout==0.4.0)
#9 13.89   Using cached http://packages/idna/idna-3.10-py3-none-any.whl (70 kB)
#9 13.98 Collecting urllib3<3,>=1.21.1 (from requests->rapid-layout==0.4.0)
#9 13.98   Using cached http://packages/urllib3/urllib3-2.3.0-py3-none-any.whl (128 kB)
#9 14.09 Collecting certifi>=2017.4.17 (from requests->rapid-layout==0.4.0)
#9 14.09   Using cached http://packages/certifi/certifi-2024.12.14-py3-none-any.whl (164 kB)
#9 14.15 Collecting humanfriendly>=9.1 (from coloredlogs->onnxruntime>=1.7.0->rapid-layout==0.4.0)
#9 14.17   Downloading http://packages/humanfriendly/humanfriendly-10.0-py2.py3-none-any.whl (86 kB)
#9 14.22 Collecting mpmath<1.4,>=1.1.0 (from sympy->onnxruntime>=1.7.0->rapid-layout==0.4.0)
#9 14.24   Downloading http://packages/mpmath/mpmath-1.3.0-py3-none-any.whl (536 kB)
#9 14.26      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 536.2/536.2 kB 27.1 MB/s eta 0:00:00
#9 14.38 Installing collected packages: mpmath, flatbuffers, urllib3, tqdm, sympy, protobuf, Pillow, numpy, idna, humanfriendly, charset-normalizer, certifi, requests, opencv-python, coloredlogs, onnxruntime, rapid-layout
#9 28.52 Successfully installed Pillow-11.1.0 certifi-2024.12.14 charset-normalizer-3.4.1 coloredlogs-15.0.1 flatbuffers-24.12.23 humanfriendly-10.0 idna-3.10 mpmath-1.3.0 numpy-1.26.4 onnxruntime-1.20.1 opencv-python-4.10.0.84 protobuf-5.29.2 rapid-layout-0.4.0 requests-2.32.3 sympy-1.13.3 tqdm-4.67.1 urllib3-2.3.0
#9 28.52 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
#9 29.51 Looking in indexes: http://simple/
#9 29.51 Requirement already satisfied: numpy==1.26.4 in /usr/local/lib/python3.10/site-packages (1.26.4)
#9 29.58 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
#9 30.25 Looking in indexes: http://simple/
#9 30.41 Collecting opencv_python_headless==4.10.0.84
#9 30.43   Downloading http://packages/opencv-python-headless/opencv_python_headless-4.10.0.84-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (49.9 MB)
#9 30.72      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 49.9/49.9 MB 178.4 MB/s eta 0:00:00
#9 30.89 Requirement already satisfied: numpy>=1.21.2 in /usr/local/lib/python3.10/site-packages (from opencv_python_headless==4.10.0.84) (1.26.4)
#9 30.95 Installing collected packages: opencv_python_headless
#9 32.00 Successfully installed opencv_python_headless-4.10.0.84
#9 32.00 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
#9 32.76 Looking in indexes: http://simple/
#9 32.80 Collecting pdfminer.six==20231228
#9 32.82   Downloading http://packages/pdfminer-six/pdfminer.six-20231228-py3-none-any.whl (5.6 MB)
#9 32.90      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 5.6/5.6 MB 95.6 MB/s eta 0:00:00
#9 32.94 Requirement already satisfied: charset-normalizer>=2.0.0 in /usr/local/lib/python3.10/site-packages (from pdfminer.six==20231228) (3.4.1)
#9 33.41 Collecting cryptography>=36.0.0 (from pdfminer.six==20231228)
#9 33.42   Using cached http://packages/cryptography/cryptography-44.0.0-cp39-abi3-manylinux_2_28_x86_64.whl (4.2 MB)
#9 33.70 Collecting cffi>=1.12 (from cryptography>=36.0.0->pdfminer.six==20231228)
#9 33.71   Using cached http://packages/cffi/cffi-1.17.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (446 kB)
#9 33.74 Collecting pycparser (from cffi>=1.12->cryptography>=36.0.0->pdfminer.six==20231228)
#9 33.74   Using cached http://packages/pycparser/pycparser-2.22-py3-none-any.whl (117 kB)
#9 33.82 Installing collected packages: pycparser, cffi, cryptography, pdfminer.six
#9 34.61 Successfully installed cffi-1.17.1 cryptography-44.0.0 pdfminer.six-20231228 pycparser-2.22
#9 34.62 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
#9 35.48 Looking in indexes: http://simple/
#9 35.91 Collecting Pillow==11.0.0
#9 35.93   Downloading http://packages/pillow/pillow-11.0.0-cp310-cp310-manylinux_2_28_x86_64.whl (4.4 MB)
#9 35.99      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 4.4/4.4 MB 94.5 MB/s eta 0:00:00
#9 36.10 Installing collected packages: Pillow
#9 36.10   Attempting uninstall: Pillow
#9 36.10     Found existing installation: pillow 11.1.0
#9 36.12     Uninstalling pillow-11.1.0:
#9 36.12       Successfully uninstalled pillow-11.1.0
#9 36.51 Successfully installed Pillow-11.0.0
#9 36.51 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
#9 37.26 Looking in indexes: http://simple/
#9 37.26 Requirement already satisfied: tqdm==4.67.1 in /usr/local/lib/python3.10/site-packages (4.67.1)
#9 37.34 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
#9 38.02 Looking in indexes: http://simple/
#9 38.43 Collecting pymupdf==1.25.1
#9 38.47   Downloading http://packages/pymupdf/pymupdf-1.25.1-cp39-abi3-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (20.0 MB)
#9 38.60      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 20.0/20.0 MB 174.3 MB/s eta 0:00:00
#9 38.74 Installing collected packages: pymupdf
#9 39.91 Successfully installed pymupdf-1.25.1
#9 39.92 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
#9 40.76 Looking in indexes: http://simple/
#9 40.88 Collecting camelot-py==0.11.0
#9 41.05   Downloading http://packages/camelot-py/camelot_py-0.11.0-py3-none-any.whl (40 kB)
#9 41.10 Collecting chardet>=3.0.4 (from camelot-py==0.11.0)
#9 41.12   Downloading http://packages/chardet/chardet-5.2.0-py3-none-any.whl (199 kB)
#9 41.18 Collecting click>=6.7 (from camelot-py==0.11.0)
#9 41.20   Downloading http://packages/click/click-8.1.8-py3-none-any.whl (98 kB)
#9 41.22 Requirement already satisfied: numpy>=1.13.3 in /usr/local/lib/python3.10/site-packages (from camelot-py==0.11.0) (1.26.4)
#9 41.26 Collecting openpyxl>=2.5.8 (from camelot-py==0.11.0)
#9 41.28   Downloading http://packages/openpyxl/openpyxl-3.1.5-py2.py3-none-any.whl (250 kB)
#9 41.60 Collecting pandas>=0.23.4 (from camelot-py==0.11.0)
#9 41.62   Downloading http://packages/pandas/pandas-2.2.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.1 MB)
#9 41.72      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 13.1/13.1 MB 163.3 MB/s eta 0:00:00
#9 41.83 Requirement already satisfied: pdfminer.six>=20200726 in /usr/local/lib/python3.10/site-packages (from camelot-py==0.11.0) (20231228)
#9 41.88 Collecting pypdf>=3.0.0 (from camelot-py==0.11.0)
#9 41.90   Downloading http://packages/pypdf/pypdf-5.1.0-py3-none-any.whl (297 kB)
#9 41.96 Collecting tabulate>=0.8.9 (from camelot-py==0.11.0)
#9 41.98   Downloading http://packages/tabulate/tabulate-0.9.0-py3-none-any.whl (35 kB)
#9 42.01 Collecting et-xmlfile (from openpyxl>=2.5.8->camelot-py==0.11.0)
#9 42.03   Downloading http://packages/et-xmlfile/et_xmlfile-2.0.0-py3-none-any.whl (18 kB)
#9 42.07 Collecting python-dateutil>=2.8.2 (from pandas>=0.23.4->camelot-py==0.11.0)
#9 42.09   Downloading http://packages/python-dateutil/python_dateutil-2.9.0.post0-py2.py3-none-any.whl (229 kB)
#9 42.21 Collecting pytz>=2020.1 (from pandas>=0.23.4->camelot-py==0.11.0)
#9 42.24   Downloading http://packages/pytz/pytz-2024.2-py2.py3-none-any.whl (508 kB)
#9 42.30 Collecting tzdata>=2022.7 (from pandas>=0.23.4->camelot-py==0.11.0)
#9 42.33   Downloading http://packages/tzdata/tzdata-2024.2-py2.py3-none-any.whl (346 kB)
#9 42.36 Requirement already satisfied: charset-normalizer>=2.0.0 in /usr/local/lib/python3.10/site-packages (from pdfminer.six>=20200726->camelot-py==0.11.0) (3.4.1)
#9 42.36 Requirement already satisfied: cryptography>=36.0.0 in /usr/local/lib/python3.10/site-packages (from pdfminer.six>=20200726->camelot-py==0.11.0) (44.0.0)
#9 42.40 Collecting typing_extensions>=4.0 (from pypdf>=3.0.0->camelot-py==0.11.0)
#9 42.42   Downloading http://packages/typing-extensions/typing_extensions-4.12.2-py3-none-any.whl (37 kB)
#9 42.44 Requirement already satisfied: cffi>=1.12 in /usr/local/lib/python3.10/site-packages (from cryptography>=36.0.0->pdfminer.six>=20200726->camelot-py==0.11.0) (1.17.1)
#9 42.47 Collecting six>=1.5 (from python-dateutil>=2.8.2->pandas>=0.23.4->camelot-py==0.11.0)
#9 42.49   Downloading http://packages/six/six-1.17.0-py2.py3-none-any.whl (11 kB)
#9 42.51 Requirement already satisfied: pycparser in /usr/local/lib/python3.10/site-packages (from cffi>=1.12->cryptography>=36.0.0->pdfminer.six>=20200726->camelot-py==0.11.0) (2.22)
#9 42.68 Installing collected packages: pytz, tzdata, typing_extensions, tabulate, six, et-xmlfile, click, chardet, python-dateutil, pypdf, openpyxl, pandas, camelot-py
#9 50.24 Successfully installed camelot-py-0.11.0 chardet-5.2.0 click-8.1.8 et-xmlfile-2.0.0 openpyxl-3.1.5 pandas-2.2.3 pypdf-5.1.0 python-dateutil-2.9.0.post0 pytz-2024.2 six-1.17.0 tabulate-0.9.0 typing_extensions-4.12.2 tzdata-2024.2
#9 50.24 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
#9 51.04 Looking in indexes: http://simple/
#9 51.08 Collecting pdf2image==1.17.0
#9 51.11   Downloading http://packages/pdf2image/pdf2image-1.17.0-py3-none-any.whl (11 kB)
#9 51.12 Requirement already satisfied: pillow in /usr/local/lib/python3.10/site-packages (from pdf2image==1.17.0) (11.0.0)
#9 51.28 Installing collected packages: pdf2image
#9 51.31 Successfully installed pdf2image-1.17.0
#9 51.31 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
#9 52.05 Looking in indexes: http://simple/
#9 52.14 Collecting pdfplumber==0.11.4
#9 52.16   Downloading http://packages/pdfplumber/pdfplumber-0.11.4-py3-none-any.whl (59 kB)
#9 52.17 Requirement already satisfied: pdfminer.six==20231228 in /usr/local/lib/python3.10/site-packages (from pdfplumber==0.11.4) (20231228)
#9 52.17 Requirement already satisfied: Pillow>=9.1 in /usr/local/lib/python3.10/site-packages (from pdfplumber==0.11.4) (11.0.0)
#9 52.42 Collecting pypdfium2>=4.18.0 (from pdfplumber==0.11.4)
#9 52.44   Downloading http://packages/pypdfium2/pypdfium2-4.30.1-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.9 MB)
#9 52.48      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2.9/2.9 MB 86.6 MB/s eta 0:00:00
#9 52.50 Requirement already satisfied: charset-normalizer>=2.0.0 in /usr/local/lib/python3.10/site-packages (from pdfminer.six==20231228->pdfplumber==0.11.4) (3.4.1)
#9 52.50 Requirement already satisfied: cryptography>=36.0.0 in /usr/local/lib/python3.10/site-packages (from pdfminer.six==20231228->pdfplumber==0.11.4) (44.0.0)
#9 52.53 Requirement already satisfied: cffi>=1.12 in /usr/local/lib/python3.10/site-packages (from cryptography>=36.0.0->pdfminer.six==20231228->pdfplumber==0.11.4) (1.17.1)
#9 52.53 Requirement already satisfied: pycparser in /usr/local/lib/python3.10/site-packages (from cffi>=1.12->cryptography>=36.0.0->pdfminer.six==20231228->pdfplumber==0.11.4) (2.22)
#9 52.66 Installing collected packages: pypdfium2, pdfplumber
#9 52.85 Successfully installed pdfplumber-0.11.4 pypdfium2-4.30.1
#9 52.85 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
#9 53.63 Looking in indexes: http://simple/
#9 53.86 Collecting shapely==2.0.6
#9 53.88   Downloading http://packages/shapely/shapely-2.0.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.5 MB)
#9 53.93      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2.5/2.5 MB 76.1 MB/s eta 0:00:00
#9 53.95 Requirement already satisfied: numpy<3,>=1.14 in /usr/local/lib/python3.10/site-packages (from shapely==2.0.6) (1.26.4)
#9 54.10 Installing collected packages: shapely
#9 54.41 Successfully installed shapely-2.0.6
#9 54.41 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
#9 59.25 debconf: delaying package configuration, since apt-utils is not installed
#9 59.34 Selecting previously unselected package poppler-data.
#9 59.34 (Reading database ... 
(Reading database ... 5%
(Reading database ... 10%
(Reading database ... 15%
(Reading database ... 20%
(Reading database ... 25%
(Reading database ... 30%
(Reading database ... 35%
(Reading database ... 40%
(Reading database ... 45%
(Reading database ... 50%
(Reading database ... 55%
(Reading database ... 60%
(Reading database ... 65%
(Reading database ... 70%
(Reading database ... 75%
(Reading database ... 80%
(Reading database ... 85%
(Reading database ... 90%
(Reading database ... 95%
(Reading database ... 100%
(Reading database ... 23969 files and directories currently installed.)
#9 59.37 Preparing to unpack .../poppler-data_0.4.12-1_all.deb ...
#9 59.37 Unpacking poppler-data (0.4.12-1) ...
#9 59.63 Selecting previously unselected package libnspr4:amd64.
#9 59.63 Preparing to unpack .../libnspr4_2%3a4.35-1_amd64.deb ...
#9 59.64 Unpacking libnspr4:amd64 (2:4.35-1) ...
#9 59.68 Selecting previously unselected package libnss3:amd64.
#9 59.69 Preparing to unpack .../libnss3_2%3a3.87.1-1+deb12u1_amd64.deb ...
#9 59.69 Unpacking libnss3:amd64 (2:3.87.1-1+deb12u1) ...
#9 59.85 Selecting previously unselected package libpoppler126:amd64.
#9 59.85 Preparing to unpack .../libpoppler126_22.12.0-2+b1_amd64.deb ...
#9 59.85 Unpacking libpoppler126:amd64 (22.12.0-2+b1) ...
#9 59.98 Selecting previously unselected package poppler-utils.
#9 59.99 Preparing to unpack .../poppler-utils_22.12.0-2+b1_amd64.deb ...
#9 59.99 Unpacking poppler-utils (22.12.0-2+b1) ...
#9 60.05 Setting up poppler-data (0.4.12-1) ...
#9 60.07 Setting up libnspr4:amd64 (2:4.35-1) ...
#9 60.08 Setting up libnss3:amd64 (2:3.87.1-1+deb12u1) ...
#9 60.09 Setting up libpoppler126:amd64 (22.12.0-2+b1) ...
#9 60.10 Setting up poppler-utils (22.12.0-2+b1) ...
#9 60.11 Processing triggers for libc-bin (2.36-9+deb12u9) ...
#9 60.16 Processing triggers for fontconfig (2.14.1-4) ...
#9 60.82 Looking in indexes: http://simple/
#9 60.86 Collecting rapidocr-onnxruntime==1.4.3
#9 61.20   Downloading http://packages/rapidocr-onnxruntime/rapidocr_onnxruntime-1.4.3-py3-none-any.whl (14.9 MB)
#9 61.31      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 14.9/14.9 MB 166.0 MB/s eta 0:00:00
#9 61.44 Collecting pyclipper>=1.2.0 (from rapidocr-onnxruntime==1.4.3)
#9 61.46   Downloading http://packages/pyclipper/pyclipper-1.3.0.post6-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (912 kB)
#9 61.49      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 912.2/912.2 kB 41.1 MB/s eta 0:00:00
#9 61.50 Requirement already satisfied: opencv-python>=4.5.1.48 in /usr/local/lib/python3.10/site-packages (from rapidocr-onnxruntime==1.4.3) (4.10.0.84)
#9 61.50 Requirement already satisfied: numpy<3.0.0,>=1.19.5 in /usr/local/lib/python3.10/site-packages (from rapidocr-onnxruntime==1.4.3) (1.26.4)
#9 61.50 Requirement already satisfied: six>=1.15.0 in /usr/local/lib/python3.10/site-packages (from rapidocr-onnxruntime==1.4.3) (1.17.0)
#9 61.50 Requirement already satisfied: Shapely!=2.0.4,>=1.7.1 in /usr/local/lib/python3.10/site-packages (from rapidocr-onnxruntime==1.4.3) (2.0.6)
#9 61.61 Collecting PyYAML (from rapidocr-onnxruntime==1.4.3)
#9 61.65   Downloading http://packages/pyyaml/PyYAML-6.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (751 kB)
#9 61.68      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 751.2/751.2 kB 38.7 MB/s eta 0:00:00
#9 61.68 Requirement already satisfied: Pillow in /usr/local/lib/python3.10/site-packages (from rapidocr-onnxruntime==1.4.3) (11.0.0)
#9 61.68 Requirement already satisfied: onnxruntime>=1.7.0 in /usr/local/lib/python3.10/site-packages (from rapidocr-onnxruntime==1.4.3) (1.20.1)
#9 61.68 Requirement already satisfied: tqdm in /usr/local/lib/python3.10/site-packages (from rapidocr-onnxruntime==1.4.3) (4.67.1)
#9 61.69 Requirement already satisfied: coloredlogs in /usr/local/lib/python3.10/site-packages (from onnxruntime>=1.7.0->rapidocr-onnxruntime==1.4.3) (15.0.1)
#9 61.69 Requirement already satisfied: flatbuffers in /usr/local/lib/python3.10/site-packages (from onnxruntime>=1.7.0->rapidocr-onnxruntime==1.4.3) (24.12.23)
#9 61.69 Requirement already satisfied: packaging in /usr/local/lib/python3.10/site-packages (from onnxruntime>=1.7.0->rapidocr-onnxruntime==1.4.3) (24.2)
#9 61.69 Requirement already satisfied: protobuf in /usr/local/lib/python3.10/site-packages (from onnxruntime>=1.7.0->rapidocr-onnxruntime==1.4.3) (5.29.2)
#9 61.69 Requirement already satisfied: sympy in /usr/local/lib/python3.10/site-packages (from onnxruntime>=1.7.0->rapidocr-onnxruntime==1.4.3) (1.13.3)
#9 61.72 Requirement already satisfied: humanfriendly>=9.1 in /usr/local/lib/python3.10/site-packages (from coloredlogs->onnxruntime>=1.7.0->rapidocr-onnxruntime==1.4.3) (10.0)
#9 61.72 Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.10/site-packages (from sympy->onnxruntime>=1.7.0->rapidocr-onnxruntime==1.4.3) (1.3.0)
#9 61.86 Installing collected packages: pyclipper, PyYAML, rapidocr-onnxruntime
#9 62.30 Successfully installed PyYAML-6.0.2 pyclipper-1.3.0.post6 rapidocr-onnxruntime-1.4.3
#9 62.30 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
#9 63.13 Looking in indexes: http://simple/
#9 63.19 Collecting PyPDF2==3.0.1
#9 63.21   Downloading http://packages/pypdf2/pypdf2-3.0.1-py3-none-any.whl (232 kB)
#9 63.44 Installing collected packages: PyPDF2
#9 63.70 Successfully installed PyPDF2-3.0.1
#9 63.70 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
#9 65.65 * Succeed Patch:
#9 65.65 --- areporapid_docpdf_extractmain.py
#9 65.65 +++ breporapid_docpdf_extractmain.py
#9 65.65 @@ -19,8 +19,10 @@
#9 65.65  
#9 65.65  
#9 65.65  class PDFExtract:
#9 65.65 -    def __init__(self):
#9 65.65 -        self.pdf_path = None
#9 65.65 +    def __init__(self, pdf_path=None):
#9 65.65 +        self.pdf_path = pdf_path
#9 65.65 +        if pdf_path:
#9 65.65 +            self.extract_all_pages(pdf_path)
#9 65.65          self.pages = None
#9 65.65          self.ratio = None
#9 65.65  
#9 65.65 
#9 65.65 
#9 66.68 ok
#9 67.18 * Succeed Patch:
#9 67.18 --- areporapid_docpdf_extractmain.py
#9 67.18 +++ breporapid_docpdf_extractmain.py
#9 67.18 @@ -19,10 +19,9 @@
#9 67.18  
#9 67.18  
#9 67.18  class PDFExtract:
#9 67.18 -    def __init__(self, pdf_path=None):
#9 67.18 +    def __init__(self, pdf_path: str):
#9 67.18          self.pdf_path = pdf_path
#9 67.18 -        if pdf_path:
#9 67.18 -            self.extract_all_pages(pdf_path)
#9 67.18 +        self.extract_all_pages(pdf_path)
#9 67.18          self.pages = None
#9 67.18          self.ratio = None
#9 67.18  
#9 67.18 
#9 67.18 
#9 67.24 * Succeed Patch:
#9 67.24 * Fail Patch:
#9 67.24 #SEARCH/REPLACE block failed to match!
#9 67.24 
#9 67.24 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 67.24     def read_pdf(self, pdf_path):
#9 67.24         self.pages = list(extract_pages(pdf_path))
#9 67.24 
#9 67.24 
#9 67.24 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 67.24 
#9 67.24 TIPS:
#9 67.24 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 67.24 * Make sure your patch has right indentation.
#9 67.24 * Make sure your file path is correct.
#9 67.31 * Succeed Patch:
#9 67.31 --- areporapid_docpdf_extractmain.py
#9 67.31 +++ breporapid_docpdf_extractmain.py
#9 67.31 @@ -28,8 +28,9 @@
#9 67.31      def extract_all_pages(self, pdf_path: str):
#9 67.31          self.pages = list(extract_pages(pdf_path))
#9 67.31  
#9 67.31 -    def read_pdf(self, pdf_path) -> List:
#9 67.31 -        def convert_img(page):
#9 67.31 +    def read_pdf(self, pdf_path=None) -> List:
#9 67.31 +        if pdf_path is None:
#9 67.31 +            pdf_path = self.pdf_path
#9 67.31              pix = page.get_pixmap(dpi=200)
#9 67.31              img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 67.31              img = img.reshape([pix.h, pix.w, pix.n])
#9 67.31 
#9 67.31 
#9 67.38 * Succeed Patch:
#9 67.38 --- areporapid_docpdf_extractmain.py
#9 67.38 +++ breporapid_docpdf_extractmain.py
#9 67.38 @@ -31,10 +31,16 @@
#9 67.38      def read_pdf(self, pdf_path=None) -> List:
#9 67.38          if pdf_path is None:
#9 67.38              pdf_path = self.pdf_path
#9 67.38 +        
#9 67.38 +        def convert_img(page):
#9 67.38              pix = page.get_pixmap(dpi=200)
#9 67.38              img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 67.38              img = img.reshape([pix.h, pix.w, pix.n])
#9 67.38              img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 67.38 +            return img
#9 67.38 +        
#9 67.38 +        self.pages = list(extract_pages(pdf_path))
#9 67.38 +        return [convert_img(page) for page in self.pages]
#9 67.38              return img
#9 67.38  
#9 67.38          with fitz.open(pdf_path) as pdfer:
#9 67.38 
#9 67.38 
#9 67.45 * Succeed Patch:
#9 67.45 --- areporapid_docmain.py
#9 67.45 +++ breporapid_docmain.py
#9 67.45 @@ -17,7 +17,7 @@
#9 67.45  
#9 67.45  
#9 67.45  class RapidDoc:
#9 67.45 -    def __init__(self, dpi: int = 96):
#9 67.45 +    def __init__(self, pdf_path: str, dpi: int = 96):
#9 67.45          self.dpi = dpi
#9 67.45          self.layout = RapidLayout()
#9 67.45          self.pdf_extracter = PDFExtract()
#9 67.45 
#9 67.45 * Fail Patch:
#9 67.45 ERROR! The file self.layout = RapidLayout() does not exist.
#9 67.45 
#9 67.45 TIPS:
#9 67.45 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 67.45 * Make sure your patch has right indentation.
#9 67.45 * Make sure your file path is correct.
#9 67.52 * Succeed Patch:
#9 67.52 --- areporapid_docmain.py
#9 67.52 +++ breporapid_docmain.py
#9 67.52 @@ -18,8 +18,8 @@
#9 67.52  
#9 67.52  class RapidDoc:
#9 67.52      def __init__(self, pdf_path: str, dpi: int = 96):
#9 67.52 +        self.pdf_extracter = PDFExtract(pdf_path)
#9 67.52          self.dpi = dpi
#9 67.52 -        self.layout = RapidLayout()
#9 67.52          self.pdf_extracter = PDFExtract()
#9 67.52          self.ocr_extracter = OCRExtract()
#9 67.52          self.layout_recover = LayoutRecover()
#9 67.52 
#9 67.52 
#9 67.58 * Succeed Patch:
#9 67.58 --- areporapid_docmain.py
#9 67.58 +++ breporapid_docmain.py
#9 67.58 @@ -18,6 +18,7 @@
#9 67.58  
#9 67.58  class RapidDoc:
#9 67.58      def __init__(self, pdf_path: str, dpi: int = 96):
#9 67.58 +        pdf_path = pdf_path or 'teststest_filesdirect_extractsingle_column.pdf'
#9 67.58          self.pdf_extracter = PDFExtract(pdf_path)
#9 67.58          self.dpi = dpi
#9 67.58          self.pdf_extracter = PDFExtract()
#9 67.58 
#9 67.58 
#9 67.65 * Succeed Patch:
#9 67.65 * Fail Patch:
#9 67.65 Fail to apply diff(s)
#9 67.65 TIPS:
#9 67.65 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 67.65 * Make sure your patch has right indentation.
#9 67.65 * Make sure your file path is correct.
#9 67.74 * Fail Patch: ERROR! No patch found that meets the format requirements. Provide patches in following format:
#9 67.74 ###Thought: modify ...
#9 67.74 ###Action:                
#9 67.74 ```diff
#9 67.74 /absolute/path/of/modified_file.py
#9 67.74 <<<<<<< SEARCH
#9 67.74     exact copy of old line(s) you would like to change
#9 67.74 =======
#9 67.74     new line(s) to replace
#9 67.74 >>>>>>> REPLACE
#9 67.74 ```
#9 67.74 
#9 67.81 * Succeed Patch:
#9 67.81 * Fail Patch:
#9 67.81 #SEARCH/REPLACE block failed to match!
#9 67.81 
#9 67.81 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 67.81         return img
#9 67.81              img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 67.81 
#9 67.81 
#9 67.81 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 67.81 
#9 67.81 TIPS:
#9 67.81 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 67.81 * Make sure your patch has right indentation.
#9 67.81 * Make sure your file path is correct.
#9 67.89 * Succeed Patch:
#9 67.89 * Fail Patch:
#9 67.89 #SEARCH/REPLACE block failed to match!
#9 67.89 
#9 67.89 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 67.89         def convert_img(page):
#9 67.89             pix = page.get_pixmap(dpi=200)
#9 67.89             img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 67.89             img = img.reshape([pix.h, pix.w, pix.n])
#9 67.89             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 67.89         return img
#9 67.89 
#9 67.89 
#9 67.89 Did you mean to match some of these actual lines from /repo/rapid_doc/pdf_extract/main.py?
#9 67.89 
#9 67.89 ```diff
#9 67.89         self.pages = list(extract_pages(pdf_path))
#9 67.89 
#9 67.89     def read_pdf(self, pdf_path=None) -> List:
#9 67.89         if pdf_path is None:
#9 67.89             pdf_path = self.pdf_path
#9 67.89         
#9 67.89         def convert_img(page):
#9 67.89             pix = page.get_pixmap(dpi=200)
#9 67.89             img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 67.89             img = img.reshape([pix.h, pix.w, pix.n])
#9 67.89             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 67.89             return img
#9 67.89         
#9 67.89         self.pages = list(extract_pages(pdf_path))
#9 67.89         return [convert_img(page) for page in self.pages]
#9 67.89             return img
#9 67.89 ```
#9 67.89 
#9 67.89 Are you sure you need this SEARCH/REPLACE block?
#9 67.89 The REPLACE lines are already in /repo/rapid_doc/pdf_extract/main.py!
#9 67.89 
#9 67.89 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 67.89 
#9 67.89 TIPS:
#9 67.89 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 67.89 * Make sure your patch has right indentation.
#9 67.89 * Make sure your file path is correct.
#9 67.97 * Succeed Patch:
#9 67.97 * Fail Patch:
#9 67.97 #SEARCH/REPLACE block failed to match!
#9 67.97 
#9 67.97 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 67.97         def convert_img(page):
#9 67.97             pix = page.get_pixmap(dpi=200)
#9 67.97             img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 67.97             img = img.reshape([pix.h, pix.w, pix.n])
#9 67.97             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 67.97         return img
#9 67.97 
#9 67.97 
#9 67.97 Did you mean to match some of these actual lines from /repo/rapid_doc/pdf_extract/main.py?
#9 67.97 
#9 67.97 ```diff
#9 67.97         self.pages = list(extract_pages(pdf_path))
#9 67.97 
#9 67.97     def read_pdf(self, pdf_path=None) -> List:
#9 67.97         if pdf_path is None:
#9 67.97             pdf_path = self.pdf_path
#9 67.97         
#9 67.97         def convert_img(page):
#9 67.97             pix = page.get_pixmap(dpi=200)
#9 67.97             img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 67.97             img = img.reshape([pix.h, pix.w, pix.n])
#9 67.97             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 67.97             return img
#9 67.97         
#9 67.97         self.pages = list(extract_pages(pdf_path))
#9 67.97         return [convert_img(page) for page in self.pages]
#9 67.97             return img
#9 67.97 ```
#9 67.97 
#9 67.97 Are you sure you need this SEARCH/REPLACE block?
#9 67.97 The REPLACE lines are already in /repo/rapid_doc/pdf_extract/main.py!
#9 67.97 
#9 67.97 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 67.97 
#9 67.97 TIPS:
#9 67.97 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 67.97 * Make sure your patch has right indentation.
#9 67.97 * Make sure your file path is correct.
#9 68.04 * Succeed Patch:
#9 68.04 --- areporapid_docpdf_extractmain.py
#9 68.04 +++ breporapid_docpdf_extractmain.py
#9 68.04 @@ -31,6 +31,7 @@
#9 68.04      def read_pdf(self, pdf_path=None) -> List:
#9 68.04          if pdf_path is None:
#9 68.04              pdf_path = self.pdf_path
#9 68.04 +        
#9 68.04          
#9 68.04          def convert_img(page):
#9 68.04              pix = page.get_pixmap(dpi=200)
#9 68.04 
#9 68.04 * Fail Patch:
#9 68.04 #SEARCH/REPLACE block failed to match!
#9 68.04 
#9 68.04 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 68.04             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 68.04         return img
#9 68.04 
#9 68.04 
#9 68.04 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 68.04 
#9 68.04 TIPS:
#9 68.04 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 68.04 * Make sure your patch has right indentation.
#9 68.04 * Make sure your file path is correct.
#9 68.12 * Succeed Patch:
#9 68.12 --- areporapid_docpdf_extractmain.py
#9 68.12 +++ breporapid_docpdf_extractmain.py
#9 68.12 @@ -38,7 +38,7 @@
#9 68.12              img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 68.12              img = img.reshape([pix.h, pix.w, pix.n])
#9 68.12              img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 68.12 -            return img
#9 68.12 +        return img
#9 68.12          
#9 68.12          self.pages = list(extract_pages(pdf_path))
#9 68.12          return [convert_img(page) for page in self.pages]
#9 68.12 
#9 68.12 
#9 68.19 * Succeed Patch:
#9 68.19 --- areporapid_docpdf_extractmain.py
#9 68.19 +++ breporapid_docpdf_extractmain.py
#9 68.19 @@ -38,7 +38,7 @@
#9 68.19              img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 68.19              img = img.reshape([pix.h, pix.w, pix.n])
#9 68.19              img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 68.19 -        return img
#9 68.19 +            return img
#9 68.19          
#9 68.19          self.pages = list(extract_pages(pdf_path))
#9 68.19          return [convert_img(page) for page in self.pages]
#9 68.19 
#9 68.19 
#9 68.26 * Succeed Patch:
#9 68.26 --- areporapid_docpdf_extractmain.py
#9 68.26 +++ breporapid_docpdf_extractmain.py
#9 68.26 @@ -31,6 +31,7 @@
#9 68.26      def read_pdf(self, pdf_path=None) -> List:
#9 68.26          if pdf_path is None:
#9 68.26              pdf_path = self.pdf_path
#9 68.26 +        
#9 68.26          
#9 68.26          
#9 68.26          def convert_img(page):
#9 68.26 
#9 68.26 
#9 68.33 * Succeed Patch:
#9 68.33 * Fail Patch:
#9 68.33 #SEARCH/REPLACE block failed to match!
#9 68.33 
#9 68.33 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 68.33             return img
#9 68.33         return img
#9 68.33 
#9 68.33 
#9 68.33 Are you sure you need this SEARCH/REPLACE block?
#9 68.33 The REPLACE lines are already in /repo/rapid_doc/pdf_extract/main.py!
#9 68.33 
#9 68.33 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 68.33 
#9 68.33 TIPS:
#9 68.33 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 68.33 * Make sure your patch has right indentation.
#9 68.33 * Make sure your file path is correct.
#9 68.39 * Succeed Patch:
#9 68.39 --- areporapid_docpdf_extractmain.py
#9 68.39 +++ breporapid_docpdf_extractmain.py
#9 68.39 @@ -39,7 +39,7 @@
#9 68.39              img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 68.39              img = img.reshape([pix.h, pix.w, pix.n])
#9 68.39              img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 68.39 -            return img
#9 68.39 +                return img
#9 68.39          
#9 68.39          self.pages = list(extract_pages(pdf_path))
#9 68.39          return [convert_img(page) for page in self.pages]
#9 68.39 
#9 68.39 
#9 68.47 * Succeed Patch:
#9 68.47 * Fail Patch:
#9 68.47 #SEARCH/REPLACE block failed to match!
#9 68.47 
#9 68.47 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 68.47             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 68.47         return img
#9 68.47 
#9 68.47 
#9 68.47 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 68.47 
#9 68.47 TIPS:
#9 68.47 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 68.47 * Make sure your patch has right indentation.
#9 68.47 * Make sure your file path is correct.
#9 68.53 * Succeed Patch:
#9 68.53 * Fail Patch:
#9 68.53 #SEARCH/REPLACE block failed to match!
#9 68.53 
#9 68.53 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 68.53             return img
#9 68.53         return img
#9 68.53 
#9 68.53 
#9 68.53 Are you sure you need this SEARCH/REPLACE block?
#9 68.53 The REPLACE lines are already in /repo/rapid_doc/pdf_extract/main.py!
#9 68.53 
#9 68.53 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 68.53 
#9 68.53 TIPS:
#9 68.53 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 68.53 * Make sure your patch has right indentation.
#9 68.53 * Make sure your file path is correct.
#9 68.60 * Succeed Patch:
#9 68.60 * Fail Patch:
#9 68.60 #SEARCH/REPLACE block failed to match!
#9 68.60 
#9 68.60 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 68.60             return img
#9 68.60         return img
#9 68.60 
#9 68.60 
#9 68.60 Are you sure you need this SEARCH/REPLACE block?
#9 68.60 The REPLACE lines are already in /repo/rapid_doc/pdf_extract/main.py!
#9 68.60 
#9 68.60 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 68.60 
#9 68.60 TIPS:
#9 68.60 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 68.60 * Make sure your patch has right indentation.
#9 68.60 * Make sure your file path is correct.
#9 68.68 * Succeed Patch:
#9 68.68 --- areporapid_docpdf_extractmain.py
#9 68.68 +++ breporapid_docpdf_extractmain.py
#9 68.68 @@ -31,6 +31,7 @@
#9 68.68      def read_pdf(self, pdf_path=None) -> List:
#9 68.68          if pdf_path is None:
#9 68.68              pdf_path = self.pdf_path
#9 68.68 +        
#9 68.68          
#9 68.68          
#9 68.68          
#9 68.68 
#9 68.68 * Fail Patch:
#9 68.68 #SEARCH/REPLACE block failed to match!
#9 68.68 
#9 68.68 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 68.68             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 68.68         return img
#9 68.68 
#9 68.68 
#9 68.68 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 68.68 
#9 68.68 TIPS:
#9 68.68 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 68.68 * Make sure your patch has right indentation.
#9 68.68 * Make sure your file path is correct.
#9 68.75 * Succeed Patch:
#9 68.75 * Fail Patch:
#9 68.75 #SEARCH/REPLACE block failed to match!
#9 68.75 
#9 68.75 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 68.75             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 68.75         return img
#9 68.75 
#9 68.75 
#9 68.75 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 68.75 
#9 68.75 TIPS:
#9 68.75 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 68.75 * Make sure your patch has right indentation.
#9 68.75 * Make sure your file path is correct.
#9 68.82 * Succeed Patch:
#9 68.82 * Fail Patch:
#9 68.82 #SEARCH/REPLACE block failed to match!
#9 68.82 
#9 68.82 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 68.82             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 68.82         return img
#9 68.82 
#9 68.82 
#9 68.82 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 68.82 
#9 68.82 TIPS:
#9 68.82 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 68.82 * Make sure your patch has right indentation.
#9 68.82 * Make sure your file path is correct.
#9 68.89 * Succeed Patch:
#9 68.89 * Fail Patch:
#9 68.89 #SEARCH/REPLACE block failed to match!
#9 68.89 
#9 68.89 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 68.89             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 68.89         return img
#9 68.89 
#9 68.89 
#9 68.89 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 68.89 
#9 68.89 TIPS:
#9 68.89 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 68.89 * Make sure your patch has right indentation.
#9 68.89 * Make sure your file path is correct.
#9 68.96 * Succeed Patch:
#9 68.96 * Fail Patch:
#9 68.96 #SEARCH/REPLACE block failed to match!
#9 68.96 
#9 68.96 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 68.96             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 68.96         return img
#9 68.96 
#9 68.96 
#9 68.96 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 68.96 
#9 68.96 TIPS:
#9 68.96 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 68.96 * Make sure your patch has right indentation.
#9 68.96 * Make sure your file path is correct.
#9 69.03 * Succeed Patch:
#9 69.03 * Fail Patch:
#9 69.03 #SEARCH/REPLACE block failed to match!
#9 69.03 
#9 69.03 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 69.03             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 69.03         return img
#9 69.03 
#9 69.03 
#9 69.03 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 69.03 
#9 69.03 TIPS:
#9 69.03 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 69.03 * Make sure your patch has right indentation.
#9 69.03 * Make sure your file path is correct.
#9 69.10 * Succeed Patch:
#9 69.10 * Fail Patch:
#9 69.10 #SEARCH/REPLACE block failed to match!
#9 69.10 
#9 69.10 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 69.10             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 69.10         return img
#9 69.10 
#9 69.10 
#9 69.10 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 69.10 
#9 69.10 TIPS:
#9 69.10 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 69.10 * Make sure your patch has right indentation.
#9 69.10 * Make sure your file path is correct.
#9 69.17 * Succeed Patch:
#9 69.17 * Fail Patch:
#9 69.17 #SEARCH/REPLACE block failed to match!
#9 69.17 
#9 69.17 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 69.17             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 69.17         return img
#9 69.17 
#9 69.17 
#9 69.17 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 69.17 
#9 69.17 TIPS:
#9 69.17 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 69.17 * Make sure your patch has right indentation.
#9 69.17 * Make sure your file path is correct.
#9 69.24 * Succeed Patch:
#9 69.24 * Fail Patch:
#9 69.24 #SEARCH/REPLACE block failed to match!
#9 69.24 
#9 69.24 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 69.24             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 69.24         return img
#9 69.24 
#9 69.24 
#9 69.24 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 69.24 
#9 69.24 TIPS:
#9 69.24 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 69.24 * Make sure your patch has right indentation.
#9 69.24 * Make sure your file path is correct.
#9 69.32 * Succeed Patch:
#9 69.32 * Fail Patch:
#9 69.32 #SEARCH/REPLACE block failed to match!
#9 69.32 
#9 69.32 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 69.32             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 69.32         return img
#9 69.32 
#9 69.32 
#9 69.32 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 69.32 
#9 69.32 TIPS:
#9 69.32 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 69.32 * Make sure your patch has right indentation.
#9 69.32 * Make sure your file path is correct.
#9 69.39 * Succeed Patch:
#9 69.39 * Fail Patch:
#9 69.39 #SEARCH/REPLACE block failed to match!
#9 69.39 
#9 69.39 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 69.39         def convert_img(page):
#9 69.39             img = page.to_image(resolution=300)
#9 69.39             img = img.original
#9 69.39             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 69.39         return img
#9 69.39 
#9 69.39 
#9 69.39 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 69.39 
#9 69.39 TIPS:
#9 69.39 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 69.39 * Make sure your patch has right indentation.
#9 69.39 * Make sure your file path is correct.
#9 69.46 * Succeed Patch:
#9 69.46 * Fail Patch:
#9 69.46 #SEARCH/REPLACE block failed to match!
#9 69.46 
#9 69.46 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 69.46         def convert_img(page):
#9 69.46             img = page.to_image(resolution=300)
#9 69.46             img = img.original
#9 69.46             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 69.46             return img
#9 69.46 
#9 69.46         self.pages = list(extract_pages(pdf_path))
#9 69.46         return [convert_img(page) for page in self.pages]
#9 69.46 
#9 69.46 
#9 69.46 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 69.46 
#9 69.46 TIPS:
#9 69.46 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 69.46 * Make sure your patch has right indentation.
#9 69.46 * Make sure your file path is correct.
#9 69.54 * Succeed Patch:
#9 69.54 * Fail Patch:
#9 69.54 #SEARCH/REPLACE block failed to match!
#9 69.54 
#9 69.54 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 69.54         def convert_img(page):
#9 69.54             img = page.to_image(resolution=300)
#9 69.54             img = img.original
#9 69.54             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 69.54             return img
#9 69.54 
#9 69.54         self.pages = list(extract_pages(pdf_path))
#9 69.54         return [convert_img(page) for page in self.pages]
#9 69.54 
#9 69.54         def extract(self):
#9 69.54             ...
#9 69.54 
#9 69.54 
#9 69.54 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 69.54 
#9 69.54 TIPS:
#9 69.54 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 69.54 * Make sure your patch has right indentation.
#9 69.54 * Make sure your file path is correct.
#9 69.62 * Succeed Patch:
#9 69.62 * Fail Patch:
#9 69.62 #SEARCH/REPLACE block failed to match!
#9 69.62 
#9 69.62 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 69.62             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 69.62         return img
#9 69.62     self.pages = list(extract_pages(pdf_path))
#9 69.62     return [convert_img(page) for page in self.pages]
#9 69.62         def convert_img(page):
#9 69.62             pix = page.get_pixmap(dpi=200)
#9 69.62             img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 69.62             img = img.reshape([pix.h, pix.w, pix.n])
#9 69.62             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 69.62         with fitz.open(pdf_path) as pdfer:
#9 69.62 
#9 69.62 
#9 69.62 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 69.62 
#9 69.62 TIPS:
#9 69.62 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 69.62 * Make sure your patch has right indentation.
#9 69.62 * Make sure your file path is correct.
#9 69.69 * Succeed Patch:
#9 69.69 * Fail Patch:
#9 69.69 #SEARCH/REPLACE block failed to match!
#9 69.69 
#9 69.69 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 69.69                 return img
#9 69.69         self.pages = list(extract_pages(pdf_path))
#9 69.69         return [convert_img(page) for page in self.pages]
#9 69.69 
#9 69.69 
#9 69.69 Did you mean to match some of these actual lines from /repo/rapid_doc/pdf_extract/main.py?
#9 69.69 
#9 69.69 ```diff
#9 69.69         def convert_img(page):
#9 69.69             pix = page.get_pixmap(dpi=200)
#9 69.69             img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 69.69             img = img.reshape([pix.h, pix.w, pix.n])
#9 69.69             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 69.69                 return img
#9 69.69         
#9 69.69         self.pages = list(extract_pages(pdf_path))
#9 69.69         return [convert_img(page) for page in self.pages]
#9 69.69             return img
#9 69.69 
#9 69.69         with fitz.open(pdf_path) as pdfer:
#9 69.69             pdf_img_list = list(map(convert_img, pdfer))
#9 69.69 ```
#9 69.69 
#9 69.69 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 69.69 
#9 69.69 TIPS:
#9 69.69 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 69.69 * Make sure your patch has right indentation.
#9 69.69 * Make sure your file path is correct.
#9 69.76 * Succeed Patch:
#9 69.76 * Fail Patch:
#9 69.76 #SEARCH/REPLACE block failed to match!
#9 69.76 
#9 69.76 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 69.76             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 69.76             return img
#9 69.76 
#9 69.76         self.pages = list(extract_pages(pdf_path))
#9 69.76         return [convert_img(page) for page in self.pages]
#9 69.76 
#9 69.76 
#9 69.76 Did you mean to match some of these actual lines from /repo/rapid_doc/pdf_extract/main.py?
#9 69.76 
#9 69.76 ```diff
#9 69.76             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 69.76                 return img
#9 69.76         
#9 69.76         self.pages = list(extract_pages(pdf_path))
#9 69.76         return [convert_img(page) for page in self.pages]
#9 69.76 ```
#9 69.76 
#9 69.76 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 69.76 
#9 69.76 TIPS:
#9 69.76 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 69.76 * Make sure your patch has right indentation.
#9 69.76 * Make sure your file path is correct.
#9 69.84 * Succeed Patch:
#9 69.84 * Fail Patch:
#9 69.84 #SEARCH/REPLACE block failed to match!
#9 69.84 
#9 69.84 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 69.84             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 69.84         return img
#9 69.84 
#9 69.84         self.pages = list(extract_pages(pdf_path))
#9 69.84         return [convert_img(page) for page in self.pages]
#9 69.84 
#9 69.84 
#9 69.84 Did you mean to match some of these actual lines from /repo/rapid_doc/pdf_extract/main.py?
#9 69.84 
#9 69.84 ```diff
#9 69.84             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 69.84                 return img
#9 69.84         
#9 69.84         self.pages = list(extract_pages(pdf_path))
#9 69.84         return [convert_img(page) for page in self.pages]
#9 69.84 ```
#9 69.84 
#9 69.84 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 69.84 
#9 69.84 TIPS:
#9 69.84 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 69.84 * Make sure your patch has right indentation.
#9 69.84 * Make sure your file path is correct.
#9 69.91 * Succeed Patch:
#9 69.91 * Fail Patch:
#9 69.91 #SEARCH/REPLACE block failed to match!
#9 69.91 
#9 69.91 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 69.91         def convert_img(page):
#9 69.91             img = page.to_image(resolution=300)
#9 69.91             img = img.original
#9 69.91             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 69.91                 return img
#9 69.91         
#9 69.91         self.pages = list(extract_pages(pdf_path))
#9 69.91         return [convert_img(page) for page in self.pages]
#9 69.91             return img
#9 69.91 
#9 69.91         with fitz.open(pdf_path) as pdfer:
#9 69.91             pdf_img_list = list(map(convert_img, pdfer))
#9 69.91 
#9 69.91 
#9 69.91 Did you mean to match some of these actual lines from /repo/rapid_doc/pdf_extract/main.py?
#9 69.91 
#9 69.91 ```diff
#9 69.91             pdf_path = self.pdf_path
#9 69.91         
#9 69.91         
#9 69.91         
#9 69.91         
#9 69.91         def convert_img(page):
#9 69.91             pix = page.get_pixmap(dpi=200)
#9 69.91             img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 69.91             img = img.reshape([pix.h, pix.w, pix.n])
#9 69.91             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 69.91                 return img
#9 69.91         
#9 69.91         self.pages = list(extract_pages(pdf_path))
#9 69.91         return [convert_img(page) for page in self.pages]
#9 69.91             return img
#9 69.91 
#9 69.91         with fitz.open(pdf_path) as pdfer:
#9 69.91             pdf_img_list = list(map(convert_img, pdfer))
#9 69.91         return pdf_img_list
#9 69.91 
#9 69.91     def get_page_count(self, pdf_path):
#9 69.91         with fitz.open(pdf_path) as pdfer:
#9 69.91 ```
#9 69.91 
#9 69.91 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 69.91 
#9 69.91 TIPS:
#9 69.91 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 69.91 * Make sure your patch has right indentation.
#9 69.91 * Make sure your file path is correct.
#9 69.97 * Succeed Patch:
#9 69.97 --- areporapid_docpdf_extractmain.py
#9 69.97 +++ breporapid_docpdf_extractmain.py
#9 69.97 @@ -40,7 +40,7 @@
#9 69.97              img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 69.97              img = img.reshape([pix.h, pix.w, pix.n])
#9 69.97              img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 69.97 -                return img
#9 69.97 +                    return img
#9 69.97          
#9 69.97          self.pages = list(extract_pages(pdf_path))
#9 69.97          return [convert_img(page) for page in self.pages]
#9 69.97 
#9 69.97 
#9 70.05 * Succeed Patch:
#9 70.05 * Fail Patch:
#9 70.05 #SEARCH/REPLACE block failed to match!
#9 70.05 
#9 70.05 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 70.05             return img
#9 70.05         self.pages = list(extract_pages(pdf_path))
#9 70.05         return [convert_img(page) for page in self.pages]
#9 70.05 
#9 70.05 
#9 70.05 Did you mean to match some of these actual lines from /repo/rapid_doc/pdf_extract/main.py?
#9 70.05 
#9 70.05 ```diff
#9 70.05             pix = page.get_pixmap(dpi=200)
#9 70.05             img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 70.05             img = img.reshape([pix.h, pix.w, pix.n])
#9 70.05             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 70.05                     return img
#9 70.05         
#9 70.05         self.pages = list(extract_pages(pdf_path))
#9 70.05         return [convert_img(page) for page in self.pages]
#9 70.05             return img
#9 70.05 
#9 70.05         with fitz.open(pdf_path) as pdfer:
#9 70.05             pdf_img_list = list(map(convert_img, pdfer))
#9 70.05         return pdf_img_list
#9 70.05 ```
#9 70.05 
#9 70.05 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 70.05 
#9 70.05 TIPS:
#9 70.05 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 70.05 * Make sure your patch has right indentation.
#9 70.05 * Make sure your file path is correct.
#9 70.12 * Succeed Patch:
#9 70.12 * Fail Patch:
#9 70.12 #SEARCH/REPLACE block failed to match!
#9 70.12 
#9 70.12 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 70.12             img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 70.12             img = img.reshape([pix.h, pix.w, pix.n])
#9 70.12             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 70.12                     return img
#9 70.12         self.pages = list(extract_pages(pdf_path))
#9 70.12         return [convert_img(page) for page in self.pages]
#9 70.12             return img
#9 70.12 
#9 70.12         with fitz.open(pdf_path) as pdfer:
#9 70.12             pdf_img_list = list(map(convert_img, pdfer))
#9 70.12 
#9 70.12 
#9 70.12 Did you mean to match some of these actual lines from /repo/rapid_doc/pdf_extract/main.py?
#9 70.12 
#9 70.12 ```diff
#9 70.12         
#9 70.12         
#9 70.12         
#9 70.12         def convert_img(page):
#9 70.12             pix = page.get_pixmap(dpi=200)
#9 70.12             img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 70.12             img = img.reshape([pix.h, pix.w, pix.n])
#9 70.12             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 70.12                     return img
#9 70.12         
#9 70.12         self.pages = list(extract_pages(pdf_path))
#9 70.12         return [convert_img(page) for page in self.pages]
#9 70.12             return img
#9 70.12 
#9 70.12         with fitz.open(pdf_path) as pdfer:
#9 70.12             pdf_img_list = list(map(convert_img, pdfer))
#9 70.12         return pdf_img_list
#9 70.12 
#9 70.12     def get_page_count(self, pdf_path):
#9 70.12         with fitz.open(pdf_path) as pdfer:
#9 70.12 ```
#9 70.12 
#9 70.12 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 70.12 
#9 70.12 TIPS:
#9 70.12 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 70.12 * Make sure your patch has right indentation.
#9 70.12 * Make sure your file path is correct.
#9 70.19 * Succeed Patch:
#9 70.19 * Fail Patch:
#9 70.19 #SEARCH/REPLACE block failed to match!
#9 70.19 
#9 70.19 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 70.19             img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 70.19             img = img.reshape([pix.h, pix.w, pix.n])
#9 70.19             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 70.19                     return img
#9 70.19                 return img
#9 70.19 
#9 70.19 
#9 70.19 Did you mean to match some of these actual lines from /repo/rapid_doc/pdf_extract/main.py?
#9 70.19 
#9 70.19 ```diff
#9 70.19         
#9 70.19         
#9 70.19         
#9 70.19         
#9 70.19         def convert_img(page):
#9 70.19             pix = page.get_pixmap(dpi=200)
#9 70.19             img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 70.19             img = img.reshape([pix.h, pix.w, pix.n])
#9 70.19             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 70.19                     return img
#9 70.19         
#9 70.19         self.pages = list(extract_pages(pdf_path))
#9 70.19         return [convert_img(page) for page in self.pages]
#9 70.19             return img
#9 70.19 
#9 70.19 ```
#9 70.19 
#9 70.19 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 70.19 
#9 70.19 TIPS:
#9 70.19 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 70.19 * Make sure your patch has right indentation.
#9 70.19 * Make sure your file path is correct.
#9 70.26 * Succeed Patch:
#9 70.26 * Fail Patch:
#9 70.26 #SEARCH/REPLACE block failed to match!
#9 70.26 
#9 70.26 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 70.26             return img
#9 70.26         self.pages = list(extract_pages(pdf_path))
#9 70.26         return [convert_img(page) for page in self.pages]
#9 70.26 
#9 70.26 
#9 70.26 Did you mean to match some of these actual lines from /repo/rapid_doc/pdf_extract/main.py?
#9 70.26 
#9 70.26 ```diff
#9 70.26             pix = page.get_pixmap(dpi=200)
#9 70.26             img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 70.26             img = img.reshape([pix.h, pix.w, pix.n])
#9 70.26             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 70.26                     return img
#9 70.26         
#9 70.26         self.pages = list(extract_pages(pdf_path))
#9 70.26         return [convert_img(page) for page in self.pages]
#9 70.26             return img
#9 70.26 
#9 70.26         with fitz.open(pdf_path) as pdfer:
#9 70.26             pdf_img_list = list(map(convert_img, pdfer))
#9 70.26         return pdf_img_list
#9 70.26 ```
#9 70.26 
#9 70.26 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 70.26 
#9 70.26 TIPS:
#9 70.26 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 70.26 * Make sure your patch has right indentation.
#9 70.26 * Make sure your file path is correct.
#9 70.34 * Succeed Patch:
#9 70.34 * Fail Patch:
#9 70.34 #SEARCH/REPLACE block failed to match!
#9 70.34 
#9 70.34 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 70.34         def convert_img(page):
#9 70.34             pix = page.get_pixmap(dpi=200)
#9 70.34             img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 70.34             img = img.reshape([pix.h, pix.w, pix.n])
#9 70.34             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 70.34                     return img
#9 70.34         
#9 70.34         self.pages = list(extract_pages(pdf_path))
#9 70.34         return [convert_img(page) for page in self.pages]
#9 70.34             return img
#9 70.34         with fitz.open(pdf_path) as pdfer:
#9 70.34             pdf_img_list = list(map(convert_img, pdfer))
#9 70.34 
#9 70.34 
#9 70.34 Did you mean to match some of these actual lines from /repo/rapid_doc/pdf_extract/main.py?
#9 70.34 
#9 70.34 ```diff
#9 70.34             pdf_path = self.pdf_path
#9 70.34         
#9 70.34         
#9 70.34         
#9 70.34         
#9 70.34         def convert_img(page):
#9 70.34             pix = page.get_pixmap(dpi=200)
#9 70.34             img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 70.34             img = img.reshape([pix.h, pix.w, pix.n])
#9 70.34             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 70.34                     return img
#9 70.34         
#9 70.34         self.pages = list(extract_pages(pdf_path))
#9 70.34         return [convert_img(page) for page in self.pages]
#9 70.34             return img
#9 70.34 
#9 70.34         with fitz.open(pdf_path) as pdfer:
#9 70.34             pdf_img_list = list(map(convert_img, pdfer))
#9 70.34         return pdf_img_list
#9 70.34 
#9 70.34     def get_page_count(self, pdf_path):
#9 70.34         with fitz.open(pdf_path) as pdfer:
#9 70.34 ```
#9 70.34 
#9 70.34 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 70.34 
#9 70.34 TIPS:
#9 70.34 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 70.34 * Make sure your patch has right indentation.
#9 70.34 * Make sure your file path is correct.
#9 70.41 * Succeed Patch:
#9 70.41 --- areporapid_docpdf_extractmain.py
#9 70.41 +++ breporapid_docpdf_extractmain.py
#9 70.41 @@ -40,7 +40,7 @@
#9 70.41              img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 70.41              img = img.reshape([pix.h, pix.w, pix.n])
#9 70.41              img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 70.41 -                    return img
#9 70.41 +            return img
#9 70.41          
#9 70.41          self.pages = list(extract_pages(pdf_path))
#9 70.41          return [convert_img(page) for page in self.pages]
#9 70.41 
#9 70.41 
#9 70.48 * Succeed Patch:
#9 70.48 * Fail Patch:
#9 70.48 #SEARCH/REPLACE block failed to match!
#9 70.48 
#9 70.48 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 70.48         return img
#9 70.48         
#9 70.48         self.pages = list(extract_pages(pdf_path))
#9 70.48         return [convert_img(page) for page in self.pages]
#9 70.48 
#9 70.48 
#9 70.48 Did you mean to match some of these actual lines from /repo/rapid_doc/pdf_extract/main.py?
#9 70.48 
#9 70.48 ```diff
#9 70.48         def convert_img(page):
#9 70.48             pix = page.get_pixmap(dpi=200)
#9 70.48             img = np.frombuffer(pix.samples, dtype=np.uint8)
#9 70.48             img = img.reshape([pix.h, pix.w, pix.n])
#9 70.48             img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 70.48             return img
#9 70.48         
#9 70.48         self.pages = list(extract_pages(pdf_path))
#9 70.48         return [convert_img(page) for page in self.pages]
#9 70.48             return img
#9 70.48 
#9 70.48         with fitz.open(pdf_path) as pdfer:
#9 70.48             pdf_img_list = list(map(convert_img, pdfer))
#9 70.48         return pdf_img_list
#9 70.48 ```
#9 70.48 
#9 70.48 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 70.48 
#9 70.48 TIPS:
#9 70.48 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 70.48 * Make sure your patch has right indentation.
#9 70.48 * Make sure your file path is correct.
#9 70.55 * Succeed Patch:
#9 70.55 * Fail Patch:
#9 70.55 #SEARCH/REPLACE block failed to match!
#9 70.55 
#9 70.55 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 70.55         return img
#9 70.55 
#9 70.55         self.pages = list(extract_pages(pdf_path))
#9 70.55         return [convert_img(page) for page in self.pages]
#9 70.55 
#9 70.55 
#9 70.55 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 70.55 
#9 70.55 TIPS:
#9 70.55 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 70.55 * Make sure your patch has right indentation.
#9 70.55 * Make sure your file path is correct.
#9 70.61 * Succeed Patch:
#9 70.61 * Fail Patch:
#9 70.61 Fail to apply diff(s)
#9 70.61 TIPS:
#9 70.61 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 70.61 * Make sure your patch has right indentation.
#9 70.61 * Make sure your file path is correct.
#9 70.68 * Succeed Patch:
#9 70.68 --- areporapid_docpdf_extractmain.py
#9 70.68 +++ breporapid_docpdf_extractmain.py
#9 70.68 @@ -44,6 +44,10 @@
#9 70.68          
#9 70.68          self.pages = list(extract_pages(pdf_path))
#9 70.68          return [convert_img(page) for page in self.pages]
#9 70.68 +
#9 70.68 +
#9 70.68 +        with fitz.open(pdf_path) as pdfer:
#9 70.68 +            pdf_img_list = list(map(convert_img, pdfer))
#9 70.68              return img
#9 70.68  
#9 70.68          with fitz.open(pdf_path) as pdfer:
#9 70.68 
#9 70.68 
#9 70.74 * Succeed Patch:
#9 70.74 --- areporapid_docpdf_extractmain.py
#9 70.74 +++ breporapid_docpdf_extractmain.py
#9 70.74 @@ -26,7 +26,11 @@
#9 70.74          self.ratio = None
#9 70.74  
#9 70.74      def extract_all_pages(self, pdf_path: str):
#9 70.74 -        self.pages = list(extract_pages(pdf_path))
#9 70.74 +        pdf_path = str(self.pdf_path)
#9 70.74 +        with fitz.open(pdf_path) as doc:
#9 70.74 +            self.pages = [page.get_pixmap() for page in doc]
#9 70.74 +            
#9 70.74 +        self.pages += list(extract_pages(pdf_path))
#9 70.74  
#9 70.74      def read_pdf(self, pdf_path=None) -> List:
#9 70.74          if pdf_path is None:
#9 70.74 
#9 70.74 
#9 70.81 * Succeed Patch:
#9 70.81 * Fail Patch:
#9 70.81 #SEARCH/REPLACE block failed to match!
#9 70.81 
#9 70.81 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/main.py
#9 70.81     def __init__(self):
#9 70.81 
#9 70.81 
#9 70.81 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 70.81 
#9 70.81 TIPS:
#9 70.81 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 70.81 * Make sure your patch has right indentation.
#9 70.81 * Make sure your file path is correct.
#9 70.89 * Succeed Patch:
#9 70.89 --- areporapid_docmain.py
#9 70.89 +++ breporapid_docmain.py
#9 70.89 @@ -17,7 +17,7 @@
#9 70.89  
#9 70.89  
#9 70.89  class RapidDoc:
#9 70.89 -    def __init__(self, pdf_path: str, dpi: int = 96):
#9 70.89 +    def __init__(self, pdf_path: str = 'teststest_filesdirect_extractsingle_column.pdf', dpi: int = 96):
#9 70.89          pdf_path = pdf_path or 'teststest_filesdirect_extractsingle_column.pdf'
#9 70.89          self.pdf_extracter = PDFExtract(pdf_path)
#9 70.89          self.dpi = dpi
#9 70.89 
#9 70.89 
#9 70.96 * Succeed Patch:
#9 70.96 --- areporapid_docmain.py
#9 70.96 +++ breporapid_docmain.py
#9 70.96 @@ -19,9 +19,8 @@
#9 70.96  class RapidDoc:
#9 70.96      def __init__(self, pdf_path: str = 'teststest_filesdirect_extractsingle_column.pdf', dpi: int = 96):
#9 70.96          pdf_path = pdf_path or 'teststest_filesdirect_extractsingle_column.pdf'
#9 70.96 +        self.dpi = dpi
#9 70.96          self.pdf_extracter = PDFExtract(pdf_path)
#9 70.96 -        self.dpi = dpi
#9 70.96 -        self.pdf_extracter = PDFExtract()
#9 70.96          self.ocr_extracter = OCRExtract()
#9 70.96          self.layout_recover = LayoutRecover()
#9 70.96  
#9 70.96 
#9 70.96 
#9 71.04 * Succeed Patch:
#9 71.04 * Fail Patch:
#9 71.04 #SEARCH/REPLACE block failed to match!
#9 71.04 
#9 71.04 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 71.04         return [convert_img(page) for page in self.pages]
#9 71.04         with fitz.open(pdf_path) as pdfer:
#9 71.04             pdf_img_list = list(map(convert_img, pdfer))
#9 71.04             return img
#9 71.04         with fitz.open(pdf_path) as pdfer:
#9 71.04             pdf_img_list = list(map(convert_img, pdfer))
#9 71.04         return pdf_img_list
#9 71.04 
#9 71.04 
#9 71.04 Did you mean to match some of these actual lines from /repo/rapid_doc/pdf_extract/main.py?
#9 71.04 
#9 71.04 ```diff
#9 71.04         
#9 71.04         self.pages = list(extract_pages(pdf_path))
#9 71.04         return [convert_img(page) for page in self.pages]
#9 71.04 
#9 71.04 
#9 71.04         with fitz.open(pdf_path) as pdfer:
#9 71.04             pdf_img_list = list(map(convert_img, pdfer))
#9 71.04             return img
#9 71.04 
#9 71.04         with fitz.open(pdf_path) as pdfer:
#9 71.04             pdf_img_list = list(map(convert_img, pdfer))
#9 71.04         return pdf_img_list
#9 71.04 
#9 71.04     def get_page_count(self, pdf_path):
#9 71.04         with fitz.open(pdf_path) as pdfer:
#9 71.04             return pdfer.page_count
#9 71.04 
#9 71.04 ```
#9 71.04 
#9 71.04 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 71.04 
#9 71.04 TIPS:
#9 71.04 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 71.04 * Make sure your patch has right indentation.
#9 71.04 * Make sure your file path is correct.
#9 71.11 * Succeed Patch:
#9 71.11 --- areporapid_docpdf_extractmain.py
#9 71.11 +++ breporapid_docpdf_extractmain.py
#9 71.11 @@ -46,16 +46,12 @@
#9 71.11              img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 71.11              return img
#9 71.11          
#9 71.11 -        self.pages = list(extract_pages(pdf_path))
#9 71.11 -        return [convert_img(page) for page in self.pages]
#9 71.11 -
#9 71.11 -
#9 71.11 -        with fitz.open(pdf_path) as pdfer:
#9 71.11 -            pdf_img_list = list(map(convert_img, pdfer))
#9 71.11 -            return img
#9 71.11 -
#9 71.11 -        with fitz.open(pdf_path) as pdfer:
#9 71.11 -            pdf_img_list = list(map(convert_img, pdfer))
#9 71.11 +        pdf_img_list = []
#9 71.11 +        for page in self.pages:
#9 71.11 +            if isinstance(page, fitz.Page):
#9 71.11 +                pdf_img_list.append(self.convert_img(page))
#9 71.11 +            else:
#9 71.11 +                pdf_img_list.append(None)  # Handling LTPage differently other than fitz.Page
#9 71.11          return pdf_img_list
#9 71.11  
#9 71.11      def get_page_count(self, pdf_path):
#9 71.11 
#9 71.11 
#9 71.18 * Succeed Patch:
#9 71.18 --- areporapid_docpdf_extractmain.py
#9 71.18 +++ breporapid_docpdf_extractmain.py
#9 71.18 @@ -46,7 +46,8 @@
#9 71.18              img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 71.18              return img
#9 71.18          
#9 71.18 -        pdf_img_list = []
#9 71.18 +        if self.pages is None:
#9 71.18 +            self.extract_all_pages(pdf_path)
#9 71.18          for page in self.pages:
#9 71.18              if isinstance(page, fitz.Page):
#9 71.18                  pdf_img_list.append(self.convert_img(page))
#9 71.18 
#9 71.18 
#9 71.24 * Succeed Patch:
#9 71.24 --- areporapid_docpdf_extractmain.py
#9 71.24 +++ breporapid_docpdf_extractmain.py
#9 71.24 @@ -46,7 +46,7 @@
#9 71.24              img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 71.24              return img
#9 71.24          
#9 71.24 -        if self.pages is None:
#9 71.24 +        pdf_img_list = []
#9 71.24              self.extract_all_pages(pdf_path)
#9 71.24          for page in self.pages:
#9 71.24              if isinstance(page, fitz.Page):
#9 71.24 
#9 71.24 
#9 71.32 * Succeed Patch:
#9 71.32 --- areporapid_docpdf_extractmain.py
#9 71.32 +++ breporapid_docpdf_extractmain.py
#9 71.32 @@ -46,7 +46,7 @@
#9 71.32              img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 71.32              return img
#9 71.32          
#9 71.32 -        pdf_img_list = []
#9 71.32 +            pdf_img_list = []
#9 71.32              self.extract_all_pages(pdf_path)
#9 71.32          for page in self.pages:
#9 71.32              if isinstance(page, fitz.Page):
#9 71.32 
#9 71.32 * Fail Patch:
#9 71.32 Fail to apply diff(s)
#9 71.32 TIPS:
#9 71.32 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 71.32 * Make sure your patch has right indentation.
#9 71.32 * Make sure your file path is correct.
#9 71.41 * Succeed Patch:
#9 71.41 --- areporapid_docpdf_extractmain.py
#9 71.41 +++ breporapid_docpdf_extractmain.py
#9 71.41 @@ -46,7 +46,7 @@
#9 71.41              img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
#9 71.41              return img
#9 71.41          
#9 71.41 -            pdf_img_list = []
#9 71.41 +        pdf_img_list = []
#9 71.41              self.extract_all_pages(pdf_path)
#9 71.41          for page in self.pages:
#9 71.41              if isinstance(page, fitz.Page):
#9 71.41 
#9 71.41 * Fail Patch:
#9 71.41 Fail to apply diff(s)
#9 71.41 TIPS:
#9 71.41 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 71.41 * Make sure your patch has right indentation.
#9 71.41 * Make sure your file path is correct.
#9 71.49 * Succeed Patch:
#9 71.49 * Fail Patch:
#9 71.49 #SEARCH/REPLACE block failed to match!
#9 71.49 
#9 71.49 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 71.49     def read_pdf(self, pdf_path):
#9 71.49 
#9 71.49 
#9 71.49 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 71.49 
#9 71.49 TIPS:
#9 71.49 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 71.49 * Make sure your patch has right indentation.
#9 71.49 * Make sure your file path is correct.
#9 71.57 * Succeed Patch:
#9 71.57 * Fail Patch:
#9 71.57 #SEARCH/REPLACE block failed to match!
#9 71.57 
#9 71.57 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 71.57         def read_pdf(self, pdf_path):
#9 71.57 
#9 71.57 
#9 71.57 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 71.57 
#9 71.57 TIPS:
#9 71.57 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 71.57 * Make sure your patch has right indentation.
#9 71.57 * Make sure your file path is correct.
#9 71.64 * Succeed Patch:
#9 71.64 * Fail Patch:
#9 71.64 #SEARCH/REPLACE block failed to match!
#9 71.64 
#9 71.64 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 71.64         def read_pdf(self, pdf_path):
#9 71.64             self.pages = list(extract_pages(pdf_path))
#9 71.64 
#9 71.64 
#9 71.64 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 71.64 
#9 71.64 TIPS:
#9 71.64 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 71.64 * Make sure your patch has right indentation.
#9 71.64 * Make sure your file path is correct.
#9 71.70 * Succeed Patch:
#9 71.70 * Fail Patch:
#9 71.70 #SEARCH/REPLACE block failed to match!
#9 71.70 
#9 71.70 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 71.70             self.pages = list(extract_pages(pdf_path))
#9 71.70         for page in self.pages:
#9 71.70 
#9 71.70 
#9 71.70 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 71.70 
#9 71.70 TIPS:
#9 71.70 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 71.70 * Make sure your patch has right indentation.
#9 71.70 * Make sure your file path is correct.
#9 71.77 * Succeed Patch:
#9 71.77 --- areporapid_docpdf_extractmain.py
#9 71.77 +++ breporapid_docpdf_extractmain.py
#9 71.77 @@ -48,6 +48,8 @@
#9 71.77          
#9 71.77          pdf_img_list = []
#9 71.77              self.extract_all_pages(pdf_path)
#9 71.77 +        pdf_img_list = []
#9 71.77 +        self.extract_all_pages(pdf_path)
#9 71.77          for page in self.pages:
#9 71.77              if isinstance(page, fitz.Page):
#9 71.77                  pdf_img_list.append(self.convert_img(page))
#9 71.77 
#9 71.77 
#9 71.84 * Succeed Patch:
#9 71.84 * Fail Patch:
#9 71.84 #SEARCH/REPLACE block failed to match!
#9 71.84 
#9 71.84 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 71.84         pdf_img_list = []
#9 71.84              self.extract_all_pages(pdf_path)
#9 71.84 
#9 71.84 
#9 71.84 Are you sure you need this SEARCH/REPLACE block?
#9 71.84 The REPLACE lines are already in /repo/rapid_doc/pdf_extract/main.py!
#9 71.84 
#9 71.84 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 71.84 
#9 71.84 TIPS:
#9 71.84 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 71.84 * Make sure your patch has right indentation.
#9 71.84 * Make sure your file path is correct.
#9 71.90 * Succeed Patch:
#9 71.90 --- areporapid_docpdf_extractmain.py
#9 71.90 +++ breporapid_docpdf_extractmain.py
#9 71.90 @@ -21,7 +21,7 @@
#9 71.90  class PDFExtract:
#9 71.90      def __init__(self, pdf_path: str):
#9 71.90          self.pdf_path = pdf_path
#9 71.90 -        self.extract_all_pages(pdf_path)
#9 71.90 +            self.extract_all_pages(pdf_path)
#9 71.90          self.pages = None
#9 71.90          self.ratio = None
#9 71.90  
#9 71.90 
#9 71.90 
#9 71.97 * Succeed Patch:
#9 71.97 --- areporapid_docpdf_extractmain.py
#9 71.97 +++ breporapid_docpdf_extractmain.py
#9 71.97 @@ -47,7 +47,7 @@
#9 71.97              return img
#9 71.97          
#9 71.97          pdf_img_list = []
#9 71.97 -            self.extract_all_pages(pdf_path)
#9 71.97 +        self.extract_all_pages(pdf_path)
#9 71.97          pdf_img_list = []
#9 71.97          self.extract_all_pages(pdf_path)
#9 71.97          for page in self.pages:
#9 71.97 
#9 71.97 
#9 72.05 * Succeed Patch:
#9 72.05 --- areporapid_docpdf_extractmain.py
#9 72.05 +++ breporapid_docpdf_extractmain.py
#9 72.05 @@ -21,7 +21,7 @@
#9 72.05  class PDFExtract:
#9 72.05      def __init__(self, pdf_path: str):
#9 72.05          self.pdf_path = pdf_path
#9 72.05 -            self.extract_all_pages(pdf_path)
#9 72.05 +        self.extract_all_pages(pdf_path)
#9 72.05          self.pages = None
#9 72.05          self.ratio = None
#9 72.05  
#9 72.05 
#9 72.05 
#9 72.12 * Succeed Patch:
#9 72.12 * Fail Patch:
#9 72.12 #SEARCH/REPLACE block failed to match!
#9 72.12 
#9 72.12 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 72.12         pdf_nums = extract.get_page_count(pdf_path)
#9 72.12 
#9 72.12 
#9 72.12 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 72.12 
#9 72.12 TIPS:
#9 72.12 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 72.12 * Make sure your patch has right indentation.
#9 72.12 * Make sure your file path is correct.
#9 72.19 * Succeed Patch:
#9 72.19 * Fail Patch:
#9 72.19 #SEARCH/REPLACE block failed to match!
#9 72.19 
#9 72.19 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 72.19 def get_page_count(self):
#9 72.19 
#9 72.19 
#9 72.19 Are you sure you need this SEARCH/REPLACE block?
#9 72.19 The REPLACE lines are already in /repo/rapid_doc/pdf_extract/main.py!
#9 72.19 
#9 72.19 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 72.19 
#9 72.19 TIPS:
#9 72.19 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 72.19 * Make sure your patch has right indentation.
#9 72.19 * Make sure your file path is correct.
#9 72.26 * Succeed Patch:
#9 72.26 * Fail Patch:
#9 72.26 #SEARCH/REPLACE block failed to match!
#9 72.26 
#9 72.26 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 72.26     def get_page_count(self):
#9 72.26 
#9 72.26 
#9 72.26 Are you sure you need this SEARCH/REPLACE block?
#9 72.26 The REPLACE lines are already in /repo/rapid_doc/pdf_extract/main.py!
#9 72.26 
#9 72.26 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 72.26 
#9 72.26 TIPS:
#9 72.26 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 72.26 * Make sure your patch has right indentation.
#9 72.26 * Make sure your file path is correct.
#9 72.33 * Succeed Patch:
#9 72.33 * Fail Patch:
#9 72.33 #SEARCH/REPLACE block failed to match!
#9 72.33 
#9 72.33 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 72.33     def get_page_count(self):
#9 72.33         return len(self.pages)
#9 72.33 
#9 72.33 
#9 72.33 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 72.33 
#9 72.33 TIPS:
#9 72.33 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 72.33 * Make sure your patch has right indentation.
#9 72.33 * Make sure your file path is correct.
#9 72.40 * Succeed Patch:
#9 72.40 * Fail Patch:
#9 72.40 #SEARCH/REPLACE block failed to match!
#9 72.40 
#9 72.40 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 72.40     def get_page_count(self):
#9 72.40         return len(self.pages)
#9 72.40 
#9 72.40 
#9 72.40 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 72.40 
#9 72.40 TIPS:
#9 72.40 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 72.40 * Make sure your patch has right indentation.
#9 72.40 * Make sure your file path is correct.
#9 72.48 * Succeed Patch:
#9 72.48 * Fail Patch:
#9 72.48 #SEARCH/REPLACE block failed to match!
#9 72.48 
#9 72.48 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 72.48     def get_page_count(self):
#9 72.48         return len(self.pages)
#9 72.48 
#9 72.48 
#9 72.48 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 72.48 
#9 72.48 TIPS:
#9 72.48 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 72.48 * Make sure your patch has right indentation.
#9 72.48 * Make sure your file path is correct.
#9 72.55 * Succeed Patch:
#9 72.55 * Fail Patch:
#9 72.55 #SEARCH/REPLACE block failed to match!
#9 72.55 
#9 72.55 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 72.55     def get_page_count(self):
#9 72.55 
#9 72.55 
#9 72.55 Are you sure you need this SEARCH/REPLACE block?
#9 72.55 The REPLACE lines are already in /repo/rapid_doc/pdf_extract/main.py!
#9 72.55 
#9 72.55 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 72.55 
#9 72.55 TIPS:
#9 72.55 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 72.55 * Make sure your patch has right indentation.
#9 72.55 * Make sure your file path is correct.
#9 72.61 * Succeed Patch:
#9 72.61 --- areporapid_docpdf_extractmain.py
#9 72.61 +++ breporapid_docpdf_extractmain.py
#9 72.61 @@ -57,7 +57,7 @@
#9 72.61                  pdf_img_list.append(None)  # Handling LTPage differently other than fitz.Page
#9 72.61          return pdf_img_list
#9 72.61  
#9 72.61 -    def get_page_count(self, pdf_path):
#9 72.61 +    def get_page_count(self):
#9 72.61          with fitz.open(pdf_path) as pdfer:
#9 72.61              return pdfer.page_count
#9 72.61  
#9 72.61 
#9 72.61 
#9 72.68 * Succeed Patch:
#9 72.68 * Fail Patch:
#9 72.68 #SEARCH/REPLACE block failed to match!
#9 72.68 
#9 72.68 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 72.68     def get_page_count(self):
#9 72.68         return len(self.pages)
#9 72.68 
#9 72.68 
#9 72.68 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 72.68 
#9 72.68 TIPS:
#9 72.68 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 72.68 * Make sure your patch has right indentation.
#9 72.68 * Make sure your file path is correct.
#9 72.75 * Succeed Patch:
#9 72.75 The new code snippet is inserted at the beginning of the file /repo/rapid_doc/pdf_extract/main.py
#9 72.75 --- reporapid_docpdf_extractmain.py
#9 72.75 +++ reporapid_docpdf_extractmain.py
#9 72.75 @@ -1,3 +1,5 @@
#9 72.75 +if pdf_path is None:
#9 72.75 +            pdf_path = self.pdf_path
#9 72.75  # -*- encoding: utf-8 -*-
#9 72.75  # @Author: SWHL
#9 72.75  # @Contact: liekkaskono@163.com
#9 72.75 
#9 72.85 * Succeed Patch:
#9 72.85 * Fail Patch:
#9 72.85 #SEARCH/REPLACE block failed to match!
#9 72.85 
#9 72.85 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 72.85     def get_page_count(self):
#9 72.85         return len(self.pages)
#9 72.85 
#9 72.85 
#9 72.85 Are you sure you need this SEARCH/REPLACE block?
#9 72.85 The REPLACE lines are already in /repo/rapid_doc/pdf_extract/main.py!
#9 72.85 
#9 72.85 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 72.85 
#9 72.85 TIPS:
#9 72.85 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 72.85 * Make sure your patch has right indentation.
#9 72.85 * Make sure your file path is correct.
#9 72.92 * Succeed Patch:
#9 72.92 * Fail Patch:
#9 72.92 #SEARCH/REPLACE block failed to match!
#9 72.92 
#9 72.92 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/rapid_doc/pdf_extract/main.py
#9 72.92             pdf_path = self.pdf_path
#9 72.92 
#9 72.92     def get_page_count(self):
#9 72.92         with fitz.open(pdf_path) as pdfer:
#9 72.92 
#9 72.92 
#9 72.92 Did you mean to match some of these actual lines from /repo/rapid_doc/pdf_extract/main.py?
#9 72.92 
#9 72.92 ```diff
#9 72.92         for page in self.pages:
#9 72.92             if isinstance(page, fitz.Page):
#9 72.92                 pdf_img_list.append(self.convert_img(page))
#9 72.92             else:
#9 72.92                 pdf_img_list.append(None)  # Handling LTPage differently other than fitz.Page
#9 72.92         return pdf_img_list
#9 72.92 
#9 72.92     def get_page_count(self):
#9 72.92         with fitz.open(pdf_path) as pdfer:
#9 72.92             return pdfer.page_count
#9 72.92 
#9 72.92     def merge_ocr_direct(self, img, page_num, dt_boxes, rec_res):
#9 72.92         """将OCR识别结果与直接提取的结果合并
#9 72.92         直接提取PDF文件中的内容，并于OCR识别结果进行匹配
#9 72.92 ```
#9 72.92 
#9 72.92 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#9 72.92 
#9 72.92 TIPS:
#9 72.92 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#9 72.92 * Make sure your patch has right indentation.
#9 72.92 * Make sure your file path is correct.
#9 72.99 * Succeed Patch:
#9 72.99 --- areporapid_docpdf_extractmain.py
#9 72.99 +++ breporapid_docpdf_extractmain.py
#9 72.99 @@ -59,7 +59,9 @@
#9 72.99                  pdf_img_list.append(None)  # Handling LTPage differently other than fitz.Page
#9 72.99          return pdf_img_list
#9 72.99  
#9 72.99 -    def get_page_count(self):
#9 72.99 +    def get_page_count(self, pdf_path=None):
#9 72.99 +        if pdf_path is None:
#9 72.99 +            pdf_path = self.pdf_path
#9 72.99          with fitz.open(pdf_path) as pdfer:
#9 72.99              return pdfer.page_count
#9 72.99  
#9 72.99 
#9 72.99 
#9 73.06 * Succeed Patch:
#9 73.06 --- areporapid_docpdf_extractmain.py
#9 73.06 +++ breporapid_docpdf_extractmain.py
#9 73.06 @@ -1,5 +1,3 @@
#9 73.06 -        if pdf_path is None:
#9 73.06 -            pdf_path = self.pdf_path
#9 73.06  # -*- encoding: utf-8 -*-
#9 73.06  # @Author: SWHL
#9 73.06  # @Contact: liekkaskono@163.com
#9 73.06 
#9 73.06 
#9 DONE 73.4s

#10 [6/7] RUN cd /repo && pytest --collect-only -q
#10 2.451 tests/test_main.py::test_direct_single_column
#10 2.451 
#10 2.451 =============================== warnings summary ===============================
#10 2.451 <frozen importlib._bootstrap>:241
#10 2.451 <frozen importlib._bootstrap>:241
#10 2.451   <frozen importlib._bootstrap>:241: DeprecationWarning: builtin type SwigPyPacked has no __module__ attribute
#10 2.451 
#10 2.451 <frozen importlib._bootstrap>:241
#10 2.451 <frozen importlib._bootstrap>:241
#10 2.451   <frozen importlib._bootstrap>:241: DeprecationWarning: builtin type SwigPyObject has no __module__ attribute
#10 2.451 
#10 2.451 <frozen importlib._bootstrap>:241
#10 2.451   <frozen importlib._bootstrap>:241: DeprecationWarning: builtin type swigvarlink has no __module__ attribute
#10 2.451 
#10 2.451 -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
#10 2.451 1 test collected in 1.51s
#10 2.548 sys:1: DeprecationWarning: builtin type swigvarlink has no __module__ attribute
#10 DONE 3.2s

#11 exporting to image
#11 exporting layers
#11 exporting layers 6.4s done
#11 writing image sha256:0981a025fb6387b01837d8a1239d7145023d7787cff4318ae0cab99133a10204 done
#11 naming to docker.io/library/tmp:tmp done
#11 DONE 6.4s
