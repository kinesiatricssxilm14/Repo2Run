#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile:
#1 transferring dockerfile: 1.04kB done
#1 DONE 0.7s

#2 [internal] load metadata for docker.io/library/python:3.10
#2 DONE 0.0s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/5] FROM docker.io/library/python:3.10
#4 DONE 0.0s

#5 [2/5] RUN mkdir -p ~/.pip && touch ~/.pip/pip.conf &&     echo "[global]" >> ~/.pip/pip.conf && echo "index-url=http://simple/" >> ~/.pip/pip.conf && echo "[install]" >> ~/.pip/pip.conf && echo "trusted-host=pypi..org" >> ~/.pip/pip.conf &&     apt-get update && apt-get install -y curl &&     curl -sSL https://install.python-poetry.org | python -
#5 CACHED

#6 [3/5] RUN pip install pytest pytest-xdist &&     pip install pipdeptree &&     git clone https://github.com/mkjt2/lockbox.git &&     mkdir /repo &&     git config --global --add safe.directory /repo &&     cp -r /lockbox/. /repo && rm -rf /lockbox/ &&     rm -rf /lockbox &&     cd /repo && git checkout 58430d96d20afaa52f67e72cddd80ef56b79e7f8 &&     cd /repo && poetry install
#6 1.705 Looking in indexes: http://simple/
#6 1.859 Collecting pytest
#6 1.880   Downloading http://packages/pytest/pytest-8.3.4-py3-none-any.whl (343 kB)
#6 1.903      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 343.1/343.1 kB 17.6 MB/s eta 0:00:00
#6 1.983 Collecting pytest-xdist
#6 2.001   Downloading http://packages/pytest-xdist/pytest_xdist-3.6.1-py3-none-any.whl (46 kB)
#6 2.012      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 46.1/46.1 kB 4.7 MB/s eta 0:00:00
#6 2.092 Collecting packaging
#6 2.141   Downloading http://packages/packaging/packaging-24.2-py3-none-any.whl (65 kB)
#6 2.154      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 65.5/65.5 kB 6.4 MB/s eta 0:00:00
#6 2.186 Collecting iniconfig
#6 2.213   Downloading http://packages/iniconfig/iniconfig-2.0.0-py3-none-any.whl (5.9 kB)
#6 2.272 Collecting pluggy<2,>=1.5
#6 2.291   Downloading http://packages/pluggy/pluggy-1.5.0-py3-none-any.whl (20 kB)
#6 2.344 Collecting exceptiongroup>=1.0.0rc8
#6 2.363   Downloading http://packages/exceptiongroup/exceptiongroup-1.2.2-py3-none-any.whl (16 kB)
#6 2.423 Collecting tomli>=1
#6 2.447   Downloading http://packages/tomli/tomli-2.2.1-py3-none-any.whl (14 kB)
#6 2.519 Collecting execnet>=2.1
#6 2.537   Downloading http://packages/execnet/execnet-2.1.1-py3-none-any.whl (40 kB)
#6 2.546      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 40.6/40.6 kB 7.7 MB/s eta 0:00:00
#6 2.674 Installing collected packages: tomli, pluggy, packaging, iniconfig, execnet, exceptiongroup, pytest, pytest-xdist
#6 3.214 Successfully installed exceptiongroup-1.2.2 execnet-2.1.1 iniconfig-2.0.0 packaging-24.2 pluggy-1.5.0 pytest-8.3.4 pytest-xdist-3.6.1 tomli-2.2.1
#6 3.215 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
#6 3.341 
#6 3.341 [notice] A new release of pip is available: 23.0.1 -> 24.3.1
#6 3.341 [notice] To update, run: pip install --upgrade pip
#6 4.056 Looking in indexes: http://simple/
#6 4.138 Collecting pipdeptree
#6 4.168   Downloading http://packages/pipdeptree/pipdeptree-2.24.0-py3-none-any.whl (32 kB)
#6 4.196 Requirement already satisfied: packaging>=24.1 in /usr/local/lib/python3.10/site-packages (from pipdeptree) (24.2)
#6 4.316 Collecting pip>=24.2
#6 4.330   Using cached http://packages/pip/pip-24.3.1-py3-none-any.whl (1.8 MB)
#6 4.460 Installing collected packages: pip, pipdeptree
#6 4.460   Attempting uninstall: pip
#6 4.462     Found existing installation: pip 23.0.1
#6 4.626     Uninstalling pip-23.0.1:
#6 4.789       Successfully uninstalled pip-23.0.1
#6 6.122 Successfully installed pip-24.3.1 pipdeptree-2.24.0
#6 6.124 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
#6 6.348 Cloning into 'lockbox'...
#6 8.137 Note: switching to '58430d96d20afaa52f67e72cddd80ef56b79e7f8'.
#6 8.137 
#6 8.137 You are in 'detached HEAD' state. You can look around, make experimental
#6 8.137 changes and commit them, and you can discard any commits you make in this
#6 8.137 state without impacting any branches by switching back to a branch.
#6 8.137 
#6 8.137 If you want to create a new branch to retain commits you create, you may
#6 8.137 do so (now or later) by using -c with the switch command. Example:
#6 8.137 
#6 8.137   git switch -c <new-branch-name>
#6 8.137 
#6 8.137 Or undo this operation with:
#6 8.137 
#6 8.137   git switch -
#6 8.137 
#6 8.137 Turn off this advice by setting config variable advice.detachedHead to false
#6 8.137 
#6 8.137 HEAD is now at 58430d9 docker build and push script
#6 9.082 Creating virtualenv lockbox-proxy-gW_DSdP6-py3.10 in /root/.cache/pypoetry/virtualenvs
#6 10.22 Installing dependencies from lock file
#6 10.48 
#6 10.48 Package operations: 40 installs, 0 updates, 0 removals
#6 10.48 
#6 10.48   - Installing distlib (0.3.8)
#6 10.48   - Installing filelock (3.13.1)
#6 10.48   - Installing markupsafe (2.1.4)
#6 10.48   - Installing platformdirs (4.1.0)
#6 10.48   - Installing setuptools (69.0.3)
#6 10.48   - Installing types-markupsafe (1.1.10)
#6 10.48   - Installing typing-extensions (4.9.0)
#6 12.35   - Installing annotated-types (0.6.0)
#6 12.35   - Installing blinker (1.7.0)
#6 12.35   - Installing certifi (2023.11.17)
#6 12.35   - Installing charset-normalizer (3.3.2)
#6 12.36   - Installing click (8.1.7)
#6 12.36   - Installing exceptiongroup (1.2.0)
#6 12.36   - Installing idna (3.6)
#6 12.37   - Installing itsdangerous (2.1.2)
#6 12.37   - Installing identify (2.5.33)
#6 12.37   - Installing iniconfig (2.0.0)
#6 12.38   - Installing cfgv (3.4.0)
#6 12.38   - Installing pluggy (1.4.0)
#6 12.38   - Installing nodeenv (1.8.0)
#6 12.38   - Installing pydantic-core (2.14.6)
#6 12.39   - Installing tomli (2.0.1)
#6 12.39   - Installing packaging (23.2)
#6 12.39   - Installing types-click (7.1.8)
#6 12.40   - Installing pyyaml (6.0.1)
#6 12.40   - Installing jinja2 (3.1.3)
#6 12.40   - Installing types-jinja2 (2.11.9)
#6 12.41   - Installing types-werkzeug (1.0.9)
#6 12.41   - Installing virtualenv (20.25.0)
#6 12.41   - Installing urllib3 (2.1.0)
#6 12.41   - Installing werkzeug (3.0.1)
#6 14.53   - Installing flask (3.0.1)
#6 14.53   - Installing gunicorn (21.2.0)
#6 14.54   - Installing pre-commit (3.6.0)
#6 14.54   - Installing pydantic (2.5.3)
#6 14.54   - Installing pyjwt (2.8.0)
#6 14.55   - Installing pyright (1.1.348)
#6 14.55   - Installing pytest (8.0.0)
#6 14.56   - Installing requests (2.31.0)
#6 14.56   - Installing types-flask (1.1.6)
#6 15.35 
#6 15.35 Installing the current project: lockbox-proxy (0.1.3)
#6 DONE 15.9s

#7 [4/5] RUN cd /repo && pytest --collect-only -q
#7 1.008 
#7 1.008 ==================================== ERRORS ====================================
#7 1.008 __________________ ERROR collecting tests/test_everything.py ___________________
#7 1.008 ImportError while importing test module '/repo/tests/test_everything.py'.
#7 1.008 Hint: make sure your test modules/packages have valid Python names.
#7 1.008 Traceback:
#7 1.008 /usr/local/lib/python3.10/importlib/__init__.py:126: in import_module
#7 1.008     return _bootstrap._gcd_import(name[level:], package, level)
#7 1.008 tests/test_everything.py:9: in <module>
#7 1.008     from lockbox.config import (
#7 1.008 lockbox/config.py:5: in <module>
#7 1.008     from pydantic import BaseModel
#7 1.008 E   ModuleNotFoundError: No module named 'pydantic'
#7 1.008 =========================== short test summary info ============================
#7 1.008 ERROR tests/test_everything.py
#7 1.008 !!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
#7 1.008 no tests collected, 1 error in 0.18s
#7 ERROR: process "/bin/sh -c cd /repo && pytest --collect-only -q" did not complete successfully: exit code: 2
------
 > [4/5] RUN cd /repo && pytest --collect-only -q:
1.008     return _bootstrap._gcd_import(name[level:], package, level)
1.008 tests/test_everything.py:9: in <module>
1.008     from lockbox.config import (
1.008 lockbox/config.py:5: in <module>
1.008     from pydantic import BaseModel
1.008 E   ModuleNotFoundError: No module named 'pydantic'
1.008 =========================== short test summary info ============================
1.008 ERROR tests/test_everything.py
1.008 !!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1.008 no tests collected, 1 error in 0.18s
------
Dockerfile:20
--------------------
  18 |         cd /repo && git checkout 58430d96d20afaa52f67e72cddd80ef56b79e7f8 && \
  19 |         cd /repo && poetry install
  20 | >>> RUN cd /repo && pytest --collect-only -q
--------------------
ERROR: failed to solve: process "/bin/sh -c cd /repo && pytest --collect-only -q" did not complete successfully: exit code: 2
