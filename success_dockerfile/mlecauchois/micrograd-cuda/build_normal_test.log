#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 2.23kB done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/python:3.10
#2 DONE 0.0s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [internal] load build context
#4 transferring context: 31.24kB done
#4 DONE 0.0s

#5 [ 1/12] FROM docker.io/library/python:3.10
#5 CACHED

#6 [ 2/12] COPY search_patch /search_patch
#6 DONE 0.0s

#7 [ 3/12] COPY code_edit.py /code_edit.py
#7 DONE 0.0s

#8 [ 4/12] RUN mkdir -p ~/.pip && touch ~/.pip/pip.conf &&     echo "[global]" >> ~/.pip/pip.conf && echo "index-url=http://simple/" >> ~/.pip/pip.conf && echo "[install]" >> ~/.pip/pip.conf && echo "trusted-host=pypi..org" >> ~/.pip/pip.conf &&     apt-get update && apt-get install -y curl &&     curl -sSL https://install.python-poetry.org | python -
#8 0.917 Get:1 http://deb.debian.org/debian bookworm InRelease [151 kB]
#8 1.710 Get:2 http://deb.debian.org/debian bookworm-updates InRelease [55.4 kB]
#8 2.071 Get:3 http://deb.debian.org/debian-security bookworm-security InRelease [48.0 kB]
#8 2.432 Get:4 http://deb.debian.org/debian bookworm/main amd64 Packages [8789 kB]
#8 3.906 Get:5 http://deb.debian.org/debian bookworm-updates/main amd64 Packages [8856 B]
#8 4.261 Get:6 http://deb.debian.org/debian-security bookworm-security/main amd64 Packages [240 kB]
#8 5.071 Fetched 9292 kB in 5s (1962 kB/s)
#8 5.071 Reading package lists...
#8 5.984 Reading package lists...
#8 6.724 Building dependency tree...
#8 6.939 Reading state information...
#8 7.281 curl is already the newest version (7.88.1-10+deb12u8).
#8 7.281 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#8 27.41 Retrieving Poetry metadata
#8 27.41 
#8 27.41 # Welcome to Poetry!
#8 27.41 
#8 27.41 This will download and install the latest version of Poetry,
#8 27.41 a dependency and package manager for Python.
#8 27.41 
#8 27.41 It will add the `poetry` command to Poetry's bin directory, located at:
#8 27.41 
#8 27.41 /root/.local/bin
#8 27.41 
#8 27.41 You can uninstall at any time by executing this script with the --uninstall option,
#8 27.41 and these changes will be reverted.
#8 27.41 
#8 27.41 Installing Poetry (2.0.0)
#8 27.41 Installing Poetry (2.0.0): Creating environment
#8 27.41 Installing Poetry (2.0.0): Installing Poetry
#8 27.41 Installing Poetry (2.0.0): Creating script
#8 27.41 Installing Poetry (2.0.0): Done
#8 27.41 
#8 27.41 Poetry (2.0.0) is installed now. Great!
#8 27.41 
#8 27.41 To get started you need Poetry's bin directory (/root/.local/bin) in your `PATH`
#8 27.41 environment variable.
#8 27.41 
#8 27.41 Add `export PATH="/root/.local/bin:$PATH"` to your shell configuration file.
#8 27.41 
#8 27.41 Alternatively, you can call Poetry explicitly with `/root/.local/bin/poetry`.
#8 27.41 
#8 27.41 You can test that everything is set up by executing:
#8 27.41 
#8 27.41 `poetry --version`
#8 27.41 
#8 DONE 27.7s

#9 [ 5/12] RUN pip install pytest pytest-xdist &&     pip install pipdeptree &&     git clone https://github.com/mlecauchois/micrograd-cuda.git &&     mkdir /repo &&     git config --global --add safe.directory /repo &&     cp -r /micrograd-cuda/. /repo && rm -rf /micrograd-cuda/ &&     rm -rf /micrograd-cuda &&     cd /repo && git checkout ab1ca09e61c9c311fab96cbfaf52c15769e9c36f &&     pip install pytest==8.3.4
#9 1.944 Looking in indexes: http://simple/
#9 2.102 Collecting pytest
#9 2.120   Downloading http://packages/pytest/pytest-8.3.4-py3-none-any.whl (343 kB)
#9 2.145      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 343.1/343.1 kB 17.4 MB/s eta 0:00:00
#9 2.219 Collecting pytest-xdist
#9 2.237   Downloading http://packages/pytest-xdist/pytest_xdist-3.6.1-py3-none-any.whl (46 kB)
#9 2.249      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 46.1/46.1 kB 4.7 MB/s eta 0:00:00
#9 2.312 Collecting pluggy<2,>=1.5
#9 2.345   Downloading http://packages/pluggy/pluggy-1.5.0-py3-none-any.whl (20 kB)
#9 2.378 Collecting iniconfig
#9 2.396   Downloading http://packages/iniconfig/iniconfig-2.0.0-py3-none-any.whl (5.9 kB)
#9 2.459 Collecting packaging
#9 2.478   Downloading http://packages/packaging/packaging-24.2-py3-none-any.whl (65 kB)
#9 2.490      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 65.5/65.5 kB 6.4 MB/s eta 0:00:00
#9 2.556 Collecting tomli>=1
#9 2.575   Downloading http://packages/tomli/tomli-2.2.1-py3-none-any.whl (14 kB)
#9 2.621 Collecting exceptiongroup>=1.0.0rc8
#9 2.639   Downloading http://packages/exceptiongroup/exceptiongroup-1.2.2-py3-none-any.whl (16 kB)
#9 2.692 Collecting execnet>=2.1
#9 2.712   Downloading http://packages/execnet/execnet-2.1.1-py3-none-any.whl (40 kB)
#9 2.720      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 40.6/40.6 kB 8.0 MB/s eta 0:00:00
#9 2.857 Installing collected packages: tomli, pluggy, packaging, iniconfig, execnet, exceptiongroup, pytest, pytest-xdist
#9 3.360 Successfully installed exceptiongroup-1.2.2 execnet-2.1.1 iniconfig-2.0.0 packaging-24.2 pluggy-1.5.0 pytest-8.3.4 pytest-xdist-3.6.1 tomli-2.2.1
#9 3.361 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
#9 3.481 
#9 3.481 [notice] A new release of pip is available: 23.0.1 -> 24.3.1
#9 3.481 [notice] To update, run: pip install --upgrade pip
#9 4.139 Looking in indexes: http://simple/
#9 4.219 Collecting pipdeptree
#9 4.247   Downloading http://packages/pipdeptree/pipdeptree-2.24.0-py3-none-any.whl (32 kB)
#9 4.272 Requirement already satisfied: packaging>=24.1 in /usr/local/lib/python3.10/site-packages (from pipdeptree) (24.2)
#9 4.394 Collecting pip>=24.2
#9 4.404   Using cached http://packages/pip/pip-24.3.1-py3-none-any.whl (1.8 MB)
#9 4.532 Installing collected packages: pip, pipdeptree
#9 4.533   Attempting uninstall: pip
#9 4.534     Found existing installation: pip 23.0.1
#9 4.694     Uninstalling pip-23.0.1:
#9 4.921       Successfully uninstalled pip-23.0.1
#9 6.335 Successfully installed pip-24.3.1 pipdeptree-2.24.0
#9 6.336 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
#9 6.539 Cloning into 'micrograd-cuda'...
#9 8.426 Note: switching to 'ab1ca09e61c9c311fab96cbfaf52c15769e9c36f'.
#9 8.426 
#9 8.426 You are in 'detached HEAD' state. You can look around, make experimental
#9 8.426 changes and commit them, and you can discard any commits you make in this
#9 8.426 state without impacting any branches by switching back to a branch.
#9 8.426 
#9 8.426 If you want to create a new branch to retain commits you create, you may
#9 8.426 do so (now or later) by using -c with the switch command. Example:
#9 8.426 
#9 8.426   git switch -c <new-branch-name>
#9 8.426 
#9 8.426 Or undo this operation with:
#9 8.426 
#9 8.426   git switch -
#9 8.426 
#9 8.426 Turn off this advice by setting config variable advice.detachedHead to false
#9 8.426 
#9 8.426 HEAD is now at ab1ca09 timeline
#9 8.974 Looking in indexes: http://simple/
#9 8.975 Requirement already satisfied: pytest==8.3.4 in /usr/local/lib/python3.10/site-packages (8.3.4)
#9 8.982 Requirement already satisfied: exceptiongroup>=1.0.0rc8 in /usr/local/lib/python3.10/site-packages (from pytest==8.3.4) (1.2.2)
#9 8.982 Requirement already satisfied: iniconfig in /usr/local/lib/python3.10/site-packages (from pytest==8.3.4) (2.0.0)
#9 8.983 Requirement already satisfied: packaging in /usr/local/lib/python3.10/site-packages (from pytest==8.3.4) (24.2)
#9 8.984 Requirement already satisfied: pluggy<2,>=1.5 in /usr/local/lib/python3.10/site-packages (from pytest==8.3.4) (1.5.0)
#9 8.985 Requirement already satisfied: tomli>=1 in /usr/local/lib/python3.10/site-packages (from pytest==8.3.4) (2.2.1)
#9 9.013 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
#9 DONE 9.3s

#10 [ 6/12] RUN apt-get update -qq &&     apt-get update -qq &&     echo '#!/bin/bash' > /repo/compile_cuda.sh &&     echo 'gcc -shared -o /repo/micrograd_cuda/liboperations.so /repo/micrograd_cuda/operations.cu' >> /repo/compile_cuda.sh &&     chmod +x /repo/compile_cuda.sh &&     apt-get update -qq &&     apt-get update -qq &&     pip install numpy==2.2.0 &&     apt-get update -qq &&     apt-cache search cuda &&     python /code_edit.py -t "/search_patch/0.patch" &&     python /code_edit.py -t "/search_patch/1.patch" &&     python /code_edit.py -t "/search_patch/2.patch"
#10 6.772 Looking in indexes: http://simple/
#10 7.207 Collecting numpy==2.2.0
#10 7.243   Downloading http://packages/numpy/numpy-2.2.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (16.4 MB)
#10 7.387      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 16.4/16.4 MB 128.1 MB/s eta 0:00:00
#10 7.528 Installing collected packages: numpy
#10 10.68 Successfully installed numpy-2.2.0
#10 10.68 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
#10 13.47 libcub-dev - reusable software components for the CUDA programming model
#10 13.47 libspfft-dev - Sparse 3D FFT library with MPI, OpenMP, CUDA / ROCm support (development files)
#10 13.47 libspfft1 - Sparse 3D FFT library with MPI, OpenMP, CUDA / ROCm support
#10 13.47 libvkfft-dev - Vulkan/CUDA/HIP/OpenCL Fast Fourier Transform library
#10 13.54 * Succeed Patch:
#10 13.54 * Fail Patch:
#10 13.54 #SEARCH/REPLACE block failed to match!
#10 13.54 
#10 13.54 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/micrograd_cuda/operations.py
#10 13.54 import ctypes
#10 13.54 lib = ctypes.CDLL('./liboperations.so')
#10 13.54 
#10 13.54 
#10 13.54 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#10 13.54 
#10 13.54 TIPS:
#10 13.54 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#10 13.54 * Make sure your patch has right indentation.
#10 13.54 * Make sure your file path is correct.
#10 13.61 * Succeed Patch:
#10 13.61 * Fail Patch:
#10 13.61 #SEARCH/REPLACE block failed to match!
#10 13.61 
#10 13.61 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in /repo/micrograd_cuda/operations.py
#10 13.61 import ctypes
#10 13.61 # Load the shared library
#10 13.61 lib = ctypes.CDLL('./liboperations.so')
#10 13.61 
#10 13.61 
#10 13.61 Did you mean to match some of these actual lines from /repo/micrograd_cuda/operations.py?
#10 13.61 
#10 13.61 ```diff
#10 13.61 import ctypes
#10 13.61 import math
#10 13.61 
#10 13.61 # Load the shared library
#10 13.61 lib = ctypes.CDLL('./liboperations.so')
#10 13.61 lib.matmul_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int, ctypes.c_int, ctypes.c_int]
#10 13.61 lib.allocate_on_gpu.restype = ctypes.c_void_p
#10 13.61 lib.tanh_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int]
#10 13.61 lib.tanh_prime_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int]
#10 13.61 lib.transpose_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int, ctypes.c_int]
#10 13.61 ```
#10 13.61 
#10 13.61 The SEARCH section must exactly match an existing block of lines including all white space, comments, indentation, docstrings, etc
#10 13.61 
#10 13.61 TIPS:
#10 13.61 * All patches must be based on the original code. Make sure it and try to provide more sufficient and unique old line(s) from snippet to facilitate matching.
#10 13.61 * Make sure your patch has right indentation.
#10 13.61 * Make sure your file path is correct.
#10 13.68 * Succeed Patch:
#10 13.68 --- arepomicrograd_cudaoperations.py
#10 13.68 +++ brepomicrograd_cudaoperations.py
#10 13.68 @@ -1,8 +1,11 @@
#10 13.68 -import ctypes
#10 13.68 -import math
#10 13.68 -
#10 13.68 -# Load the shared library
#10 13.68 -lib = ctypes.CDLL('.liboperations.so')
#10 13.68 +import numpy as np
#10 13.68 +lib = None
#10 13.68 +
#10 13.68 +class MockOperations:
#10 13.68 +    ...
#10 13.68 +    # Dummy Implementation to replace CUDA ops for np in CPU
#10 13.68 +    
#10 13.68 +Operations = MockOperations if lib is None else RealOperations
#10 13.68  lib.matmul_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int, ctypes.c_int, ctypes.c_int]
#10 13.68  lib.allocate_on_gpu.restype = ctypes.c_void_p
#10 13.68  lib.tanh_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int]
#10 13.68 
#10 13.68 
#10 DONE 13.9s

#11 [ 7/12] RUN python /code_edit.py -t "/search_patch/3.patch"
#11 0.565 * Succeed Patch:
#11 0.565 --- arepomicrograd_cudaoperations.py
#11 0.565 +++ brepomicrograd_cudaoperations.py
#11 0.565 @@ -1,4 +1,5 @@
#11 0.565  import numpy as np
#11 0.565 +import ctypes
#11 0.565  lib = None
#11 0.565  
#11 0.565  class MockOperations:
#11 0.565 
#11 0.565 
#11 DONE 0.7s

#12 [ 8/12] RUN python /code_edit.py -t "/search_patch/4.patch"
#12 0.513 * Succeed Patch:
#12 0.513 --- arepomicrograd_cudaoperations.py
#12 0.513 +++ brepomicrograd_cudaoperations.py
#12 0.513 @@ -7,7 +7,8 @@
#12 0.513      # Dummy Implementation to replace CUDA ops for np in CPU
#12 0.513      
#12 0.513  Operations = MockOperations if lib is None else RealOperations
#12 0.513 -lib.matmul_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int, ctypes.c_int, ctypes.c_int]
#12 0.513 +if lib is not None:
#12 0.513 +    lib.matmul_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int, ctypes.c_int, ctypes.c_int]
#12 0.513  lib.allocate_on_gpu.restype = ctypes.c_void_p
#12 0.513  lib.tanh_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int]
#12 0.513  lib.tanh_prime_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int]
#12 0.513 
#12 0.513 
#12 DONE 0.7s

#13 [ 9/12] RUN python /code_edit.py -t "/search_patch/5.patch"
#13 0.492 * Succeed Patch:
#13 0.492 --- arepomicrograd_cudaoperations.py
#13 0.492 +++ brepomicrograd_cudaoperations.py
#13 0.492 @@ -9,7 +9,8 @@
#13 0.492  Operations = MockOperations if lib is None else RealOperations
#13 0.492  if lib is not None:
#13 0.492      lib.matmul_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int, ctypes.c_int, ctypes.c_int]
#13 0.492 -lib.allocate_on_gpu.restype = ctypes.c_void_p
#13 0.492 +if lib is not None:
#13 0.492 +    lib.allocate_on_gpu.restype = ctypes.c_void_p
#13 0.492  lib.tanh_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int]
#13 0.492  lib.tanh_prime_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int]
#13 0.492  lib.transpose_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int, ctypes.c_int]
#13 0.492 
#13 0.492 
#13 DONE 0.6s

#14 [10/12] RUN python /code_edit.py -t "/search_patch/6.patch"
#14 0.547 * Succeed Patch:
#14 0.547 --- arepomicrograd_cudaoperations.py
#14 0.547 +++ brepomicrograd_cudaoperations.py
#14 0.547 @@ -11,22 +11,23 @@
#14 0.547      lib.matmul_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int, ctypes.c_int, ctypes.c_int]
#14 0.547  if lib is not None:
#14 0.547      lib.allocate_on_gpu.restype = ctypes.c_void_p
#14 0.547 -lib.tanh_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int]
#14 0.547 -lib.tanh_prime_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int]
#14 0.547 -lib.transpose_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int, ctypes.c_int]
#14 0.547 -lib.add_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int, ctypes.c_int, ctypes.c_int, ctypes.c_int]
#14 0.547 -lib.scalar_mul_on_gpu.argtypes = [ctypes.c_float, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int]
#14 0.547 -lib.element_wise_mul_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int]
#14 0.547 -lib.power_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_float, ctypes.c_void_p, ctypes.c_int]
#14 0.547 -lib.power_prime_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_float, ctypes.c_void_p, ctypes.c_int]
#14 0.547 -lib.matrix_concat_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int, ctypes.c_int, ctypes.c_int, ctypes.c_int]
#14 0.547 -lib.summation_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int]
#14 0.547 -lib.add_scalar_on_gpu.argtypes = [ctypes.c_float, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int]
#14 0.547 -lib.move_to_gpu.argtypes = [ctypes.POINTER(ctypes.c_float), ctypes.c_int]
#14 0.547 -lib.move_to_gpu.restype = ctypes.POINTER(ctypes.c_float)
#14 0.547 -lib.move_to_cpu.argtypes = [ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float), ctypes.c_int]
#14 0.547 -lib.indexing_2d_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int, ctypes.c_int, ctypes.c_int, ctypes.c_int, ctypes.c_int, ctypes.c_int]
#14 0.547 -lib.copy_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int]
#14 0.547 +if lib is not None:
#14 0.547 +    lib.tanh_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int]
#14 0.547 +    lib.tanh_prime_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int]
#14 0.547 +    lib.transpose_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int, ctypes.c_int]
#14 0.547 +    lib.add_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int, ctypes.c_int, ctypes.c_int, ctypes.c_int]
#14 0.547 +    lib.scalar_mul_on_gpu.argtypes = [ctypes.c_float, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int]
#14 0.547 +    lib.element_wise_mul_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int]
#14 0.547 +    lib.power_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_float, ctypes.c_void_p, ctypes.c_int]
#14 0.547 +    lib.power_prime_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_float, ctypes.c_void_p, ctypes.c_int]
#14 0.547 +    lib.matrix_concat_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int, ctypes.c.int, ctypes.c_int, ctypes.c.int]
#14 0.547 +    lib.summation_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c.int]
#14 0.547 +    lib.add_scalar_on_gpu.argtypes = [ctypes.c.float, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_int]
#14 0.547 +    lib.move_to_gpu.argtypes = [ctypes.POINTER(ctypes.c.float), ctypes.c_int]
#14 0.547 +    lib.move_to_gpu.restype = ctypes.POINTER(ctypes.c.float)
#14 0.547 +    lib.move_to_cpu.argtypes = [ctypes.POINTER(ctypes.c.float), ctypes.POINTER(ctypes.c.float), ctypes.c.int]
#14 0.547 +    lib.indexing_2d_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c.int, ctypes.c.int, ctypes.c.int, ctypes.c.int, ctypes.c.int, ctypes.c.int]
#14 0.547 +    lib.copy_on_gpu.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c.int]
#14 0.547  
#14 0.547  
#14 0.547  def calculate_list_shape(data):
#14 0.547 
#14 0.547 
#14 DONE 0.7s

#15 [11/12] RUN cd /repo && pytest --collect-only -q
#15 0.940 tests/test_mlp.py::test_mlp_inference
#15 0.940 tests/test_mlp.py::test_mlp_inference_large
#15 0.940 tests/test_mlp.py::test_backward
#15 0.940 tests/test_mlp.py::test_mlp_train_batch
#15 0.940 tests/test_mlp.py::test_mlp_train_batch_large
#15 0.940 tests/test_operations.py::test_matrix_add
#15 0.940 tests/test_operations.py::test_matrix_add_broadcast
#15 0.940 tests/test_operations.py::test_indexing
#15 0.940 tests/test_operations.py::test_zeros_matrix_like
#15 0.940 tests/test_operations.py::test_ones_matrix_like
#15 0.940 tests/test_operations.py::test_power_prime
#15 0.940 tests/test_operations.py::test_tanh_prime
#15 0.940 tests/test_operations.py::test_matrix_concat
#15 0.940 tests/test_operations.py::test_summation
#15 0.940 tests/test_operations.py::test_matrix_transpose
#15 0.940 tests/test_operations.py::test_power
#15 0.940 tests/test_operations.py::test_element_wise_mul
#15 0.940 tests/test_operations.py::test_tanh
#15 0.940 tests/test_operations.py::test_matrix_mul
#15 0.940 
#15 0.940 19 tests collected in 0.16s
#15 DONE 1.1s

#16 exporting to image
#16 exporting layers
#16 exporting layers 1.1s done
#16 writing image sha256:640c2e00c84d0b4906ab95cac198d1a266b619abda1f256235400934bac3e9cf done
#16 naming to docker.io/library/tmp:tmp done
#16 DONE 1.1s
