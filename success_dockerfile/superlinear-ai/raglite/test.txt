[1m============================= test session starts ==============================[0m
platform linux -- Python 3.10.15, pytest-8.3.2, pluggy-1.5.0 -- /root/.cache/pypoetry/virtualenvs/raglite-gW_DSdP6-py3.10/bin/python
cachedir: .pytest_cache
rootdir: /repo
configfile: pyproject.toml
testpaths: src, tests
plugins: typeguard-4.3.0, mock-3.14.0, anyio-4.4.0
[1mcollecting ... [0mcollected 63 items
run-last-failure: no previously failed tests, not deselecting items.

<Dir repo>
  <Package tests>
    <Module test_embed.py>
      Test RAGLite's embedding functionality.
      <Function test_embed[bge_m3]>
        Test embedding a document.
    <Module test_rag.py>
      Test RAGLite's RAG functionality.
      <Function test_rag[sqlite-bge_m3]>
        Test Retrieval-Augmented Generation.
    <Module test_rerank.py>
      Test RAGLite's reranking functionality.
      <Function test_reranker[sqlite-bge_m3-no_reranker]>
        Test inserting a document, updating the indexes, and searching for a query.
      <Function test_reranker[sqlite-bge_m3-flashrank_english]>
        Test inserting a document, updating the indexes, and searching for a query.
      <Function test_reranker[sqlite-bge_m3-flashrank_multilingual]>
        Test inserting a document, updating the indexes, and searching for a query.
    <Module test_search.py>
      Test RAGLite's search functionality.
      <Function test_search[sqlite-bge_m3-keyword_search]>
        Test searching for a query.
      <Function test_search[sqlite-bge_m3-vector_search]>
        Test searching for a query.
      <Function test_search[sqlite-bge_m3-hybrid_search]>
        Test searching for a query.
      <Function test_search_no_results[sqlite-bge_m3-keyword_search]>
        Test searching for a query with no keyword search results.
      <Function test_search_no_results[sqlite-bge_m3-vector_search]>
        Test searching for a query with no keyword search results.
      <Function test_search_no_results[sqlite-bge_m3-hybrid_search]>
        Test searching for a query with no keyword search results.
    <Module test_rag.py>
      Test RAGLite's RAG functionality.
      <Function test_rag[sqlite-openai_text_embedding_3_small]>
        Test Retrieval-Augmented Generation.
    <Module test_rerank.py>
      Test RAGLite's reranking functionality.
      <Function test_reranker[sqlite-openai_text_embedding_3_small-no_reranker]>
        Test inserting a document, updating the indexes, and searching for a query.
      <Function test_reranker[sqlite-openai_text_embedding_3_small-flashrank_english]>
        Test inserting a document, updating the indexes, and searching for a query.
      <Function test_reranker[sqlite-openai_text_embedding_3_small-flashrank_multilingual]>
        Test inserting a document, updating the indexes, and searching for a query.
    <Module test_search.py>
      Test RAGLite's search functionality.
      <Function test_search[sqlite-openai_text_embedding_3_small-keyword_search]>
        Test searching for a query.
      <Function test_search[sqlite-openai_text_embedding_3_small-vector_search]>
        Test searching for a query.
      <Function test_search[sqlite-openai_text_embedding_3_small-hybrid_search]>
        Test searching for a query.
      <Function test_search_no_results[sqlite-openai_text_embedding_3_small-keyword_search]>
        Test searching for a query with no keyword search results.
      <Function test_search_no_results[sqlite-openai_text_embedding_3_small-vector_search]>
        Test searching for a query with no keyword search results.
      <Function test_search_no_results[sqlite-openai_text_embedding_3_small-hybrid_search]>
        Test searching for a query with no keyword search results.
    <Module test_embed.py>
      Test RAGLite's embedding functionality.
      <Function test_embed[openai_text_embedding_3_small]>
        Test embedding a document.
    <Module test_rag.py>
      Test RAGLite's RAG functionality.
      <Function test_rag[postgres-openai_text_embedding_3_small]>
        Test Retrieval-Augmented Generation.
    <Module test_rerank.py>
      Test RAGLite's reranking functionality.
      <Function test_reranker[postgres-openai_text_embedding_3_small-no_reranker]>
        Test inserting a document, updating the indexes, and searching for a query.
      <Function test_reranker[postgres-openai_text_embedding_3_small-flashrank_english]>
        Test inserting a document, updating the indexes, and searching for a query.
      <Function test_reranker[postgres-openai_text_embedding_3_small-flashrank_multilingual]>
        Test inserting a document, updating the indexes, and searching for a query.
    <Module test_search.py>
      Test RAGLite's search functionality.
      <Function test_search[postgres-openai_text_embedding_3_small-keyword_search]>
        Test searching for a query.
      <Function test_search[postgres-openai_text_embedding_3_small-vector_search]>
        Test searching for a query.
      <Function test_search[postgres-openai_text_embedding_3_small-hybrid_search]>
        Test searching for a query.
      <Function test_search_no_results[postgres-openai_text_embedding_3_small-keyword_search]>
        Test searching for a query with no keyword search results.
      <Function test_search_no_results[postgres-openai_text_embedding_3_small-vector_search]>
        Test searching for a query with no keyword search results.
      <Function test_search_no_results[postgres-openai_text_embedding_3_small-hybrid_search]>
        Test searching for a query with no keyword search results.
    <Module test_rag.py>
      Test RAGLite's RAG functionality.
      <Function test_rag[postgres-bge_m3]>
        Test Retrieval-Augmented Generation.
    <Module test_rerank.py>
      Test RAGLite's reranking functionality.
      <Function test_reranker[postgres-bge_m3-no_reranker]>
        Test inserting a document, updating the indexes, and searching for a query.
      <Function test_reranker[postgres-bge_m3-flashrank_english]>
        Test inserting a document, updating the indexes, and searching for a query.
      <Function test_reranker[postgres-bge_m3-flashrank_multilingual]>
        Test inserting a document, updating the indexes, and searching for a query.
    <Module test_search.py>
      Test RAGLite's search functionality.
      <Function test_search[postgres-bge_m3-keyword_search]>
        Test searching for a query.
      <Function test_search[postgres-bge_m3-vector_search]>
        Test searching for a query.
      <Function test_search[postgres-bge_m3-hybrid_search]>
        Test searching for a query.
      <Function test_search_no_results[postgres-bge_m3-keyword_search]>
        Test searching for a query with no keyword search results.
      <Function test_search_no_results[postgres-bge_m3-vector_search]>
        Test searching for a query with no keyword search results.
      <Function test_search_no_results[postgres-bge_m3-hybrid_search]>
        Test searching for a query with no keyword search results.
    <Module test_extract.py>
      Test RAGLite's structured output extraction.
      <Function test_extract[llama_cpp_python-strict=False]>
        Test extracting structured data.
      <Function test_extract[llama_cpp_python-strict=True]>
        Test extracting structured data.
      <Function test_extract[openai-strict=False]>
        Test extracting structured data.
      <Function test_extract[openai-strict=True]>
        Test extracting structured data.
    <Module test_import.py>
      Test RAGLite.
      <Function test_import>
        Test that the package can be imported.
    <Module test_markdown.py>
      Test Markdown conversion.
      <Function test_pdf_with_missing_font_sizes>
        Test conversion of a PDF with missing font sizes.
    <Module test_split_chunks.py>
      Test RAGLite's chunk splitting functionality.
      <Function test_edge_cases[one_chunk:no_sentences]>
        Test chunk splitting edge cases.
      <Function test_edge_cases[one_chunk:one_sentence]>
        Test chunk splitting edge cases.
      <Function test_edge_cases[one_chunk:two_sentences]>
        Test chunk splitting edge cases.
      <Function test_edge_cases[one_chunk:three_sentences]>
        Test chunk splitting edge cases.
      <Function test_edge_cases[one_chunk:many_sentences]>
        Test chunk splitting edge cases.
      <Function test_edge_cases[n_chunks:two_sentences_a]>
        Test chunk splitting edge cases.
      <Function test_edge_cases[n_chunks:two_sentences_b]>
        Test chunk splitting edge cases.
      <Function test_edge_cases[n_chunks:three_sentences_a]>
        Test chunk splitting edge cases.
      <Function test_edge_cases[n_chunks:three_sentences_b]>
        Test chunk splitting edge cases.
      <Function test_edge_cases[n_chunks:three_sentences_c]>
        Test chunk splitting edge cases.
      <Function test_edge_cases[n_chunks:many_sentences_a]>
        Test chunk splitting edge cases.
      <Function test_edge_cases[n_chunks:many_sentences_b]>
        Test chunk splitting edge cases.
      <Function test_long_sentence[first]>
        Test chunking on sentences that are too long.
      <Function test_long_sentence[middle]>
        Test chunking on sentences that are too long.
      <Function test_long_sentence[last]>
        Test chunking on sentences that are too long.

----------------- generated xml file: /repo/reports/pytest.xml -----------------
[32m========================= [32m63 tests collected[0m[32m in 1.61s[0m[32m ==========================[0m