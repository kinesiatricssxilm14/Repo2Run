#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.51kB done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/python:3.11
#2 DONE 0.0s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [internal] load build context
#4 transferring context: 24.91kB done
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/python:3.11
#5 CACHED

#6 [2/7] COPY search_patch /search_patch
#6 DONE 0.1s

#7 [3/7] COPY code_edit.py /code_edit.py
#7 DONE 0.0s

#8 [4/7] RUN mkdir -p ~/.pip && touch ~/.pip/pip.conf &&     echo "[global]" >> ~/.pip/pip.conf && echo "index-url=http://simple/" >> ~/.pip/pip.conf && echo "[install]" >> ~/.pip/pip.conf && echo "trusted-host=pypi..org" >> ~/.pip/pip.conf &&     apt-get update && apt-get install -y curl &&     curl -sSL https://install.python-poetry.org | python -
#8 0.579 Get:1 http://deb.debian.org/debian bookworm InRelease [151 kB]
#8 0.927 Get:2 http://deb.debian.org/debian bookworm-updates InRelease [55.4 kB]
#8 1.026 Get:3 http://deb.debian.org/debian-security bookworm-security InRelease [48.0 kB]
#8 1.123 Get:4 http://deb.debian.org/debian bookworm/main amd64 Packages [8792 kB]
#8 1.677 Get:5 http://deb.debian.org/debian bookworm-updates/main amd64 Packages [13.5 kB]
#8 1.829 Get:6 http://deb.debian.org/debian-security bookworm-security/main amd64 Packages [243 kB]
#8 3.091 Fetched 9303 kB in 3s (3470 kB/s)
#8 3.091 Reading package lists...
#8 3.958 Reading package lists...
#8 4.803 Building dependency tree...
#8 5.057 Reading state information...
#8 5.443 curl is already the newest version (7.88.1-10+deb12u8).
#8 5.443 0 upgraded, 0 newly installed, 0 to remove and 33 not upgraded.
#8 25.54 Retrieving Poetry metadata
#8 25.54 
#8 25.54 # Welcome to Poetry!
#8 25.54 
#8 25.54 This will download and install the latest version of Poetry,
#8 25.54 a dependency and package manager for Python.
#8 25.54 
#8 25.54 It will add the `poetry` command to Poetry's bin directory, located at:
#8 25.54 
#8 25.54 /root/.local/bin
#8 25.54 
#8 25.54 You can uninstall at any time by executing this script with the --uninstall option,
#8 25.54 and these changes will be reverted.
#8 25.54 
#8 25.54 Installing Poetry (2.0.1)
#8 25.54 Installing Poetry (2.0.1): Creating environment
#8 25.54 Installing Poetry (2.0.1): Installing Poetry
#8 25.54 Installing Poetry (2.0.1): Creating script
#8 25.54 Installing Poetry (2.0.1): Done
#8 25.54 
#8 25.54 Poetry (2.0.1) is installed now. Great!
#8 25.54 
#8 25.54 To get started you need Poetry's bin directory (/root/.local/bin) in your `PATH`
#8 25.54 environment variable.
#8 25.54 
#8 25.54 Add `export PATH="/root/.local/bin:$PATH"` to your shell configuration file.
#8 25.54 
#8 25.54 Alternatively, you can call Poetry explicitly with `/root/.local/bin/poetry`.
#8 25.54 
#8 25.54 You can test that everything is set up by executing:
#8 25.54 
#8 25.54 `poetry --version`
#8 25.54 
#8 DONE 26.3s

#9 [5/7] RUN pip install pytest pytest-xdist &&     pip install pipdeptree &&     git clone https://github.com/igorbenav/SQLModel-boilerplate.git &&     mkdir /repo &&     git config --global --add safe.directory /repo &&     cp -r /SQLModel-boilerplate/. /repo && rm -rf /SQLModel-boilerplate/ &&     rm -rf /SQLModel-boilerplate &&     cd /repo && git checkout 2ead0414113a4f5b2b28183cef427c4e5b864284 &&     cd /repo && poetry install &&     touch /repo/.env &&     ln -s /repo/.env /repo/src/app/.env &&     python /code_edit.py -t "/search_patch/0.patch" &&     python /code_edit.py -t "/search_patch/1.patch" &&     python /code_edit.py -t "/search_patch/2.patch" &&     python /code_edit.py -t "/search_patch/3.patch" &&     cd /repo && poetry add aiosqlite
#9 2.049 Looking in indexes: http://simple/
#9 2.157 Collecting pytest
#9 2.172   Downloading http://packages/pytest/pytest-8.3.4-py3-none-any.whl (343 kB)
#9 2.191      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 343.1/343.1 kB 24.1 MB/s eta 0:00:00
#9 2.248 Collecting pytest-xdist
#9 2.263   Downloading http://packages/pytest-xdist/pytest_xdist-3.6.1-py3-none-any.whl (46 kB)
#9 2.273      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 46.1/46.1 kB 4.9 MB/s eta 0:00:00
#9 2.309 Collecting iniconfig (from pytest)
#9 2.324   Downloading http://packages/iniconfig/iniconfig-2.0.0-py3-none-any.whl (5.9 kB)
#9 2.371 Collecting packaging (from pytest)
#9 2.374   Using cached http://packages/packaging/packaging-24.2-py3-none-any.whl (65 kB)
#9 2.406 Collecting pluggy<2,>=1.5 (from pytest)
#9 2.422   Downloading http://packages/pluggy/pluggy-1.5.0-py3-none-any.whl (20 kB)
#9 2.466 Collecting execnet>=2.1 (from pytest-xdist)
#9 2.481   Downloading http://packages/execnet/execnet-2.1.1-py3-none-any.whl (40 kB)
#9 2.493      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 40.6/40.6 kB 4.0 MB/s eta 0:00:00
#9 2.597 Installing collected packages: pluggy, packaging, iniconfig, execnet, pytest, pytest-xdist
#9 3.138 Successfully installed execnet-2.1.1 iniconfig-2.0.0 packaging-24.2 pluggy-1.5.0 pytest-8.3.4 pytest-xdist-3.6.1
#9 3.138 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
#9 3.231 
#9 3.231 [notice] A new release of pip is available: 24.0 -> 25.0
#9 3.231 [notice] To update, run: pip install --upgrade pip
#9 3.920 Looking in indexes: http://simple/
#9 3.978 Collecting pipdeptree
#9 3.997   Downloading http://packages/pipdeptree/pipdeptree-2.25.0-py3-none-any.whl (32 kB)
#9 4.021 Requirement already satisfied: packaging>=24.1 in /usr/local/lib/python3.11/site-packages (from pipdeptree) (24.2)
#9 4.098 Collecting pip>=24.2 (from pipdeptree)
#9 4.101   Using cached http://packages/pip/pip-25.0-py3-none-any.whl (1.8 MB)
#9 4.205 Installing collected packages: pip, pipdeptree
#9 4.205   Attempting uninstall: pip
#9 4.209     Found existing installation: pip 24.0
#9 4.269     Uninstalling pip-24.0:
#9 4.621       Successfully uninstalled pip-24.0
#9 5.977 Successfully installed pip-25.0 pipdeptree-2.25.0
#9 5.977 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
#9 6.172 Cloning into 'SQLModel-boilerplate'...
#9 8.005 Note: switching to '2ead0414113a4f5b2b28183cef427c4e5b864284'.
#9 8.005 
#9 8.005 You are in 'detached HEAD' state. You can look around, make experimental
#9 8.005 changes and commit them, and you can discard any commits you make in this
#9 8.005 state without impacting any branches by switching back to a branch.
#9 8.005 
#9 8.005 If you want to create a new branch to retain commits you create, you may
#9 8.005 do so (now or later) by using -c with the switch command. Example:
#9 8.005 
#9 8.005   git switch -c <new-branch-name>
#9 8.005 
#9 8.005 Or undo this operation with:
#9 8.005 
#9 8.005   git switch -
#9 8.005 
#9 8.005 Turn off this advice by setting config variable advice.detachedHead to false
#9 8.005 
#9 8.005 HEAD is now at 2ead041 Merge pull request #5 from Mte90/main
#9 8.729 Creating virtualenv fastapi-boilerplate-gW_DSdP6-py3.11 in /root/.cache/pypoetry/virtualenvs
#9 9.229 Updating dependencies
#9 9.229 Resolving dependencies...
#9 34.66 
#9 34.66 Package operations: 47 installs, 0 updates, 0 removals
#9 34.66 
#9 34.66   - Installing idna (3.10)
#9 34.66   - Installing sniffio (1.3.1)
#9 34.67   - Installing typing-extensions (4.12.2)
#9 35.35   - Installing annotated-types (0.7.0)
#9 35.35   - Installing anyio (4.8.0)
#9 35.35   - Installing greenlet (2.0.2)
#9 35.35   - Installing pydantic-core (2.27.2)
#9 36.44   - Installing certifi (2025.1.31)
#9 36.44   - Installing dnspython (2.7.0)
#9 36.44   - Installing h11 (0.14.0)
#9 36.44   - Installing hiredis (3.1.0)
#9 36.45   - Installing pyasn1 (0.6.1)
#9 36.45   - Installing markupsafe (3.0.2)
#9 36.45   - Installing six (1.17.0)
#9 36.45   - Installing pydantic (2.10.6)
#9 36.46   - Installing starlette (0.36.3)
#9 36.46   - Installing sqlalchemy (2.0.38)
#9 38.32   - Installing async-timeout (5.0.1)
#9 38.32   - Installing click (8.1.8)
#9 38.32   - Installing email-validator (2.2.0)
#9 38.32   - Installing fastapi (0.109.2)
#9 38.33   - Installing httpcore (1.0.7)
#9 38.33   - Installing mako (1.3.9)
#9 38.33   - Installing packaging (24.2)
#9 38.34   - Installing iniconfig (2.0.0)
#9 38.35   - Installing redis (5.2.1)
#9 38.36   - Installing ecdsa (0.19.0)
#9 38.36   - Installing sqlalchemy-utils (0.41.2)
#9 38.37   - Installing python-dotenv (1.0.1)
#9 38.37   - Installing pluggy (1.5.0)
#9 38.38   - Installing rsa (4.9)
#9 39.73   - Installing alembic (1.14.1)
#9 39.73   - Installing arq (0.25.0)
#9 39.73   - Installing asyncpg (0.29.0)
#9 39.74   - Installing fastcrud (0.12.1)
#9 39.74   - Installing gunicorn (22.0.0)
#9 39.76   - Installing bcrypt (4.2.1)
#9 39.77   - Installing httptools (0.6.4)
#9 39.77   - Installing pytest (7.4.4)
#9 39.77   - Installing python-jose (3.3.0)
#9 39.78   - Installing python-multipart (0.0.9)
#9 39.78   - Installing httpx (0.26.0)
#9 39.79   - Installing pydantic-settings (2.7.1)
#9 39.81   - Installing uvicorn (0.27.1)
#9 39.82   - Installing uvloop (0.19.0)
#9 39.83   - Installing uuid (1.30)
#9 39.83   - Installing sqlmodel (0.0.18)
#9 43.03 
#9 43.03 Writing lock file
#9 43.03 
#9 43.03 Installing the current project: fastapi-boilerplate (0.1.0)
#9 43.80 * Succeed Patch:
#9 43.80 The new code snippet is inserted at the beginning of the file /repo/.env
#9 43.80 --- repo.env
#9 43.80 +++ repo.env
#9 43.80 @@ -0,0 +1,11 @@
#9 43.80 +APP_NAME="FastAPI app"
#9 43.80 +    SECRET_KEY="your_secret_key"
#9 43.80 +    SQLITE_URI="./sql_app.db"
#9 43.80 +    SQLITE_SYNC_PREFIX="sqlite:///"
#9 43.80 +    SQLITE_ASYNC_PREFIX="sqlite+aiosqlite:///"
#9 43.80 +    POSTGRES_USER="postgres"
#9 43.80 +    POSTGRES_PASSWORD="postgres"
#9 43.80 +    POSTGRES_SERVER="localhost"
#9 43.80 +    POSTGRES_PORT=5432
#9 43.80 +    POSTGRES_DB="postgres"
#9 43.80 +    DB_ENGINE="sqlite"
#9 43.88 * Succeed Patch:
#9 43.88 --- areposrcappcoreconfig.py
#9 43.88 +++ breposrcappcoreconfig.py
#9 43.88 @@ -6,7 +6,8 @@
#9 43.88  
#9 43.88  current_file_dir = os.path.dirname(os.path.realpath(__file__))
#9 43.88  env_path = os.path.join(current_file_dir, "..", "..", ".env")
#9 43.88 -config = Config(env_path)
#9 43.88 +config = Config(root_path=".")  # Set the config root path manually
#9 43.88 +config = Config(".env")
#9 43.88  
#9 43.88  
#9 43.88  class AppSettings(BaseSettings):
#9 43.88 
#9 43.88 
#9 43.96 * Succeed Patch:
#9 43.96 --- areposrcappcoreconfig.py
#9 43.96 +++ breposrcappcoreconfig.py
#9 43.96 @@ -6,8 +6,7 @@
#9 43.96  
#9 43.96  current_file_dir = os.path.dirname(os.path.realpath(__file__))
#9 43.96  env_path = os.path.join(current_file_dir, "..", "..", ".env")
#9 43.96 -config = Config(root_path=".")  # Set the config root path manually
#9 43.96 -config = Config(".env")
#9 43.96 +config = Config(env_path)
#9 43.96  
#9 43.96  
#9 43.96  class AppSettings(BaseSettings):
#9 43.96 
#9 43.96 
#9 44.03 * Succeed Patch:
#9 44.03 --- areposrcappcoreconfig.py
#9 44.03 +++ breposrcappcoreconfig.py
#9 44.03 @@ -5,7 +5,7 @@
#9 44.03  from starlette.config import Config
#9 44.03  
#9 44.03  current_file_dir = os.path.dirname(os.path.realpath(__file__))
#9 44.03 -env_path = os.path.join(current_file_dir, "..", "..", ".env")
#9 44.03 +env_path = "repo.env"
#9 44.03  config = Config(env_path)
#9 44.03  
#9 44.03  
#9 44.03 
#9 44.03 
#9 45.97 Using version ^0.21.0 for aiosqlite
#9 45.97 
#9 46.08 Updating dependencies
#9 46.09 Resolving dependencies...
#9 46.75 
#9 46.75 Package operations: 1 install, 0 updates, 0 removals
#9 46.75 
#9 46.75   - Installing aiosqlite (0.21.0)
#9 47.44 
#9 47.44 Writing lock file
#9 DONE 47.9s

#10 [6/7] RUN cd /repo && pytest --collect-only -q
#10 0.901 ImportError while loading conftest '/repo/tests/conftest.py'.
#10 0.919 tests/conftest.py:2: in <module>
#10 0.919     from fastapi.testclient import TestClient
#10 0.919 E   ModuleNotFoundError: No module named 'fastapi'
#10 ERROR: process "/bin/sh -c cd /repo && pytest --collect-only -q" did not complete successfully: exit code: 4
------
 > [6/7] RUN cd /repo && pytest --collect-only -q:
0.901 ImportError while loading conftest '/repo/tests/conftest.py'.
0.919 tests/conftest.py:2: in <module>
0.919     from fastapi.testclient import TestClient
0.919 E   ModuleNotFoundError: No module named 'fastapi'
------
Dockerfile:29
--------------------
  27 |         python /code_edit.py -t "/search_patch/3.patch" && \
  28 |         cd /repo && poetry add aiosqlite
  29 | >>> RUN cd /repo && pytest --collect-only -q
--------------------
ERROR: failed to solve: process "/bin/sh -c cd /repo && pytest --collect-only -q" did not complete successfully: exit code: 4
