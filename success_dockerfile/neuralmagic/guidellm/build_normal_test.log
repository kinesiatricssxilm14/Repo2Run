#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.13kB done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/python:3.10
#2 DONE 0.0s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/5] FROM docker.io/library/python:3.10
#4 DONE 0.0s

#5 [2/5] RUN mkdir -p ~/.pip && touch ~/.pip/pip.conf &&     echo "[global]" >> ~/.pip/pip.conf && echo "index-url=http://simple/" >> ~/.pip/pip.conf && echo "[install]" >> ~/.pip/pip.conf && echo "trusted-host=pypi..org" >> ~/.pip/pip.conf &&     apt-get update && apt-get install -y curl &&     curl -sSL https://install.python-poetry.org | python -
#5 CACHED

#6 [3/5] RUN pip install pytest pytest-xdist &&     pip install pipdeptree &&     git clone https://github.com/neuralmagic/guidellm.git &&     mkdir /repo &&     git config --global --add safe.directory /repo &&     cp -r /guidellm/. /repo && rm -rf /guidellm/ &&     rm -rf /guidellm &&     cd /repo && git checkout ecf2984645202eea022cc7c9f245947e2dd5457d &&     pip install -e /repo &&     pip install requests-mock==1.12.1 &&     pip install scipy==1.14.1
#6 1.693 Looking in indexes: http://simple/
#6 1.872 Collecting pytest
#6 1.890   Downloading http://packages/pytest/pytest-8.3.4-py3-none-any.whl (343 kB)
#6 1.914      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 343.1/343.1 kB 18.2 MB/s eta 0:00:00
#6 1.986 Collecting pytest-xdist
#6 2.005   Downloading http://packages/pytest-xdist/pytest_xdist-3.6.1-py3-none-any.whl (46 kB)
#6 2.017      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 46.1/46.1 kB 4.7 MB/s eta 0:00:00
#6 2.092 Collecting tomli>=1
#6 2.114   Downloading http://packages/tomli/tomli-2.2.1-py3-none-any.whl (14 kB)
#6 2.180 Collecting packaging
#6 2.199   Downloading http://packages/packaging/packaging-24.2-py3-none-any.whl (65 kB)
#6 2.211      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 65.5/65.5 kB 6.7 MB/s eta 0:00:00
#6 2.242 Collecting iniconfig
#6 2.266   Downloading http://packages/iniconfig/iniconfig-2.0.0-py3-none-any.whl (5.9 kB)
#6 2.311 Collecting exceptiongroup>=1.0.0rc8
#6 2.329   Downloading http://packages/exceptiongroup/exceptiongroup-1.2.2-py3-none-any.whl (16 kB)
#6 2.377 Collecting pluggy<2,>=1.5
#6 2.395   Downloading http://packages/pluggy/pluggy-1.5.0-py3-none-any.whl (20 kB)
#6 2.447 Collecting execnet>=2.1
#6 2.469   Downloading http://packages/execnet/execnet-2.1.1-py3-none-any.whl (40 kB)
#6 2.477      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 40.6/40.6 kB 8.3 MB/s eta 0:00:00
#6 2.608 Installing collected packages: tomli, pluggy, packaging, iniconfig, execnet, exceptiongroup, pytest, pytest-xdist
#6 3.116 Successfully installed exceptiongroup-1.2.2 execnet-2.1.1 iniconfig-2.0.0 packaging-24.2 pluggy-1.5.0 pytest-8.3.4 pytest-xdist-3.6.1 tomli-2.2.1
#6 3.116 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
#6 3.237 
#6 3.237 [notice] A new release of pip is available: 23.0.1 -> 24.3.1
#6 3.237 [notice] To update, run: pip install --upgrade pip
#6 3.912 Looking in indexes: http://simple/
#6 3.994 Collecting pipdeptree
#6 4.012   Downloading http://packages/pipdeptree/pipdeptree-2.24.0-py3-none-any.whl (32 kB)
#6 4.152 Collecting pip>=24.2
#6 4.165   Using cached http://packages/pip/pip-24.3.1-py3-none-any.whl (1.8 MB)
#6 4.184 Requirement already satisfied: packaging>=24.1 in /usr/local/lib/python3.10/site-packages (from pipdeptree) (24.2)
#6 4.291 Installing collected packages: pip, pipdeptree
#6 4.291   Attempting uninstall: pip
#6 4.292     Found existing installation: pip 23.0.1
#6 4.471     Uninstalling pip-23.0.1:
#6 4.629       Successfully uninstalled pip-23.0.1
#6 5.921 Successfully installed pip-24.3.1 pipdeptree-2.24.0
#6 5.922 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
#6 6.084 Cloning into 'guidellm'...
#6 9.162 Note: switching to 'ecf2984645202eea022cc7c9f245947e2dd5457d'.
#6 9.162 
#6 9.162 You are in 'detached HEAD' state. You can look around, make experimental
#6 9.162 changes and commit them, and you can discard any commits you make in this
#6 9.162 state without impacting any branches by switching back to a branch.
#6 9.162 
#6 9.162 If you want to create a new branch to retain commits you create, you may
#6 9.162 do so (now or later) by using -c with the switch command. Example:
#6 9.162 
#6 9.162   git switch -c <new-branch-name>
#6 9.162 
#6 9.162 Or undo this operation with:
#6 9.162 
#6 9.162   git switch -
#6 9.162 
#6 9.162 Turn off this advice by setting config variable advice.detachedHead to false
#6 9.162 
#6 9.162 HEAD is now at ecf2984 [Dataset]: Iterate through benchmark dataset once (#48)
#6 9.704 Looking in indexes: http://simple/
#6 9.705 Obtaining file:///repo
#6 9.711   Installing build dependencies: started
#6 12.45   Installing build dependencies: finished with status 'done'
#6 12.45   Checking if build backend supports build_editable: started
#6 12.70   Checking if build backend supports build_editable: finished with status 'done'
#6 12.71   Getting requirements to build editable: started
#6 13.08   Getting requirements to build editable: finished with status 'done'
#6 13.08   Preparing editable metadata (pyproject.toml): started
#6 13.45   Preparing editable metadata (pyproject.toml): finished with status 'done'
#6 13.52 Collecting click (from guidellm==0.1.0)
#6 13.54   Downloading http://packages/click/click-8.1.8-py3-none-any.whl (98 kB)
#6 13.62 Collecting datasets (from guidellm==0.1.0)
#6 13.64   Downloading http://packages/datasets/datasets-3.2.0-py3-none-any.whl (480 kB)
#6 13.77 Collecting ftfy>=6.0.0 (from guidellm==0.1.0)
#6 13.79   Downloading http://packages/ftfy/ftfy-6.3.1-py3-none-any.whl (44 kB)
#6 13.83 Collecting loguru (from guidellm==0.1.0)
#6 13.85   Downloading http://packages/loguru/loguru-0.7.3-py3-none-any.whl (61 kB)
#6 14.25 Collecting numpy (from guidellm==0.1.0)
#6 14.27   Downloading http://packages/numpy/numpy-2.2.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (16.4 MB)
#6 14.37      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 16.4/16.4 MB 179.5 MB/s eta 0:00:00
#6 14.58 Collecting openai (from guidellm==0.1.0)
#6 14.59   Downloading http://packages/openai/openai-1.59.3-py3-none-any.whl (454 kB)
#6 14.89 Collecting pydantic>=2.0.0 (from guidellm==0.1.0)
#6 14.91   Downloading http://packages/pydantic/pydantic-2.10.4-py3-none-any.whl (431 kB)
#6 14.97 Collecting pydantic-settings>=2.0.0 (from guidellm==0.1.0)
#6 14.99   Downloading http://packages/pydantic-settings/pydantic_settings-2.7.1-py3-none-any.whl (29 kB)
#6 15.09 Collecting pyyaml>=6.0.0 (from guidellm==0.1.0)
#6 15.12   Downloading http://packages/pyyaml/PyYAML-6.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (751 kB)
#6 15.15      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 751.2/751.2 kB 32.8 MB/s eta 0:00:00
#6 15.22 Collecting requests (from guidellm==0.1.0)
#6 15.23   Using cached http://packages/requests/requests-2.32.3-py3-none-any.whl (64 kB)
#6 15.36 Collecting rich (from guidellm==0.1.0)
#6 15.38   Downloading http://packages/rich/rich-13.9.4-py3-none-any.whl (242 kB)
#6 15.52 Collecting transformers (from guidellm==0.1.0)
#6 15.54   Downloading http://packages/transformers/transformers-4.47.1-py3-none-any.whl (10.1 MB)
#6 15.63      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 10.1/10.1 MB 133.3 MB/s eta 0:00:00
#6 16.01 Collecting wcwidth (from ftfy>=6.0.0->guidellm==0.1.0)
#6 16.03   Downloading http://packages/wcwidth/wcwidth-0.2.13-py2.py3-none-any.whl (34 kB)
#6 16.07 Collecting annotated-types>=0.6.0 (from pydantic>=2.0.0->guidellm==0.1.0)
#6 16.08   Downloading http://packages/annotated-types/annotated_types-0.7.0-py3-none-any.whl (13 kB)
#6 17.48 Collecting pydantic-core==2.27.2 (from pydantic>=2.0.0->guidellm==0.1.0)
#6 17.50   Downloading http://packages/pydantic-core/pydantic_core-2.27.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.0 MB)
#6 17.54      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2.0/2.0 MB 70.9 MB/s eta 0:00:00
#6 17.59 Collecting typing-extensions>=4.12.2 (from pydantic>=2.0.0->guidellm==0.1.0)
#6 17.61   Downloading http://packages/typing-extensions/typing_extensions-4.12.2-py3-none-any.whl (37 kB)
#6 17.67 Collecting python-dotenv>=0.21.0 (from pydantic-settings>=2.0.0->guidellm==0.1.0)
#6 17.69   Downloading http://packages/python-dotenv/python_dotenv-1.0.1-py3-none-any.whl (19 kB)
#6 17.75 Collecting filelock (from datasets->guidellm==0.1.0)
#6 17.76   Using cached http://packages/filelock/filelock-3.16.1-py3-none-any.whl (16 kB)
#6 18.03 Collecting pyarrow>=15.0.0 (from datasets->guidellm==0.1.0)
#6 18.05   Downloading http://packages/pyarrow/pyarrow-18.1.0-cp310-cp310-manylinux_2_28_x86_64.whl (40.1 MB)
#6 18.31      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 40.1/40.1 MB 162.8 MB/s eta 0:00:00
#6 18.48 Collecting dill<0.3.9,>=0.3.0 (from datasets->guidellm==0.1.0)
#6 18.50   Downloading http://packages/dill/dill-0.3.8-py3-none-any.whl (116 kB)
#6 18.78 Collecting pandas (from datasets->guidellm==0.1.0)
#6 18.80   Downloading http://packages/pandas/pandas-2.2.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.1 MB)
#6 18.90      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 13.1/13.1 MB 139.5 MB/s eta 0:00:00
#6 19.13 Collecting tqdm>=4.66.3 (from datasets->guidellm==0.1.0)
#6 19.16   Downloading http://packages/tqdm/tqdm-4.67.1-py3-none-any.whl (78 kB)
#6 19.36 Collecting xxhash (from datasets->guidellm==0.1.0)
#6 19.38   Downloading http://packages/xxhash/xxhash-3.5.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (194 kB)
#6 19.45 Collecting multiprocess<0.70.17 (from datasets->guidellm==0.1.0)
#6 19.47   Downloading http://packages/multiprocess/multiprocess-0.70.16-py310-none-any.whl (134 kB)
#6 19.54 Collecting fsspec<=2024.9.0,>=2023.1.0 (from fsspec[http]<=2024.9.0,>=2023.1.0->datasets->guidellm==0.1.0)
#6 19.57   Downloading http://packages/fsspec/fsspec-2024.9.0-py3-none-any.whl (179 kB)
#6 20.59 Collecting aiohttp (from datasets->guidellm==0.1.0)
#6 20.61   Downloading http://packages/aiohttp/aiohttp-3.11.11-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.6 MB)
#6 20.66      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.6/1.6 MB 50.1 MB/s eta 0:00:00
#6 20.76 Collecting huggingface-hub>=0.23.0 (from datasets->guidellm==0.1.0)
#6 20.78   Downloading http://packages/huggingface-hub/huggingface_hub-0.27.1-py3-none-any.whl (450 kB)
#6 20.84 Requirement already satisfied: packaging in /usr/local/lib/python3.10/site-packages (from datasets->guidellm==0.1.0) (24.2)
#6 21.03 Collecting charset-normalizer<4,>=2 (from requests->guidellm==0.1.0)
#6 21.03   Using cached http://packages/charset-normalizer/charset_normalizer-3.4.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (146 kB)
#6 21.07 Collecting idna<4,>=2.5 (from requests->guidellm==0.1.0)
#6 21.07   Using cached http://packages/idna/idna-3.10-py3-none-any.whl (70 kB)
#6 21.18 Collecting urllib3<3,>=1.21.1 (from requests->guidellm==0.1.0)
#6 21.18   Using cached http://packages/urllib3/urllib3-2.3.0-py3-none-any.whl (128 kB)
#6 21.23 Collecting certifi>=2017.4.17 (from requests->guidellm==0.1.0)
#6 21.24   Using cached http://packages/certifi/certifi-2024.12.14-py3-none-any.whl (164 kB)
#6 21.31 Collecting anyio<5,>=3.5.0 (from openai->guidellm==0.1.0)
#6 21.33   Downloading http://packages/anyio/anyio-4.8.0-py3-none-any.whl (96 kB)
#6 21.38 Collecting distro<2,>=1.7.0 (from openai->guidellm==0.1.0)
#6 21.40   Downloading http://packages/distro/distro-1.9.0-py3-none-any.whl (20 kB)
#6 21.46 Collecting httpx<1,>=0.23.0 (from openai->guidellm==0.1.0)
#6 21.48   Downloading http://packages/httpx/httpx-0.28.1-py3-none-any.whl (73 kB)
#6 21.61 Collecting jiter<1,>=0.4.0 (from openai->guidellm==0.1.0)
#6 21.63   Downloading http://packages/jiter/jiter-0.8.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (345 kB)
#6 21.70 Collecting sniffio (from openai->guidellm==0.1.0)
#6 21.71   Downloading http://packages/sniffio/sniffio-1.3.1-py3-none-any.whl (10 kB)
#6 21.78 Collecting markdown-it-py>=2.2.0 (from rich->guidellm==0.1.0)
#6 21.80   Downloading http://packages/markdown-it-py/markdown_it_py-3.0.0-py3-none-any.whl (87 kB)
#6 21.88 Collecting pygments<3.0.0,>=2.13.0 (from rich->guidellm==0.1.0)
#6 21.90   Downloading http://packages/pygments/pygments-2.19.1-py3-none-any.whl (1.2 MB)
#6 21.93      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.2/1.2 MB 58.9 MB/s eta 0:00:00
#6 22.84 Collecting regex!=2019.12.17 (from transformers->guidellm==0.1.0)
#6 22.86   Downloading http://packages/regex/regex-2024.11.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (781 kB)
#6 22.90      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 781.7/781.7 kB 33.6 MB/s eta 0:00:00
#6 23.27 Collecting tokenizers<0.22,>=0.21 (from transformers->guidellm==0.1.0)
#6 23.29   Downloading http://packages/tokenizers/tokenizers-0.21.0-cp39-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)
#6 23.34      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.0/3.0 MB 92.3 MB/s eta 0:00:00
#6 23.62 Collecting safetensors>=0.4.1 (from transformers->guidellm==0.1.0)
#6 23.64   Downloading http://packages/safetensors/safetensors-0.5.1-cp38-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (461 kB)
#6 23.70 Requirement already satisfied: exceptiongroup>=1.0.2 in /usr/local/lib/python3.10/site-packages (from anyio<5,>=3.5.0->openai->guidellm==0.1.0) (1.2.2)
#6 23.81 Collecting aiohappyeyeballs>=2.3.0 (from aiohttp->datasets->guidellm==0.1.0)
#6 23.83   Downloading http://packages/aiohappyeyeballs/aiohappyeyeballs-2.4.4-py3-none-any.whl (14 kB)
#6 23.87 Collecting aiosignal>=1.1.2 (from aiohttp->datasets->guidellm==0.1.0)
#6 23.89   Downloading http://packages/aiosignal/aiosignal-1.3.2-py2.py3-none-any.whl (7.6 kB)
#6 23.92 Collecting async-timeout<6.0,>=4.0 (from aiohttp->datasets->guidellm==0.1.0)
#6 23.94   Downloading http://packages/async-timeout/async_timeout-5.0.1-py3-none-any.whl (6.2 kB)
#6 23.99 Collecting attrs>=17.3.0 (from aiohttp->datasets->guidellm==0.1.0)
#6 24.01   Downloading http://packages/attrs/attrs-24.3.0-py3-none-any.whl (63 kB)
#6 24.16 Collecting frozenlist>=1.1.1 (from aiohttp->datasets->guidellm==0.1.0)
#6 24.18   Downloading http://packages/frozenlist/frozenlist-1.5.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (241 kB)
#6 24.57 Collecting multidict<7.0,>=4.5 (from aiohttp->datasets->guidellm==0.1.0)
#6 24.59   Downloading http://packages/multidict/multidict-6.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (124 kB)
#6 24.69 Collecting propcache>=0.2.0 (from aiohttp->datasets->guidellm==0.1.0)
#6 24.72   Downloading http://packages/propcache/propcache-0.2.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (205 kB)
#6 25.70 Collecting yarl<2.0,>=1.17.0 (from aiohttp->datasets->guidellm==0.1.0)
#6 25.72   Downloading http://packages/yarl/yarl-1.18.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (319 kB)
#6 25.81 Collecting httpcore==1.* (from httpx<1,>=0.23.0->openai->guidellm==0.1.0)
#6 25.83   Downloading http://packages/httpcore/httpcore-1.0.7-py3-none-any.whl (78 kB)
#6 25.88 Collecting h11<0.15,>=0.13 (from httpcore==1.*->httpx<1,>=0.23.0->openai->guidellm==0.1.0)
#6 25.89   Downloading http://packages/h11/h11-0.14.0-py3-none-any.whl (58 kB)
#6 25.97 Collecting mdurl~=0.1 (from markdown-it-py>=2.2.0->rich->guidellm==0.1.0)
#6 25.99   Downloading http://packages/mdurl/mdurl-0.1.2-py3-none-any.whl (10.0 kB)
#6 26.12 Collecting python-dateutil>=2.8.2 (from pandas->datasets->guidellm==0.1.0)
#6 26.14   Downloading http://packages/python-dateutil/python_dateutil-2.9.0.post0-py2.py3-none-any.whl (229 kB)
#6 26.28 Collecting pytz>=2020.1 (from pandas->datasets->guidellm==0.1.0)
#6 26.30   Downloading http://packages/pytz/pytz-2024.2-py2.py3-none-any.whl (508 kB)
#6 26.37 Collecting tzdata>=2022.7 (from pandas->datasets->guidellm==0.1.0)
#6 26.39   Downloading http://packages/tzdata/tzdata-2024.2-py2.py3-none-any.whl (346 kB)
#6 26.52 Collecting six>=1.5 (from python-dateutil>=2.8.2->pandas->datasets->guidellm==0.1.0)
#6 26.54   Downloading http://packages/six/six-1.17.0-py2.py3-none-any.whl (11 kB)
#6 26.59 Building wheels for collected packages: guidellm
#6 26.59   Building editable for guidellm (pyproject.toml): started
#6 27.05   Building editable for guidellm (pyproject.toml): finished with status 'done'
#6 27.05   Created wheel for guidellm: filename=guidellm-0.1.0-0.editable-py3-none-any.whl size=14936 sha256=d38b6e1fdd1115dab3d6d85bc13b9b1500e1d949bfa7047d59f1dfd19f6c8217
#6 27.05   Stored in directory: /tmp/pip-ephem-wheel-cache-2envkice/wheels/83/05/69/977b54e69478800cfcea8a9437a7ea4a9b1a48db334f824611
#6 27.05 Successfully built guidellm
#6 27.80 Installing collected packages: wcwidth, pytz, xxhash, urllib3, tzdata, typing-extensions, tqdm, sniffio, six, safetensors, regex, pyyaml, python-dotenv, pygments, pyarrow, propcache, numpy, mdurl, loguru, jiter, idna, h11, ftfy, fsspec, frozenlist, filelock, distro, dill, click, charset-normalizer, certifi, attrs, async-timeout, annotated-types, aiohappyeyeballs, requests, python-dateutil, pydantic-core, multiprocess, multidict, markdown-it-py, httpcore, anyio, aiosignal, yarl, rich, pydantic, pandas, huggingface-hub, httpx, tokenizers, pydantic-settings, openai, aiohttp, transformers, datasets, guidellm
#6 53.43 Successfully installed aiohappyeyeballs-2.4.4 aiohttp-3.11.11 aiosignal-1.3.2 annotated-types-0.7.0 anyio-4.8.0 async-timeout-5.0.1 attrs-24.3.0 certifi-2024.12.14 charset-normalizer-3.4.1 click-8.1.8 datasets-3.2.0 dill-0.3.8 distro-1.9.0 filelock-3.16.1 frozenlist-1.5.0 fsspec-2024.9.0 ftfy-6.3.1 guidellm-0.1.0 h11-0.14.0 httpcore-1.0.7 httpx-0.28.1 huggingface-hub-0.27.1 idna-3.10 jiter-0.8.2 loguru-0.7.3 markdown-it-py-3.0.0 mdurl-0.1.2 multidict-6.1.0 multiprocess-0.70.16 numpy-2.2.1 openai-1.59.3 pandas-2.2.3 propcache-0.2.1 pyarrow-18.1.0 pydantic-2.10.4 pydantic-core-2.27.2 pydantic-settings-2.7.1 pygments-2.19.1 python-dateutil-2.9.0.post0 python-dotenv-1.0.1 pytz-2024.2 pyyaml-6.0.2 regex-2024.11.6 requests-2.32.3 rich-13.9.4 safetensors-0.5.1 six-1.17.0 sniffio-1.3.1 tokenizers-0.21.0 tqdm-4.67.1 transformers-4.47.1 typing-extensions-4.12.2 tzdata-2024.2 urllib3-2.3.0 wcwidth-0.2.13 xxhash-3.5.0 yarl-1.18.3
#6 53.43 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
#6 55.52 Looking in indexes: http://simple/
#6 55.56 Collecting requests-mock==1.12.1
#6 55.58   Downloading http://packages/requests-mock/requests_mock-1.12.1-py2.py3-none-any.whl (27 kB)
#6 55.59 Requirement already satisfied: requests<3,>=2.22 in /usr/local/lib/python3.10/site-packages (from requests-mock==1.12.1) (2.32.3)
#6 55.60 Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/site-packages (from requests<3,>=2.22->requests-mock==1.12.1) (3.4.1)
#6 55.60 Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/site-packages (from requests<3,>=2.22->requests-mock==1.12.1) (3.10)
#6 55.60 Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/site-packages (from requests<3,>=2.22->requests-mock==1.12.1) (2.3.0)
#6 55.60 Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/site-packages (from requests<3,>=2.22->requests-mock==1.12.1) (2024.12.14)
#6 56.25 Installing collected packages: requests-mock
#6 56.29 Successfully installed requests-mock-1.12.1
#6 56.29 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
#6 57.12 Looking in indexes: http://simple/
#6 57.41 Collecting scipy==1.14.1
#6 57.43   Downloading http://packages/scipy/scipy-1.14.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (41.2 MB)
#6 57.70      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 41.2/41.2 MB 168.5 MB/s eta 0:00:00
#6 57.86 Requirement already satisfied: numpy<2.3,>=1.23.5 in /usr/local/lib/python3.10/site-packages (from scipy==1.14.1) (2.2.1)
#6 58.50 Installing collected packages: scipy
#6 63.57 Successfully installed scipy-1.14.1
#6 63.57 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
#6 DONE 65.2s

#7 [4/5] RUN cd /repo && pytest --collect-only -q
#7 1.202 ============================= test session starts ==============================
#7 1.202 platform linux -- Python 3.10.16, pytest-8.3.4, pluggy-1.5.0 -- /usr/local/bin/python3.10
#7 1.202 cachedir: .pytest_cache
#7 1.202 rootdir: /repo
#7 1.202 configfile: pyproject.toml
#7 1.202 plugins: anyio-4.8.0, xdist-3.6.1, requests-mock-1.12.1
#7 1.202 collecting ... None of PyTorch, TensorFlow >= 2.0, or Flax have been found. Models won't be available and only tokenizers, configuration and file/data utilities can be used.
#7 5.649 collected 345 items
#7 5.649 
#7 5.649 <Dir repo>
#7 5.649   <Package tests>
#7 5.649     <Package e2e>
#7 5.649       <Module test_guidellm.py>
#7 5.649         <Function test_import>
#7 5.649     <Package integration>
#7 5.649       <Module test_guidellm.py>
#7 5.649         <Function test_import>
#7 5.649     <Package unit>
#7 5.649       <Package backend>
#7 5.649         <Module test_base.py>
#7 5.649           <Function test_backend_registry>
#7 5.649           <Function test_generative_response_creation>
#7 5.649           <Function test_backend_make_request>
#7 5.649           <Function test_backend_submit_final>
#7 5.649           <Function test_backend_submit_multi>
#7 5.649           <Function test_backend_submit_no_response>
#7 5.649           <Function test_backend_submit_multi_final>
#7 5.649           <Function test_backend_models>
#7 5.649           <Function test_backend_test_connection>
#7 5.649           <Function test_backend_tokenizer>
#7 5.649           <Function test_backend_abstract_methods>
#7 5.649         <Module test_openai_backend.py>
#7 5.649           <Function test_openai_backend_create[test_key-http://test-target-test-model-request_args0-http://test-target]>
#7 5.649           <Function test_openai_backend_create[None-None-None-request_args1-http://localhost:8000/v1]>
#7 5.649           <Function test_openai_backend_models>
#7 5.649           <Function test_openai_backend_make_request[req0-None]>
#7 5.649           <Function test_openai_backend_make_request[req1-None]>
#7 5.649           <Function test_openai_backend_make_request[req2-request_args2]>
#7 5.649           <Function test_openai_backend_make_request[req3-request_args3]>
#7 5.649           <Function test_openai_backend_submit>
#7 5.649           <Function test_openai_backend_api_key>
#7 5.649           <Function test_openai_backend_api_key_env>
#7 5.649           <Function test_openai_backend_target>
#7 5.649           <Function test_openai_backend_target_env>
#7 5.649           <Function test_openai_backend_target_none_error>
#7 5.649       <Package cli>
#7 5.649         <Module test_custom_type_params.py>
#7 5.649           <Function test_valid_integer_input>
#7 5.649           <Function test_valid_dataset_input>
#7 5.649           <Function test_invalid_string_input>
#7 5.649           <Function test_invalid_float_input>
#7 5.649           <Function test_invalid_non_numeric_string_input>
#7 5.649           <Function test_invalid_mixed_string_input>
#7 5.649       <Package core>
#7 5.649         <Module test_distribution.py>
#7 5.649           <Function test_distribution_initialization>
#7 5.649           <Function test_distribution_statistics>
#7 5.649           <Function test_distribution_no_data>
#7 5.649           <Function test_distribution_add_data>
#7 5.649           <Function test_distribution_remove_data>
#7 5.649           <Function test_distribution_str>
#7 5.649           <Function test_distribution_repr>
#7 5.649           <Function test_distribution_json>
#7 5.649           <Function test_distribution_yaml>
#7 5.649         <Module test_report.py>
#7 5.649           <Function test_guidance_report_initialization>
#7 5.649           <Function test_guidance_report_initialization_with_params>
#7 5.649           <Function test_guidance_report_print>
#7 5.649           <Function test_guidance_report_json>
#7 5.649           <Function test_guidance_report_yaml>
#7 5.649           <Function test_guidance_report_save_load_file>
#7 5.649           <Function test_empty_guidance_report>
#7 5.649           <Function test_compare_guidance_reports>
#7 5.649           <Function test_compare_guidance_reports_inequality>
#7 5.649         <Module test_request.py>
#7 5.649           <Function test_text_generation_request_initialization>
#7 5.649           <Function test_text_generation_request_initialization_with_params>
#7 5.649           <Function test_request_json>
#7 5.649           <Function test_request_yaml>
#7 5.649         <Module test_result.py>
#7 5.649           <Function test_text_generation_result_initialization>
#7 5.649           <Function test_text_generation_result_start>
#7 5.649           <Function test_text_generation_result_output_token>
#7 5.649           <Function test_text_generation_result_end>
#7 5.649           <Function test_text_generation_result_improper_lifecycle>
#7 5.649           <Function test_text_generation_result_json>
#7 5.649           <Function test_text_generation_result_yaml>
#7 5.649           <Function test_text_generation_error_initialization>
#7 5.649           <Function test_text_generation_error_json>
#7 5.649           <Function test_text_generation_error_yaml>
#7 5.649           <Function test_text_generation_benchmark_initialization>
#7 5.649           <Function test_text_generation_benchmark_started>
#7 5.649           <Function test_text_generation_benchmark_expected_rate>
#7 5.649           <Function test_text_generation_benchmark_overloaded_rate>
#7 5.649           <Function test_text_generation_benchmark_completed_with_result>
#7 5.649           <Function test_text_generation_benchmark_completed_with_error>
#7 5.649           <Function test_text_generation_benchmark_iter>
#7 5.649           <Function test_text_generation_benchmark_json>
#7 5.649           <Function test_text_generation_benchmark_yaml>
#7 5.649           <Function test_text_generation_benchmark_report_initialization>
#7 5.649           <Function test_text_generation_benchmark_report_add_benchmark>
#7 5.649           <Function test_text_generation_benchmark_report_iter>
#7 5.649           <Function test_text_generation_benchmark_report_json>
#7 5.649           <Function test_text_generation_benchmark_report_yaml>
#7 5.649         <Module test_serializable.py>
#7 5.649           <Function test_serializable_json>
#7 5.649           <Function test_serializable_yaml>
#7 5.649           <Function test_serializable_file_json>
#7 5.649           <Function test_serializable_file_yaml>
#7 5.649           <Function test_serializable_file_without_extension>
#7 5.649           <Function test_serializable_file_with_directory_json>
#7 5.649           <Function test_serializable_file_with_directory_yaml>
#7 5.649           <Function test_serializable_file_infer_extension>
#7 5.649           <Function test_serializable_file_invalid_extension>
#7 5.649           <Function test_serializable_load_missing_path>
#7 5.649           <Function test_serializable_load_non_file_path>
#7 5.649       <Package executor>
#7 5.649         <Module test_base.py>
#7 5.649           <Function test_executor_result_instantiation>
#7 5.649           <Function test_executor_instantiation[sweep-None]>
#7 5.649           <Function test_executor_instantiation[synchronous-None]>
#7 5.649           <Function test_executor_instantiation[throughput-None]>
#7 5.649           <Function test_executor_instantiation[constant-10]>
#7 5.649           <Function test_executor_instantiation[constant-rate4]>
#7 5.649           <Function test_executor_instantiation[poisson-10]>
#7 5.649           <Function test_executor_instantiation[poisson-rate6]>
#7 5.649           <Function test_executor_run_sweep>
#7 5.649           <Function test_executor_run_non_rate_modes[synchronous]>
#7 5.649           <Function test_executor_run_non_rate_modes[throughput]>
#7 5.649           <Function test_executor_run_rate_modes[constant-10]>
#7 5.649           <Function test_executor_run_rate_modes[constant-rate1]>
#7 5.649           <Function test_executor_run_rate_modes[poisson-10]>
#7 5.649           <Function test_executor_run_rate_modes[poisson-rate3]>
#7 5.649         <Module test_profile_generator.py>
#7 5.649           <Function test_profile_generator_mode>
#7 5.649           <Function test_profile_instantiation>
#7 5.649           <Function test_profile_generator_instantiation[sweep-None]>
#7 5.649           <Function test_profile_generator_instantiation[synchronous-None]>
#7 5.649           <Function test_profile_generator_instantiation[throughput-None]>
#7 5.649           <Function test_profile_generator_instantiation[constant-10]>
#7 5.649           <Function test_profile_generator_instantiation[constant-rate4]>
#7 5.649           <Function test_profile_generator_instantiation[poisson-10]>
#7 5.649           <Function test_profile_generator_instantiation[poisson-rate6]>
#7 5.649           <Function test_profile_generator_invalid_instantiation[invalid_mode-None]>
#7 5.649           <Function test_profile_generator_invalid_instantiation[sweep-10]>
#7 5.649           <Function test_profile_generator_invalid_instantiation[sweep-rate2]>
#7 5.649           <Function test_profile_generator_invalid_instantiation[synchronous-10]>
#7 5.649           <Function test_profile_generator_invalid_instantiation[synchronous-rate4]>
#7 5.649           <Function test_profile_generator_invalid_instantiation[throughput-10]>
#7 5.649           <Function test_profile_generator_invalid_instantiation[throughput-rate6]>
#7 5.649           <Function test_profile_generator_invalid_instantiation[constant-None]>
#7 5.649           <Function test_profile_generator_invalid_instantiation[constant--1]>
#7 5.649           <Function test_profile_generator_invalid_instantiation[constant-0]>
#7 5.649           <Function test_profile_generator_invalid_instantiation[poisson-None]>
#7 5.649           <Function test_profile_generator_invalid_instantiation[poisson--1]>
#7 5.650           <Function test_profile_generator_invalid_instantiation[poisson-0]>
#7 5.650           <Function test_profile_generator_next_sweep>
#7 5.650           <Function test_profile_generator_next_synchronous>
#7 5.650           <Function test_profile_generator_next_throughput>
#7 5.650           <Function test_profile_generator_next_constant[10]>
#7 5.650           <Function test_profile_generator_next_constant[rate1]>
#7 5.650           <Function test_profile_generator_next_poisson[10]>
#7 5.650           <Function test_profile_generator_next_poisson[rate1]>
#7 5.650       <Package request>
#7 5.650         <Module test_base.py>
#7 5.650           <Function test_request_generator_sync_constructor>
#7 5.650           <Function test_request_generator_async_constructor>
#7 5.650           <Function test_request_generator_sync_iter>
#7 5.650           <Function test_request_generator_async_iter>
#7 5.650           <Function test_request_generator_iter_calls_create_item>
#7 5.650           <Function test_request_generator_async_iter_calls_create_item>
#7 5.650           <Function test_request_generator_repr>
#7 5.650           <Function test_request_generator_stop>
#7 5.650           <Function test_request_generator_with_mock_tokenizer>
#7 5.650           <Function test_request_generator_populate_queue>
#7 5.650           <Function test_request_generator_async_stop_during_population>
#7 5.650         <Module test_emulated.py>
#7 5.650           <Function test_emulated_config_construction>
#7 5.650           <Function test_emulated_config_create_dict>
#7 5.650           <Function test_emulated_config_token_range[10-2-None-None-expected_range0]>
#7 5.650           <Function test_emulated_config_token_range[10-2-5-15-expected_range1]>
#7 5.650           <Function test_emulated_config_token_range[10-None-5-15-expected_range2]>
#7 5.650           <Function test_emulated_config_token_range[10-2-1-None-expected_range3]>
#7 5.650           <Function test_emulated_config_sample_tokens[10-None-None-None-expected_range0]>
#7 5.650           <Function test_emulated_config_sample_tokens[10-5-None-None-expected_range1]>
#7 5.650           <Function test_emulated_config_sample_tokens[10-5-5-15-expected_range2]>
#7 5.650           <Function test_emulated_config_sample_tokens[10-None-5-15-expected_range3]>
#7 5.650           <Function test_emulated_config_sample_tokens[10-5-2-None-expected_range4]>
#7 5.650           <Function test_emulated_config_sample_tokens[10-5-None-20-expected_range5]>
#7 5.650           <Function test_emulated_config_create>
#7 5.650           <Function test_endless_data_words_construction[word1 word2  word3\nword4   word5-expected_words0-expected_indices0]>
#7 5.650           <Function test_endless_data_words_construction[word1  word2\n  word3   word4\n word5-expected_words1-expected_indices1]>
#7 5.650           <Function test_endless_data_words_create_from_basic_file>
#7 5.650           <Function test_endless_data_words_create_text[word1 word2 word3 word4-0-2-word1 word2]>
#7 5.650           <Function test_endless_data_words_create_text[word1     word2\nword3   word4-1-2-word2\nword3]>
#7 5.650           <Function test_endless_data_words_create_text[word1     word2\nword3   word4-1-6-word2\nword3   word4 word1     word2\nword3]>
#7 5.650           <Function test_emulated_request_generator_construction>
#7 5.650           <Function test_emulated_request_generator_create_item>
#7 5.650           <Function test_emulated_request_generator_sample_prompt>
#7 5.650           <Function test_emulated_request_generator_random_seed>
#7 5.650           <Function test_emulated_request_generator_lifecycle[dict-config0]>
#7 5.650           <Function test_emulated_request_generator_lifecycle[dict-config1]>
#7 5.650           <Function test_emulated_request_generator_lifecycle[dict-config2]>
#7 5.650           <Function test_emulated_request_generator_lifecycle[json_str-{"prompt_tokens": 10, "generated_tokens": 20}]>
#7 5.650           <Function test_emulated_request_generator_lifecycle[key_value_str-prompt_tokens=10, generated_tokens=20]>
#7 5.650           <Function test_emulated_request_generator_lifecycle[file_str-{"prompt_tokens": 10, "generated_tokens": 20}]>
#7 5.650           <Function test_emulated_request_generator_lifecycle[file_path-{"prompt_tokens": 10, "generated_tokens": 20}]>
#7 5.650         <Module test_file.py>
#7 5.650           <Function test_file_request_generator_constructor>
#7 5.650           <Function test_file_request_generator_create_item>
#7 5.650           <Function test_file_request_generator_file_types_lifecycle[txt-Test content 1.\nTest content 2.\nTest content 3.\n]>
#7 5.650           <Function test_file_request_generator_file_types_lifecycle[csv-text,label,extra\nTest content 1.,1,extra 1\nTest content 2.,2,extra 2\nTest content 3.,3,extra 3\n]>
#7 5.650           <Function test_file_request_generator_file_types_lifecycle[jsonl-{"text": "Test content 1."}\n{"text": "Test content 2."}\n{"text": "Test content 3."}\n]>
#7 5.650           <Function test_file_request_generator_file_types_lifecycle[csv-prompt,text,extra\nTest content 1., text 1, extra 1\nTest content 2., text 2, extra 2\nTest content 3., text 3, extra 3\n]>
#7 5.650           <Function test_file_request_generator_file_types_lifecycle[json-[{"text": "Test content 1."}, {"text": "Test content 2."}, {"text": "Test content 3."}]\n]>
#7 5.650           <Function test_file_request_generator_file_types_lifecycle[json-{"object_1": {"text": "Test content 1."}, "object_2": {"text": "Test content 2."}, "object_3": {"text": "Test content 3."}}\n]>
#7 5.650           <Function test_file_request_generator_file_types_lifecycle[yaml-items:\n   - text: Test content 1.\n   - text: Test content 2.\n   - text: Test content 3.\n]>
#7 5.650           <Function test_file_request_generator_file_types_lifecycle[yaml-object_1:\n  text: Test content 1.\nobject_2:\n  text: Test content 2.\nobject_3:\n  text: Test content 3.\n]>
#7 5.650           <Function test_file_request_generator_len[txt-Test content 1.\nTest content 2.\nTest content 3.\n]>
#7 5.650           <Function test_file_request_generator_len[csv-text,label,extra\nTest content 1.,1,extra 1\nTest content 2.,2,extra 2\nTest content 3.,3,extra 3\n]>
#7 5.650           <Function test_file_request_generator_len[jsonl-{"text": "Test content 1."}\n{"text": "Test content 2."}\n{"text": "Test content 3."}\n]>
#7 5.650           <Function test_file_request_generator_len[csv-prompt,text,extra\nTest content 1., text 1, extra 1\nTest content 2., text 2, extra 2\nTest content 3., text 3, extra 3\n]>
#7 5.650           <Function test_file_request_generator_len[json-[{"text": "Test content 1."}, {"text": "Test content 2."}, {"text": "Test content 3."}]\n]>
#7 5.650           <Function test_file_request_generator_len[json-{"object_1": {"text": "Test content 1."}, "object_2": {"text": "Test content 2."}, "object_3": {"text": "Test content 3."}}\n]>
#7 5.650           <Function test_file_request_generator_len[yaml-items:\n   - text: Test content 1.\n   - text: Test content 2.\n   - text: Test content 3.\n]>
#7 5.650           <Function test_file_request_generator_len[yaml-object_1:\n  text: Test content 1.\nobject_2:\n  text: Test content 2.\nobject_3:\n  text: Test content 3.\n]>
#7 5.650         <Module test_transformers.py>
#7 5.650           <Function test_transformers_dataset_request_generator_constructor>
#7 5.650           <Function test_transformers_dataset_request_generator_create_item>
#7 5.650           <Function test_transformers_dataset_request_generator_lifecycle[mock/directory/file.csv-dataset0]>
#7 5.650           <Function test_transformers_dataset_request_generator_lifecycle[mock/directory/file.json-dataset1]>
#7 5.650           <Function test_transformers_dataset_request_generator_lifecycle[mock/directory/file.py-dataset2]>
#7 5.650           <Function test_transformers_dataset_request_generator_lifecycle[dataset_arg3-None]>
#7 5.650           <Function test_transformers_dataset_request_generator_lifecycle[dataset_arg4-None]>
#7 5.650           <Function test_transformers_dataset_request_generator_lifecycle[dataset_arg5-None]>
#7 5.650           <Function test_transformers_dataset_request_generator_lifecycle[dataset_arg6-None]>
#7 5.650           <Function test_transformers_dataset_request_generator_len[mock/directory/file.csv-dataset0]>
#7 5.650           <Function test_transformers_dataset_request_generator_len[mock/directory/file.json-dataset1]>
#7 5.650           <Function test_transformers_dataset_request_generator_len[mock/directory/file.py-dataset2]>
#7 5.650           <Function test_transformers_dataset_request_generator_len[dataset_arg3-None]>
#7 5.650           <Function test_transformers_dataset_request_generator_len[dataset_arg4-None]>
#7 5.650       <Package scheduler>
#7 5.650         <Module test_base.py>
#7 5.650           <Function test_scheduler_result>
#7 5.651           <Function test_scheduler_instantiation[synchronous-None-10-None]>
#7 5.651           <Function test_scheduler_instantiation[throughput-5.0-None-60.0]>
#7 5.651           <Function test_scheduler_instantiation[poisson-10.0-100-None]>
#7 5.651           <Function test_scheduler_instantiation[constant-1.0-None-120.0]>
#7 5.651           <Function test_scheduler_invalid_instantiation[invalid_mode-None-10-None]>
#7 5.651           <Function test_scheduler_invalid_instantiation[synchronous-None-None-None]>
#7 5.651           <Function test_scheduler_invalid_instantiation[synchronous-None--1-10]>
#7 5.651           <Function test_scheduler_invalid_instantiation[synchronous-None-10--1]>
#7 5.651           <Function test_scheduler_invalid_instantiation[constant--1-None-10]>
#7 5.651           <Function test_scheduler_invalid_instantiation[constant-None-None-10]>
#7 5.651           <Function test_scheduler_invalid_instantiation[poisson--1-None-10]>
#7 5.651           <Function test_scheduler_invalid_instantiation[poisson-None-None-10]>
#7 5.651           <Function test_scheduler_run_number[synchronous]>
#7 5.651           <Function test_scheduler_run_number[throughput]>
#7 5.651           <Function test_scheduler_run_number[poisson]>
#7 5.651           <Function test_scheduler_run_number[constant]>
#7 5.651           <Function test_scheduler_run_duration[synchronous]>
#7 5.651           <Function test_scheduler_run_duration[constant]>
#7 5.651         <Module test_load_generator.py>
#7 5.651           <Function test_load_generator_mode>
#7 5.651           <Function test_load_generator_instantiation[constant-10]>
#7 5.651           <Function test_load_generator_instantiation[poisson-5]>
#7 5.651           <Function test_load_generator_instantiation[throughput-None]>
#7 5.651           <Function test_load_generator_instantiation[synchronous-None]>
#7 5.651           <Function test_load_generator_invalid_instantiation[invalid_mode-None-ValueError]>
#7 5.651           <Function test_load_generator_invalid_instantiation[constant-0-ValueError]>
#7 5.651           <Function test_load_generator_invalid_instantiation[poisson--1-ValueError]>
#7 5.651           <Function test_load_generator_times[synchronous-None]>
#7 5.651           <Function test_load_generator_times[throughput-None]>
#7 5.651           <Function test_load_generator_times[constant-1]>
#7 5.651           <Function test_load_generator_times[poisson-5]>
#7 5.651           <Function test_load_generator_invalid_times>
#7 5.651           <Function test_load_generator_throughput_times>
#7 5.651           <Function test_load_generator_constant_times[1]>
#7 5.651           <Function test_load_generator_constant_times[10]>
#7 5.651           <Function test_load_generator_constant_times[42]>
#7 5.651           <Function test_load_generator_poisson_times>
#7 5.651       <Module test_config.py>
#7 5.651         <Function test_default_settings>
#7 5.651         <Function test_settings_from_env_variables>
#7 5.651         <Function test_report_generation_default_source>
#7 5.651         <Function test_logging_settings>
#7 5.651         <Function test_openai_settings>
#7 5.651         <Function test_report_generation_settings>
#7 5.651       <Module test_logger.py>
#7 5.651         <Function test_default_logger_settings>
#7 5.651         <Function test_configure_logger_console_settings>
#7 5.651         <Function test_configure_logger_file_settings>
#7 5.651         <Function test_configure_logger_console_and_file>
#7 5.651         <Function test_environment_variable_override>
#7 5.651         <Function test_logging_disabled>
#7 5.651       <Module test_main.py>
#7 5.651         <Function test_generate_benchmark_report_invoke_smoke>
#7 5.651         <Function test_generate_benchmark_report_cli_smoke>
#7 5.651         <Function test_generate_benchmark_report_emulated_with_dataset_requests>
#7 5.651         <Function test_generate_benchmark_report_cli_emulated_with_dataset_requests>
#7 5.651         <Function test_generate_benchmark_report_openai_limited_by_file_dataset[txt-Test prompt 1-1-constant-1.0]>
#7 5.651           Mock only a few functions to get the proper report result
#7 5.651           from the ``Backend.make_request``.
#7 5.651           
#7 5.651           Notes:
#7 5.651               All the results are collected in the `benchmark.errors``,
#7 5.651               since the most of the responses are mocked and can't be processed.
#7 5.651               But the ordering of the results is still the same for both collections.
#7 5.651           
#7 5.651               ``mock_benchmark_report`` and ``mock_benchmark_report_progress``
#7 5.651               are used for preventing working with IO bound tasks.
#7 5.651         <Function test_generate_benchmark_report_openai_limited_by_file_dataset[txt-Test prompt 1-1-sweep-1.0]>
#7 5.651           Mock only a few functions to get the proper report result
#7 5.651           from the ``Backend.make_request``.
#7 5.651           
#7 5.651           Notes:
#7 5.651               All the results are collected in the `benchmark.errors``,
#7 5.651               since the most of the responses are mocked and can't be processed.
#7 5.651               But the ordering of the results is still the same for both collections.
#7 5.651           
#7 5.651               ``mock_benchmark_report`` and ``mock_benchmark_report_progress``
#7 5.651               are used for preventing working with IO bound tasks.
#7 5.651         <Function test_generate_benchmark_report_openai_limited_by_file_dataset[txt-Test prompt 1\nTest prompt 2\nTest prompt 3\n-3-constant-1.0]>
#7 5.651           Mock only a few functions to get the proper report result
#7 5.651           from the ``Backend.make_request``.
#7 5.651           
#7 5.651           Notes:
#7 5.651               All the results are collected in the `benchmark.errors``,
#7 5.651               since the most of the responses are mocked and can't be processed.
#7 5.651               But the ordering of the results is still the same for both collections.
#7 5.651           
#7 5.651               ``mock_benchmark_report`` and ``mock_benchmark_report_progress``
#7 5.651               are used for preventing working with IO bound tasks.
#7 5.651         <Function test_generate_benchmark_report_openai_limited_by_file_dataset[txt-Test prompt 1\nTest prompt 2\nTest prompt 3\n-3-sweep-1.0]>
#7 5.651           Mock only a few functions to get the proper report result
#7 5.651           from the ``Backend.make_request``.
#7 5.651           
#7 5.651           Notes:
#7 5.651               All the results are collected in the `benchmark.errors``,
#7 5.651               since the most of the responses are mocked and can't be processed.
#7 5.651               But the ordering of the results is still the same for both collections.
#7 5.651           
#7 5.651               ``mock_benchmark_report`` and ``mock_benchmark_report_progress``
#7 5.651               are used for preventing working with IO bound tasks.
#7 5.651       <Package utils>
#7 5.651         <Module test_injector.py>
#7 5.651           <Function test_inject_data>
#7 5.651           <Function test_create_report_to_file>
#7 5.651           <Function test_create_report_to_directory>
#7 5.651         <Module test_progress.py>
#7 5.651           <Function test_initialization>
#7 5.651           <Function test_start_method>
#7 5.651           <Function test_update_benchmark>
#7 5.651           <Function test_finish_method>
#7 5.651           <Function test_error_on_update_completed_benchmark>
#7 5.651           <Function test_multiple_updates>
#7 5.651         <Module test_text.py>
#7 5.651           <Function test_filter_text[hello world-hello-world-hello ]>
#7 5.651           <Function test_filter_text[hello world-world-None-world]>
#7 5.651           <Function test_filter_text[hello world-None-hello-]>
#7 5.651           <Function test_filter_text[hello world-None-None-hello world]>
#7 5.651           <Function test_clean_text[This is\ta test.\n   New line.-True-True-False-False-This is a test.\nNew line.]>
#7 5.651           <Function test_clean_text[This is\ta test.\n   New line.-True-True-True-False-This is a test.\nNew line.]>
#7 5.651           <Function test_clean_text[This is a test. New line.-True-False-False-True-This is a test.\nNew line.]>
#7 5.651           <Function test_split_lines_by_punctuation>
#7 5.651           <Function test_is_url[https://example.com-True]>
#7 5.651           <Function test_is_url[ftp://example.com-True]>
#7 5.651           <Function test_is_url[not a url-False]>
#7 5.651           <Function test_is_path[/repo/tests/unit/utils/test_text.py-True]>
#7 5.651           <Function test_is_path[/non/existent/path-False]>
#7 5.651           <Function test_is_path_like[/repo/tests/unit/utils/test_text.py-True-True]>
#7 5.651           <Function test_is_path_like[/non/existent/path-False-True]>
#7 5.651           <Function test_is_path_like[https://example.com-False-False]>
#7 5.651           <Function test_split_text>
#7 5.651           <Function test_parse_text_objects[text\nline 1\nline 2-csv-expected0]>
#7 5.651           <Function test_parse_text_objects[{"text": "line 1"}\n{"text": "line 2"}-jsonl-expected1]>
#7 5.651           <Function test_load_text[https://example.com-Mock content]>
#7 5.651           <Function test_load_text[/repo/tests/unit/utils/test_text.py-from pathlib import Path\nfrom unittest.mock import patch\n\nimport pytest\nimport requests\n\nfrom guidellm.utils.text import (\n    clean_text,\n    filter_text,\n    is_path,\n    is_path_like,\n    is_url,\n    load_text,\n    load_text_lines,\n    parse_text_objects,\n    split_lines_by_punctuation,\n    split_text,\n)\n\n\n@pytest.fixture()\ndef sample_text():\n    return "This is a sample text.\\nThis is another line!"\n\n\n@pytest.fixture()\ndef sample_dict_data():\n    return [{"text": "line 1"}, {"text": "line 2"}, {"text": "line 3"}]\n\n\n@pytest.fixture()\ndef sample_csv_data():\n    return "text\\nline 1\\nline 2\\nline 3"\n\n\n@pytest.fixture()\ndef sample_jsonl_data():\n    return '{"text": "line 1"}\\n{"text": "line 2"}\\n{"text": "line 3"}'\n\n\n@pytest.fixture()\ndef sample_yaml_data():\n    return """\n    text:\n      - line 1\n      - line 2\n      - line 3\n    """\n\n\n@pytest.fixture()\ndef mock_response():\n    response = requests.Response()\n    response.status_code = 200\n    response._content = b"Mock content"\n    return response\n\n\n@pytest.mark.smoke()\n@pytest.mark.parametrize(\n    ("text", "start", "end", "expected"),\n    [\n        ("hello world", "hello", "world", "hello "),\n        ("hello world", "world", None, "world"),\n        ("hello world", None, "hello", ""),\n        ("hello world", None, None, "hello world"),\n    ],\n)\ndef test_filter_text(text, start, end, expected):\n    assert filter_text(text, start, end) == expected\n\n\n@pytest.mark.smoke()\n@pytest.mark.parametrize(\n    (\n        "text",\n        "fix_encoding",\n        "clean_whitespace",\n        "remove_empty_lines",\n        "force_new_line_punctuation",\n        "expected",\n    ),\n    [\n        (\n            "This is\\ta test.\\n   New line.",\n            True,\n            True,\n            False,\n            False,\n            "This is a test.\\nNew line.",\n        ),\n        (\n            "This is\\ta test.\\n   New line.",\n            True,\n            True,\n            True,\n            False,\n            "This is a test.\\nNew line.",\n        ),\n        (\n            "This is a test. New line.",\n            True,\n            False,\n            False,\n            True,\n            "This is a test.\\nNew line.",\n        ),\n    ],\n)\ndef test_clean_text(\n    text,\n    fix_encoding,\n    clean_whitespace,\n    remove_empty_lines,\n    force_new_line_punctuation,\n    expected,\n):\n    assert (\n        clean_text(\n            text,\n            fix_encoding,\n            clean_whitespace,\n            remove_empty_lines,\n            force_new_line_punctuation,\n        )\n        == expected\n    )\n\n\n@pytest.mark.smoke()\ndef test_split_lines_by_punctuation(sample_text):\n    expected = ["This is a sample text.", "This is another line!"]\n    assert split_lines_by_punctuation(sample_text) == expected\n\n\n@pytest.mark.smoke()\n@pytest.mark.parametrize(\n    ("url", "expected"),\n    [\n        ("https://example.com", True),\n        ("ftp://example.com", True),\n        ("not a url", False),\n    ],\n)\ndef test_is_url(url, expected):\n    assert is_url(url) == expected\n\n\n@pytest.mark.smoke()\n@pytest.mark.parametrize(\n    ("path", "expected"),\n    [\n        (str(Path(__file__)), True),\n        ("/non/existent/path", False),\n    ],\n)\ndef test_is_path(path, expected):\n    assert is_path(path) == expected\n\n\n@pytest.mark.smoke()\n@pytest.mark.parametrize(\n    ("path", "enforce_file", "expected"),\n    [\n        (str(Path(__file__)), True, True),\n        ("/non/existent/path", False, True),\n        ("https://example.com", False, False),\n    ],\n)\ndef test_is_path_like(path, enforce_file, expected):\n    assert is_path_like(path, enforce_file) == expected\n\n\n@pytest.mark.smoke()\ndef test_split_text(sample_text):\n    words, separators, new_lines = split_text(sample_text)\n    assert words == [\n        "This",\n        "is",\n        "a",\n        "sample",\n        "text.",\n        "This",\n        "is",\n        "another",\n        "line!",\n    ]\n    assert separators == [" ", " ", " ", " ", "\\n", " ", " ", " ", " "]\n    assert new_lines == [0, 5]\n\n\n@pytest.mark.smoke()\n@pytest.mark.parametrize(\n    ("data", "format_", "expected"),\n    [\n        ("text\\nline 1\\nline 2", "csv", [{"text": "line 1"}, {"text": "line 2"}]),\n        (\n            '{"text": "line 1"}\\n{"text": "line 2"}',\n            "jsonl",\n            [{"text": "line 1"}, {"text": "line 2"}],\n        ),\n    ],\n)\ndef test_parse_text_objects(data, format_, expected):\n    assert parse_text_objects(data, format_) == expected\n\n\n@pytest.mark.smoke()\n@pytest.mark.parametrize(\n    ("data", "expected"),\n    [\n        ("https://example.com", "Mock content"),\n        (str(Path(__file__)), Path(__file__).read_text()),\n    ],\n)\ndef test_load_text(data, expected, mock_response):\n    with patch("requests.get", return_value=mock_response):\n        assert load_text(data) == expected\n\n\n@pytest.mark.regression()\ndef test_load_text_file_not_found():\n    with pytest.raises(FileNotFoundError):\n        load_text("/non/existent/file.txt")\n\n\n@pytest.mark.smoke()\n@pytest.mark.parametrize(\n    ("data", "format_", "filters", "expected"),\n    [\n        ("text\\nline 1\\nline 2", "csv", None, ["line 1", "line 2"]),\n        ('{"text": "line 1"}\\n{"text": "line 2"}', "jsonl", None, ["line 1", "line 2"]),\n        ("text\\nline 1\\nline 2", "txt", None, ["text", "line 1", "line 2"]),\n    ],\n)\ndef test_load_text_lines(data, format_, filters, expected):\n    assert load_text_lines(data, format_=format_, filters=filters) == expected\n\n\n@pytest.mark.regression()\ndef test_load_text_lines_invalid_data():\n    with pytest.raises(ValueError):\n        load_text_lines(123)  # type: ignore\n\n\n@pytest.mark.regression()\ndef test_parse_text_objects_invalid_format():\n    with pytest.raises(ValueError):\n        parse_text_objects("text", format_="unsupported")\n\n\n@pytest.mark.regression()\ndef test_parse_text_objects_invalid_data():\n    with pytest.raises(ValueError):\n        parse_text_objects(123)  # type: ignore\n\n\n@pytest.mark.regression()\n@pytest.mark.parametrize(\n    ("data", "format_", "filters", "expected"),\n    [\n        (\n            "text\\nline 1\\nline 2\\n",\n            "csv",\n            ["text"],\n            ["line 1", "line 2"],\n        ),\n    ],\n)\ndef test_load_text_lines_with_filters(data, format_, filters, expected):\n    assert load_text_lines(data, format_=format_, filters=filters) == expected\n\n\n@pytest.mark.regression()\ndef test_is_path_with_symlink(tmp_path):\n    # Create a symlink to a temporary file\n    target_file = tmp_path / "target_file.txt"\n    target_file.write_text("Sample content")\n    symlink_path = tmp_path / "symlink"\n    symlink_path.symlink_to(target_file)\n\n    assert is_path(str(symlink_path)) is True\n\n\n@pytest.mark.regression()\ndef test_is_path_like_with_symlink(tmp_path):\n    # Create a symlink to a temporary file\n    target_file = tmp_path / "target_file.txt"\n    target_file.write_text("Sample content")\n    symlink_path = tmp_path / "symlink.file"\n    symlink_path.symlink_to(target_file)\n\n    assert is_path_like(str(symlink_path), enforce_file=True) is True\n\n\n@pytest.mark.regression()\ndef test_load_text_lines_empty():\n    # Test loading text lines from an empty string\n    assert load_text_lines("") == []\n\n\n@pytest.mark.regression()\ndef test_split_text_with_empty_string():\n    words, separators, new_lines = split_text("")\n    assert words == []\n    assert separators == []\n    assert new_lines == []\n\n\n@pytest.mark.regression()\ndef test_split_lines_by_punctuation_with_no_punctuation():\n    text = "This is a test without punctuation"\n    assert split_lines_by_punctuation(text) == [text]\n\n\n@pytest.mark.regression()\ndef test_is_path_invalid_type():\n    assert not is_path(None)\n    assert not is_path(123)\n    assert not is_path(["not", "a", "path"])\n\n\n@pytest.mark.regression()\ndef test_is_path_like_invalid_type():\n    assert not is_path_like(None, enforce_file=False)\n    assert not is_path_like(123, enforce_file=True)\n    assert not is_path_like(["not", "a", "path"], enforce_file=False)\n\n\n@pytest.mark.regression()\ndef test_load_text_invalid_url():\n    with pytest.raises(requests.ConnectionError):\n        load_text("http://invalid.url")\n\n\n@pytest.mark.regression()\ndef test_parse_text_objects_empty_csv():\n    assert parse_text_objects("text\\n", "csv") == []\n\n\n@pytest.mark.regression()\ndef test_parse_text_objects_empty_jsonl():\n    assert parse_text_objects("", "jsonl") == []\n\n\n@pytest.mark.regression()\ndef test_parse_text_objects_invalid_jsonl():\n    with pytest.raises(ValueError):\n        parse_text_objects("{invalid_json}", "jsonl")\n\n\n@pytest.mark.regression()\ndef test_parse_text_objects_empty_yaml():\n    assert parse_text_objects("", "yaml") == []\n\n\n@pytest.mark.regression()\ndef test_clean_text_with_unicode():\n    text = "This is a test with unicode: \\u2013 \\u2014"\n    cleaned_text = clean_text(text, fix_encoding=True, clean_whitespace=True)\n    assert cleaned_text == "This is a test with unicode: \u2013 \u2014"\n\n\n@pytest.mark.regression()\ndef test_split_lines_by_punctuation_with_multiple_punctuations():\n    text = "First sentence. Second sentence? Third sentence!"\n    expected = ["First sentence.", "Second sentence?", "Third sentence!"]\n    assert split_lines_by_punctuation(text) == expected\n\n\n@pytest.mark.regression()\ndef test_is_url_empty_string():\n    assert not is_url("")\n\n\n@pytest.mark.regression()\ndef test_load_text_invalid_data():\n    with pytest.raises(TypeError):\n        load_text(123)  # type: ignore\n\n\n@pytest.mark.regression()\ndef test_load_text_lines_empty_format():\n    data = "text\\nline 1\\nline 2"\n    assert load_text_lines(data, format_="") == ["text", "line 1", "line 2"]\n\n\n@pytest.mark.regression()\ndef test_split_text_with_mixed_separators():\n    text = "This\\tis a test\\nwith mixed separators."\n    words, separators, new_lines = split_text(text)\n    assert words == ["This", "is", "a", "test", "with", "mixed", "separators."]\n    assert separators == ["\\t", " ", " ", "\\n", " ", " ", " "]\n    assert new_lines == [0, 4]\n]>
#7 5.656           <Function test_load_text_file_not_found>
#7 5.656           <Function test_load_text_lines[text\nline 1\nline 2-csv-None-expected0]>
#7 5.656           <Function test_load_text_lines[{"text": "line 1"}\n{"text": "line 2"}-jsonl-None-expected1]>
#7 5.656           <Function test_load_text_lines[text\nline 1\nline 2-txt-None-expected2]>
#7 5.656           <Function test_load_text_lines_invalid_data>
#7 5.656           <Function test_parse_text_objects_invalid_format>
#7 5.656           <Function test_parse_text_objects_invalid_data>
#7 5.656           <Function test_load_text_lines_with_filters[text\nline 1\nline 2\n-csv-filters0-expected0]>
#7 5.656           <Function test_is_path_with_symlink>
#7 5.656           <Function test_is_path_like_with_symlink>
#7 5.656           <Function test_load_text_lines_empty>
#7 5.656           <Function test_split_text_with_empty_string>
#7 5.656           <Function test_split_lines_by_punctuation_with_no_punctuation>
#7 5.656           <Function test_is_path_invalid_type>
#7 5.656           <Function test_is_path_like_invalid_type>
#7 5.656           <Function test_load_text_invalid_url>
#7 5.656           <Function test_parse_text_objects_empty_csv>
#7 5.656           <Function test_parse_text_objects_empty_jsonl>
#7 5.656           <Function test_parse_text_objects_invalid_jsonl>
#7 5.656           <Function test_parse_text_objects_empty_yaml>
#7 5.656           <Function test_clean_text_with_unicode>
#7 5.656           <Function test_split_lines_by_punctuation_with_multiple_punctuations>
#7 5.656           <Function test_is_url_empty_string>
#7 5.656           <Function test_load_text_invalid_data>
#7 5.656           <Function test_load_text_lines_empty_format>
#7 5.656           <Function test_split_text_with_mixed_separators>
#7 5.656         <Module test_transformers.py>
#7 5.656           <Function test_load_transformers_dataset[mock/directory/file.csv-dataset0-train-None-Dataset]>
#7 5.656           <Function test_load_transformers_dataset[mock/directory/file.json-dataset1-None-preferred_splits1-Dataset]>
#7 5.656           <Function test_load_transformers_dataset[mock/directory/file.py-dataset2-None-None-Dataset]>
#7 5.656           <Function test_load_transformers_dataset[dataset_arg3-None-val-None-Dataset]>
#7 5.656           <Function test_load_transformers_dataset[dataset_arg4-None-None-None-Dataset]>
#7 5.656           <Function test_load_transformers_dataset[dataset_arg5-None-None-None-IterableDataset]>
#7 5.656           <Function test_load_transformers_dataset[dataset_arg6-None-validation-None-IterableDataset]>
#7 5.656           <Function test_resolve_transformers_dataset[mock/directory/file.csv-dataset0-train-None-Dataset]>
#7 5.656           <Function test_resolve_transformers_dataset[mock/directory/file.json-dataset1-None-preferred_splits1-DatasetDict]>
#7 5.656           <Function test_resolve_transformers_dataset[mock/directory/file.py-dataset2-None-None-DatasetDict]>
#7 5.656           <Function test_resolve_transformers_dataset[mock/directory/file.unk-dataset3-None-None-DatasetDict]>
#7 5.656           <Function test_resolve_transformers_dataset[dataset_arg4-None-val-None-DatasetDict]>
#7 5.656           <Function test_resolve_transformers_dataset[dataset_arg5-None-None-None-Dataset]>
#7 5.656           <Function test_resolve_transformers_dataset[dataset_arg6-None-None-None-IterableDatasetDict]>
#7 5.656           <Function test_resolve_transformers_dataset[dataset_arg7-None-validation-None-IterableDataset]>
#7 5.656           <Function test_resolve_transformers_dataset_invalid>
#7 5.656           <Function test_resolve_transformers_dataset_split[dataset0-None-None-Dataset]>
#7 5.656           <Function test_resolve_transformers_dataset_split[dataset1-None-None-IterableDataset]>
#7 5.656           <Function test_resolve_transformers_dataset_split[dataset2-validation-None-IterableDataset]>
#7 5.656           <Function test_resolve_transformers_dataset_split_missing>
#7 5.656           <Function test_resolve_transformers_dataset_column[dataset0-None-None-text]>
#7 5.656           <Function test_resolve_transformers_dataset_column[dataset1-text-None-text]>
#7 5.656           <Function test_resolve_transformers_dataset_column[dataset2-None-preferred_columns2-text]>
#7 5.656           <Function test_resolve_transformers_dataset_column[dataset3-None-preferred_columns3-text]>
#7 5.656           <Function test_resolve_transformers_dataset_column[dataset4-None-None-text]>
#7 5.656           <Function test_resolve_transformers_dataset_column_missing>
#7 5.656 
#7 5.656 =============================== warnings summary ===============================
#7 5.656 tests/unit/backend/test_base.py:48
#7 5.656   /repo/tests/unit/backend/test_base.py:48: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
#7 5.656     @pytest.mark.asyncio()
#7 5.656 
#7 5.656 tests/unit/backend/test_base.py:94
#7 5.656   /repo/tests/unit/backend/test_base.py:94: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
#7 5.656     @pytest.mark.asyncio()
#7 5.656 
#7 5.656 tests/unit/backend/test_base.py:116
#7 5.656   /repo/tests/unit/backend/test_base.py:116: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
#7 5.656     @pytest.mark.asyncio()
#7 5.656 
#7 5.656 tests/unit/backend/test_base.py:141
#7 5.656   /repo/tests/unit/backend/test_base.py:141: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
#7 5.656     @pytest.mark.asyncio()
#7 5.656 
#7 5.656 tests/unit/backend/test_base.py:164
#7 5.656   /repo/tests/unit/backend/test_base.py:164: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
#7 5.656     @pytest.mark.asyncio()
#7 5.656 
#7 5.656 tests/unit/backend/test_openai_backend.py:153
#7 5.656   /repo/tests/unit/backend/test_openai_backend.py:153: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
#7 5.656     @pytest.mark.asyncio()
#7 5.656 
#7 5.656 tests/unit/backend/test_openai_backend.py:196
#7 5.656   /repo/tests/unit/backend/test_openai_backend.py:196: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
#7 5.656     @pytest.mark.asyncio()
#7 5.656 
#7 5.656 tests/unit/executor/test_base.py:214
#7 5.656   /repo/tests/unit/executor/test_base.py:214: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
#7 5.656     @pytest.mark.asyncio()
#7 5.656 
#7 5.656 tests/unit/executor/test_base.py:329
#7 5.656   /repo/tests/unit/executor/test_base.py:329: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
#7 5.656     @pytest.mark.asyncio()
#7 5.656 
#7 5.656 tests/unit/executor/test_base.py:432
#7 5.656   /repo/tests/unit/executor/test_base.py:432: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
#7 5.656     @pytest.mark.asyncio()
#7 5.656 
#7 5.656 tests/dummy/services/requests.py:7
#7 5.656   /repo/tests/dummy/services/requests.py:7: PytestCollectionWarning: cannot collect test class 'TestRequestGenerator' because it has a __init__ constructor (from: tests/unit/request/test_base.py)
#7 5.656     class TestRequestGenerator(RequestGenerator):
#7 5.656 
#7 5.656 tests/unit/scheduler/test_base.py:112
#7 5.656   /repo/tests/unit/scheduler/test_base.py:112: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
#7 5.656     @pytest.mark.asyncio()
#7 5.656 
#7 5.656 tests/unit/scheduler/test_base.py:197
#7 5.656   /repo/tests/unit/scheduler/test_base.py:197: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
#7 5.656     @pytest.mark.asyncio()
#7 5.656 
#7 5.657 tests/unit/scheduler/test_base.py:205
#7 5.657   /repo/tests/unit/scheduler/test_base.py:205: PytestUnknownMarkWarning: Unknown pytest.mark.flaky - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
#7 5.657     @pytest.mark.flaky(reruns=5)
#7 5.657 
#7 5.657 tests/unit/scheduler/test_load_generator.py:129
#7 5.657   /repo/tests/unit/scheduler/test_load_generator.py:129: PytestUnknownMarkWarning: Unknown pytest.mark.flaky - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
#7 5.657     @pytest.mark.flaky(reruns=5)
#7 5.657 
#7 5.657 -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
#7 5.657 ========================= 345 tests collected in 4.46s =========================
#7 DONE 6.6s

#8 exporting to image
#8 exporting layers
#8 exporting layers 6.0s done
#8 writing image sha256:214555d00f47c7ae01390d93254e4d89fef25bdbaa25489f340e82e5fc58070a done
#8 naming to docker.io/library/tmp:tmp done
#8 DONE 6.1s
