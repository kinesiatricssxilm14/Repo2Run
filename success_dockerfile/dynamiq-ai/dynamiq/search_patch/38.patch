
/repo/dynamiq/nodes/agents/base.py
<<<<<<< SEARCH
    action: str = Field(..., description="Parameter to provide action to the manager")
    model_config = ConfigDict(extra="allow", strict=True, arbitrary_types_allowed=True)

    @model_validator(mode="after")
    def validate_action(self, context):
        action = self.action
        if not action or action not in context.context.get("actions"):
            raise InvalidActionException(
                f"Invalid or missing action: {action}. Please select an action from \
                                 {context.context.get("actions")}.  # nosec: B608
=======
    action: str = Field(..., description="Parameter to provide action to the manager")
    model_config = ConfigDict(extra="allow", strict=True, arbitrary_types_allowed=True)

    @model_validator(mode="after")
    def validate_action(self, context):
        action = self.action
        if not action or action not in context.context.get("actions"):
            raise InvalidActionException(
                f"Invalid or missing action: {action}. Please select an action from \
                                 {context.context.get('actions')}."  # nosec: B608
>>>>>>> REPLACE
        return self
