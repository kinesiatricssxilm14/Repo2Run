#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.06kB done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/python:3.10
#2 DONE 0.0s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/5] FROM docker.io/library/python:3.10
#4 DONE 0.0s

#5 [2/5] RUN mkdir -p ~/.pip && touch ~/.pip/pip.conf &&     echo "[global]" >> ~/.pip/pip.conf && echo "index-url=http://simple/" >> ~/.pip/pip.conf && echo "[install]" >> ~/.pip/pip.conf && echo "trusted-host=pypi..org" >> ~/.pip/pip.conf &&     apt-get update && apt-get install -y curl &&     curl -sSL https://install.python-poetry.org | python -
#5 CACHED

#6 [3/5] RUN pip install pytest pytest-xdist &&     pip install pipdeptree &&     git clone https://github.com/DS4SD/docling.git &&     mkdir /repo &&     git config --global --add safe.directory /repo &&     cp -r /docling/. /repo && rm -rf /docling/ &&     rm -rf /docling &&     cd /repo && git checkout aee9c0b324a07190ad03ad3a6266e76c465d4cdf &&     cd /repo && poetry install
#6 CACHED

#7 [4/5] RUN cd /repo && poetry run pytest --collect-only -q
#7 21.80 tests/test_backend_asciidoc.py::test_asciidocs_examples
#7 21.80 tests/test_backend_docling_parse.py::test_text_cell_counts
#7 21.80 tests/test_backend_docling_parse.py::test_get_text_from_rect
#7 21.80 tests/test_backend_docling_parse.py::test_crop_page_image
#7 21.80 tests/test_backend_docling_parse.py::test_num_pages
#7 21.80 tests/test_backend_docling_parse_v2.py::test_text_cell_counts
#7 21.80 tests/test_backend_docling_parse_v2.py::test_get_text_from_rect
#7 21.80 tests/test_backend_docling_parse_v2.py::test_crop_page_image
#7 21.80 tests/test_backend_docling_parse_v2.py::test_num_pages
#7 21.80 tests/test_backend_html.py::test_heading_levels
#7 21.80 tests/test_backend_html.py::test_e2e_html_conversions
#7 21.80 tests/test_backend_msexcel.py::test_e2e_xlsx_conversions
#7 21.80 tests/test_backend_msword.py::test_heading_levels
#7 21.80 tests/test_backend_msword.py::test_e2e_docx_conversions
#7 21.80 tests/test_backend_pdfium.py::test_text_cell_counts
#7 21.80 tests/test_backend_pdfium.py::test_get_text_from_rect
#7 21.80 tests/test_backend_pdfium.py::test_crop_page_image
#7 21.80 tests/test_backend_pdfium.py::test_num_pages
#7 21.80 tests/test_backend_pptx.py::test_e2e_pptx_conversions
#7 21.80 tests/test_cli.py::test_cli_help
#7 21.80 tests/test_cli.py::test_cli_version
#7 21.80 tests/test_cli.py::test_cli_convert
#7 21.80 tests/test_e2e_conversion.py::test_e2e_pdfs_conversions
#7 21.80 tests/test_e2e_ocr_conversion.py::test_e2e_conversions
#7 21.80 tests/test_input_doc.py::test_in_doc_from_valid_path
#7 21.80 tests/test_input_doc.py::test_in_doc_from_invalid_path
#7 21.80 tests/test_input_doc.py::test_in_doc_from_valid_buf
#7 21.80 tests/test_input_doc.py::test_in_doc_from_invalid_buf
#7 21.80 tests/test_interfaces.py::test_convert_path
#7 21.80 tests/test_interfaces.py::test_convert_stream
#7 21.80 tests/test_invalid_input.py::test_convert_unsupported_doc_format_wout_exception
#7 21.80 tests/test_invalid_input.py::test_convert_unsupported_doc_format_with_exception
#7 21.80 tests/test_invalid_input.py::test_convert_too_small_filesize_limit_wout_exception
#7 21.80 tests/test_invalid_input.py::test_convert_too_small_filesize_limit_with_exception
#7 21.80 tests/test_legacy_format_transform.py::test_compare_legacy_output
#7 21.80 tests/test_options.py::test_e2e_conversions
#7 21.80 tests/test_options.py::test_ocr_coverage_threshold
#7 21.80 
#7 21.80 37 tests collected in 19.16s
#7 DONE 24.1s

#8 exporting to image
#8 exporting layers
#8 exporting layers 77.3s done
#8 writing image sha256:658dc6f26e8b2b8d6eb669a3552d2ccf56312d879688899b30421049578733c0 done
#8 naming to docker.io/library/tmp:tmp done
#8 DONE 77.3s
