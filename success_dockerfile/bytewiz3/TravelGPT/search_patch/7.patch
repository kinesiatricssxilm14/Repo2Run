
/repo/common/utils/email_utils.py
<<<<<<< SEARCH
# Mock send_email to avoid network call
def send_email(subject, content, to_addrs):
    print(f"Mock send_email called with subject: {subject}, content: {content}, to: {to_addrs}")
    return True
def send_email(subject, content, to_addrs):
    print(f"Mock send_email called with subject: {subject}, content: {content}, to: {to_addrs}")
    return True
# Existing code to mock
def send_email(subject, content, to_addrs):
    print(f"Mock send_email called with subject: {subject}, content: {content}, to: {to_addrs}")
    return True
#!/usr/bin/python
# -*- coding: UTF-8 -*-
import smtplib
from email.mime.text import MIMEText
from email.header import Header
# Third-party SMTP service
mail_host = "smtp.XXX.com"  # Set the server
mail_user = "XXXX"  # Username
mail_pass = "XXXXXX"  # Password
sender = 'from@runoob.com'
receivers = ['429240967@qq.com']  # Receive email, you can set it to your QQ email or other email
message = MIMEText('Python email sending test...', 'plain', 'utf-8')
message['From'] = Header("Tutorial", 'utf-8')
message['To'] = Header("Test", 'utf-8')
subject = 'Python SMTP email test'
message['Subject'] = Header(subject, 'utf-8')
try:
    smtpObj = smtplib.SMTP()
    smtpObj.connect(mail_host, 25)  # 25 is the SMTP port number
    smtpObj.login(mail_user, mail_pass)
    smtpObj.sendmail(sender, receivers, message.as_string())
    print
    "Email sent successfully"
except smtplib.SMTPException:
    print
    "Error: Unable to send email"
=======
# Mock send_email to avoid network call
def send_email(subject, content, to_addrs):
    print(f"Mock send_email called with subject: {subject}, content: {content}, to: {to_addrs}")
    return True
>>>>>>> REPLACE
